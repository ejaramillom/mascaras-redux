{
  "_from": "@storybook/addon-links@6.0.28",
  "_id": "@storybook/addon-links@6.0.28",
  "_inBundle": false,
  "_integrity": "sha512-5i0nh8vKQKRZGQAnI05VBPSKnZYlaIeB7sPcAzBvb1a8aSVQS4O1MBS9H5e92iN9N4QD7GujhN0aQh3aRbq/hw==",
  "_location": "/@storybook/addon-links",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "@storybook%2faddon-links",
    "fetchSpec": "6.0.28",
    "name": "@storybook/addon-links",
    "raw": "@storybook/addon-links@6.0.28",
    "rawSpec": "6.0.28",
    "registry": true,
    "saveSpec": null,
    "scope": "@storybook",
    "type": "version"
  },
  "_requiredBy": [
    "#DEV:/",
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/@storybook/addon-links/-/addon-links-6.0.28.tgz",
  "_shasum": "990aa86332de7a745edfc9c98dffff8aa4916bda",
  "_shrinkwrap": null,
  "_spec": "@storybook/addon-links@6.0.28",
  "_where": "/home/leon/Documentos/proyectos/react/mascaras/client",
  "bugs": {
    "url": "https://github.com/storybookjs/storybook/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "@storybook/addons": "6.0.28",
    "@storybook/client-logger": "6.0.28",
    "@storybook/core-events": "6.0.28",
    "@storybook/csf": "0.0.1",
    "@storybook/router": "6.0.28",
    "@types/qs": "^6.9.0",
    "core-js": "^3.0.1",
    "global": "^4.3.2",
    "prop-types": "^15.7.2",
    "qs": "^6.6.0",
    "regenerator-runtime": "^0.13.3",
    "ts-dedent": "^1.1.1"
  },
  "deprecated": false,
  "description": "Story Links addon for storybook",
  "devDependencies": {
    "@types/webpack-env": "^1.15.2",
    "enzyme": "^3.11.0"
  },
  "files": [
    "*.d.ts",
    "*.js",
    "README.md",
    "dist/**/*",
    "ts3.5/**/*"
  ],
  "gitHead": "8c2fb30856de06a7076960cd1421a859923d92d3",
  "homepage": "https://github.com/storybookjs/storybook/tree/master/addons/links",
  "keywords": [
    "addon",
    "storybook"
  ],
  "license": "MIT",
  "main": "dist/index.js",
  "name": "@storybook/addon-links",
  "optionalDependencies": {},
  "peerDependencies": {
    "react": "*",
    "react-dom": "*"
  },
  "publishConfig": {
    "access": "public"
  },
  "readme": "# Story Links Addon\n\nThe Storybook Links addon can be used to create links that navigate between stories in [Storybook](https://storybook.js.org).\n\n[Framework Support](https://github.com/storybookjs/storybook/blob/master/ADDONS_SUPPORT.md)\n\n## Getting Started\n\nInstall this addon by adding the `@storybook/addon-links` dependency:\n\n```sh\nyarn add -D @storybook/addon-links\n```\n\nwithin `.storybook/main.js`:\n\n```js\nmodule.exports = {\n  addons: ['@storybook/addon-links']\n}\n```\n\nThen you can import `linkTo` in your stories and use like this:\n\n```js\nimport { linkTo } from '@storybook/addon-links'\n\nexport default {\n  title: 'Button',\n};\n\nexport const first = () => (\n  <button onClick={linkTo('Button', 'second')}>Go to \"Second\"</button>\n);\nexport const second = () => (\n  <button onClick={linkTo('Button', 'first')}>Go to \"First\"</button>\n);\n```\n\nHave a look at the linkTo function:\n\n```js\nimport { linkTo } from '@storybook/addon-links'\n\nlinkTo('Toggle', 'off')\nlinkTo(() => 'Toggle', () => 'off')\nlinkTo('Toggle') // Links to the first story in the 'Toggle' kind\n```\n\nWith that, you can link an event in a component to any story in the Storybook.\n\n- First parameter is the story kind name (what you named with `title`).\n- Second (optional) parameter is the story name (what you named with `exported name`). \n  If the second parameter is omitted, the link will point to the first story in the given kind.\n\nYou can also pass a function instead for any of above parameter. That function accepts arguments emitted by the event and it should return a string:\n\n```js\nimport { LinkTo, linkTo } from '@storybook/addon-links';\n\nexport default {\n  title: 'Select',\n};\n\nexport const index = () => (\n  <select value=\"Index\" onChange={linkTo('Select', e => e.currentTarget.value)}>\n    <option>index</option>\n    <option>first</option>\n    <option>second</option>\n    <option>third</option>\n  </select>  \n);\nexport const first = () => (\n  <LinkTo story=\"index\">Go back</LinkTo>\n);\nexport const second = () => (\n  <LinkTo story=\"index\">Go back</LinkTo>\n);\nexport const third = () => (\n  <LinkTo story=\"index\">Go back</LinkTo>\n);\n```\n\n## hrefTo function\n\nIf you want to get an URL for a particular story, you may use `hrefTo` function. It returns a promise, which resolves to string containing a relative URL:\n\n```js\nimport { hrefTo } from '@storybook/addon-links';\nimport { action } from '@storybook/addon-actions';\n\nexport default {\n  title: 'Href',\n};\n\nexport const log = () => {\n  hrefTo('Href', 'log').then(action('URL of this story'));\n\n  return <span>See action logger</span>;\n};\n```\n\n## withLinks decorator\n\n`withLinks` decorator enables a declarative way of defining story links, using data attributes.\nHere is an example in React, but it works with any framework:\n\n```js\nimport { withLinks } from '@storybook/addon-links'\n\nexport default {\n  title: 'Button',\n  decorators: [withLinks],\n};\n\nexport const first = () => (\n  <button data-sb-kind=\"OtherKind\" data-sb-story=\"otherStory\">Go to \"OtherStory\"</button>\n);\n```\n\n## LinkTo component (React only)\n\nOne possible way of using `hrefTo` is to create a component that uses native `a` element, but prevents page reloads on plain left click, so that one can still use default browser methods to open link in new tab.\nA React implementation of such a component can be imported from `@storybook/addon-links` package:\n\n```js\nimport LinkTo from '@storybook/addon-links/react';\n\nexport default {\n  title: 'Link',\n};\n\nexport const first = () => (\n  <LinkTo story=\"second\">Go to Second</LinkTo>\n);\nexport const second = () => (\n  <LinkTo story=\"first\">Go to First</LinkTo>\n);\n```\n\nIt accepts all the props the `a` element does, plus `story` and `kind`. It the `kind` prop is omitted, the current kind will be preserved.\n\n```js\n<LinkTo\n  kind=\"Toggle\"\n  story=\"off\"\n  target=\"_blank\"\n  title=\"link to second story\"\n  style={{color: '#1474f3'}}\n>Go to Second</LinkTo>\n```\n\nTo implement such a component for another framework, you need to add special handling for `click` event on native `a` element. See [`RoutedLink` sources](https://github.com/storybookjs/storybook/blob/master/addons/links/src/react/components/RoutedLink.js#L20-L24) for reference. \n",
  "readmeFilename": "README.md",
  "repository": {
    "directory": "addons/links",
    "type": "git",
    "url": "git+https://github.com/storybookjs/storybook.git"
  },
  "scripts": {
    "prepare": "node ../../scripts/prepare.js"
  },
  "types": "dist/index.d.ts",
  "typesVersions": {
    "<=3.5": {
      "*": [
        "ts3.5/*"
      ]
    }
  },
  "version": "6.0.28"
}

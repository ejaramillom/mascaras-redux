function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

/* eslint-disable react/prop-types */
import React from 'react';
import { Message, Button } from '../../index';
import CONSTANTS from '../../constants';
export var BasicUsage = function BasicUsage(_ref) {
  var withoutHeader = _ref.withoutHeader,
      args = _objectWithoutProperties(_ref, ["withoutHeader"]);

  return /*#__PURE__*/React.createElement(Message, args, !withoutHeader && /*#__PURE__*/React.createElement(Message.Header, null, /*#__PURE__*/React.createElement("span", null, "Title"), /*#__PURE__*/React.createElement(Button, {
    remove: true
  })), /*#__PURE__*/React.createElement(Message.Body, null, "Lorem ipsum dolor sit amet, consectetur adipiscing elit.", ' ', /*#__PURE__*/React.createElement("strong", null, "Pellentesque risus mi"), ", tempus quis placerat ut, porta nec nulla. Vestibulum rhoncus ac ex sit amet fringilla. Nullam gravida purus diam, et dictum ", /*#__PURE__*/React.createElement("a", null, "felis venenatis"), " efficitur. Aenean ac", ' ', /*#__PURE__*/React.createElement("em", null, "eleifend lacus"), ", in mollis lectus. Donec sodales, arcu et sollicitudin porttitor, tortor urna tempor ligula, id porttitor mi magna a neque. Donec dui urna, vehicula et sem eget, facilisis sodales sem."));
};
BasicUsage.argTypes = {
  color: {
    description: 'Color of the message block',
    defaultValue: '',
    control: {
      type: 'select',
      options: Object.values(CONSTANTS.COLORS)
    }
  },
  size: {
    description: 'Size of the message bloc',
    defaultValue: undefined,
    control: {
      type: 'select',
      options: ['small', 'medium', 'large']
    }
  },
  withoutHeader: {
    name: 'Hide Header',
    control: {
      type: 'boolean'
    }
  }
};
//# sourceMappingURL=message.story.js.map
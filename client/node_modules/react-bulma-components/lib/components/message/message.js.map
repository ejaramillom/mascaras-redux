{"version":3,"sources":["../../../src/components/message/message.js"],"names":["React","PropTypes","classnames","CONSTANTS","MessageBody","MessageHeader","Element","colors","concat","Object","values","COLORS","Message","children","className","color","size","props","Body","Header","propTypes","oneOf","renderAs","oneOfType","func","string","object","defaultProps"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AAEA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,OAAOC,aAAP,MAA0B,qBAA1B;AAEA,OAAOC,OAAP,MAAoB,YAApB;AAEA,IAAMC,MAAM,GAAG,CAAC,IAAD,EAAOC,MAAP,CAAcC,MAAM,CAACC,MAAP,CAAcP,SAAS,CAACQ,MAAxB,CAAd,CAAf;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU;AAAA;;AAAA,MAAGC,QAAH,QAAGA,QAAH;AAAA,MAAaC,SAAb,QAAaA,SAAb;AAAA,MAAwBC,KAAxB,QAAwBA,KAAxB;AAAA,MAA+BC,IAA/B,QAA+BA,IAA/B;AAAA,MAAwCC,KAAxC;;AAAA,sBACd,oBAAC,OAAD,eACMA,KADN;AAEE,IAAA,SAAS,EAAEf,UAAU,CAAC,SAAD,EAAYY,SAAZ,+DACZC,KADY,GACFA,KADE,6CAEZC,IAFY,GAEHA,IAFG;AAFvB,MAOGH,QAPH,CADc;AAAA,CAAhB;;AAYAD,OAAO,CAACM,IAAR,GAAed,WAAf;AAEAQ,OAAO,CAACO,MAAR,GAAiBd,aAAjB;AAEAO,OAAO,CAACQ,SAAR,GAAoB;AAClB;;;AAGAJ,EAAAA,IAAI,EAAEf,SAAS,CAACoB,KAAV,CAAgB,CAAC,OAAD,EAAU,QAAV,EAAoB,OAApB,CAAhB,CAJY;;AAKlB;;;AAGAN,EAAAA,KAAK,EAAEd,SAAS,CAACoB,KAAV,CAAgBd,MAAhB,CARW;AASlBe,EAAAA,QAAQ,EAAErB,SAAS,CAACsB,SAAV,CAAoB,CAC5BtB,SAAS,CAACuB,IADkB,EAE5BvB,SAAS,CAACwB,MAFkB,EAG5BxB,SAAS,CAACyB,MAHkB,CAApB;AATQ,CAApB;AAgBAd,OAAO,CAACe,YAAR,GAAuB;AACrBL,EAAAA,QAAQ,EAAE;AADW,CAAvB;AAIA,eAAeV,OAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport CONSTANTS from '../../constants';\n\nimport MessageBody from './components/body';\nimport MessageHeader from './components/header';\n\nimport Element from '../element';\n\nconst colors = [null].concat(Object.values(CONSTANTS.COLORS));\n\nconst Message = ({ children, className, color, size, ...props }) => (\n  <Element\n    {...props}\n    className={classnames('message', className, {\n      [`is-${color}`]: color,\n      [`is-${size}`]: size,\n    })}\n  >\n    {children}\n  </Element>\n);\n\nMessage.Body = MessageBody;\n\nMessage.Header = MessageHeader;\n\nMessage.propTypes = {\n  /**\n   * Adjusts the size of the message block.\n   */\n  size: PropTypes.oneOf(['small', 'medium', 'large']),\n  /**\n   * Adjusts the color of the message block. Can be any Bulma color values.\n   */\n  color: PropTypes.oneOf(colors),\n  renderAs: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.string,\n    PropTypes.object,\n  ]),\n};\n\nMessage.defaultProps = {\n  renderAs: 'article',\n};\n\nexport default Message;\n"],"file":"message.js"}
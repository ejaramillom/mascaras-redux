function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

/* eslint-disable react/prop-types */
import React from 'react';
import { Box, Tag, Block } from '../..';
import CONSTANTS from '../../constants';
export var Default = function Default(_ref) {
  var hasAddons = _ref.hasAddons,
      args = _objectWithoutProperties(_ref, ["hasAddons"]);

  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Box, null, /*#__PURE__*/React.createElement(Block, null, "You can use a single tag individualy"), /*#__PURE__*/React.createElement(Block, null, /*#__PURE__*/React.createElement(Tag, args, "Tag Text"))), /*#__PURE__*/React.createElement(Box, null, /*#__PURE__*/React.createElement(Block, null, "Or group then together (Check the hasAddon control ^_^)"), /*#__PURE__*/React.createElement(Block, null, /*#__PURE__*/React.createElement(Tag.Group, {
    hasAddons: hasAddons
  }, /*#__PURE__*/React.createElement(Tag, {
    color: "success"
  }, "My Tag"), /*#__PURE__*/React.createElement(Tag, {
    remove: true
  })), /*#__PURE__*/React.createElement(Tag.Group, {
    hasAddons: hasAddons
  }, /*#__PURE__*/React.createElement(Tag, {
    color: "danger"
  }, "My Second Tag"), /*#__PURE__*/React.createElement(Tag, {
    remove: true
  })), /*#__PURE__*/React.createElement(Tag.Group, {
    hasAddons: hasAddons
  }, /*#__PURE__*/React.createElement(Tag, {
    color: "info"
  }, "npm downloads"), /*#__PURE__*/React.createElement(Tag, null, "18k/month")))));
};
Default.argTypes = {
  color: {
    table: {
      category: 'Tag'
    },
    control: {
      type: 'select',
      options: ['default'].concat(Object.values(CONSTANTS.COLORS))
    }
  },
  size: {
    table: {
      category: 'Tag'
    },
    control: {
      type: 'select',
      options: ['default', 'normal', 'medium', 'large']
    }
  },
  rounded: {
    table: {
      category: 'Tag'
    },
    control: {
      type: 'boolean'
    }
  },
  remove: {
    table: {
      category: 'Tag'
    },
    control: {
      type: 'boolean'
    }
  },
  hasAddons: {
    table: {
      category: 'Tag Group'
    },
    control: {
      type: 'boolean'
    },
    defaultValue: true
  }
};
//# sourceMappingURL=tag.story.js.map
{"version":3,"sources":["../../../src/components/tag/tag.story.js"],"names":["React","Box","Tag","Block","CONSTANTS","Default","hasAddons","args","argTypes","color","table","category","control","type","options","concat","Object","values","COLORS","size","rounded","remove","defaultValue"],"mappings":";;;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,KAAnB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AAEA,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU;AAAA,MAAGC,SAAH,QAAGA,SAAH;AAAA,MAAiBC,IAAjB;;AAAA,sBACrB,uDACE,oBAAC,GAAD,qBACE,oBAAC,KAAD,+CADF,eAEE,oBAAC,KAAD,qBACE,oBAAC,GAAD,EAASA,IAAT,aADF,CAFF,CADF,eAOE,oBAAC,GAAD,qBACE,oBAAC,KAAD,kEADF,eAEE,oBAAC,KAAD,qBACE,oBAAC,GAAD,CAAK,KAAL;AAAW,IAAA,SAAS,EAAED;AAAtB,kBACE,oBAAC,GAAD;AAAK,IAAA,KAAK,EAAC;AAAX,cADF,eAEE,oBAAC,GAAD;AAAK,IAAA,MAAM;AAAX,IAFF,CADF,eAKE,oBAAC,GAAD,CAAK,KAAL;AAAW,IAAA,SAAS,EAAEA;AAAtB,kBACE,oBAAC,GAAD;AAAK,IAAA,KAAK,EAAC;AAAX,qBADF,eAEE,oBAAC,GAAD;AAAK,IAAA,MAAM;AAAX,IAFF,CALF,eASE,oBAAC,GAAD,CAAK,KAAL;AAAW,IAAA,SAAS,EAAEA;AAAtB,kBACE,oBAAC,GAAD;AAAK,IAAA,KAAK,EAAC;AAAX,qBADF,eAEE,oBAAC,GAAD,oBAFF,CATF,CAFF,CAPF,CADqB;AAAA,CAAhB;AA4BPD,OAAO,CAACG,QAAR,GAAmB;AACjBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,KAAK,EAAE;AACLC,MAAAA,QAAQ,EAAE;AADL,KADF;AAILC,IAAAA,OAAO,EAAE;AACPC,MAAAA,IAAI,EAAE,QADC;AAEPC,MAAAA,OAAO,EAAE,CAAC,SAAD,EAAYC,MAAZ,CAAmBC,MAAM,CAACC,MAAP,CAAcb,SAAS,CAACc,MAAxB,CAAnB;AAFF;AAJJ,GADU;AAUjBC,EAAAA,IAAI,EAAE;AACJT,IAAAA,KAAK,EAAE;AACLC,MAAAA,QAAQ,EAAE;AADL,KADH;AAIJC,IAAAA,OAAO,EAAE;AACPC,MAAAA,IAAI,EAAE,QADC;AAEPC,MAAAA,OAAO,EAAE,CAAC,SAAD,EAAY,QAAZ,EAAsB,QAAtB,EAAgC,OAAhC;AAFF;AAJL,GAVW;AAmBjBM,EAAAA,OAAO,EAAE;AACPV,IAAAA,KAAK,EAAE;AACLC,MAAAA,QAAQ,EAAE;AADL,KADA;AAIPC,IAAAA,OAAO,EAAE;AACPC,MAAAA,IAAI,EAAE;AADC;AAJF,GAnBQ;AA2BjBQ,EAAAA,MAAM,EAAE;AACNX,IAAAA,KAAK,EAAE;AACLC,MAAAA,QAAQ,EAAE;AADL,KADD;AAINC,IAAAA,OAAO,EAAE;AACPC,MAAAA,IAAI,EAAE;AADC;AAJH,GA3BS;AAmCjBP,EAAAA,SAAS,EAAE;AACTI,IAAAA,KAAK,EAAE;AACLC,MAAAA,QAAQ,EAAE;AADL,KADE;AAITC,IAAAA,OAAO,EAAE;AACPC,MAAAA,IAAI,EAAE;AADC,KAJA;AAOTS,IAAAA,YAAY,EAAE;AAPL;AAnCM,CAAnB","sourcesContent":["/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { Box, Tag, Block } from '../..';\nimport CONSTANTS from '../../constants';\n\nexport const Default = ({ hasAddons, ...args }) => (\n  <>\n    <Box>\n      <Block>You can use a single tag individualy</Block>\n      <Block>\n        <Tag {...args}>Tag Text</Tag>\n      </Block>\n    </Box>\n    <Box>\n      <Block>Or group then together (Check the hasAddon control ^_^)</Block>\n      <Block>\n        <Tag.Group hasAddons={hasAddons}>\n          <Tag color=\"success\">My Tag</Tag>\n          <Tag remove />\n        </Tag.Group>\n        <Tag.Group hasAddons={hasAddons}>\n          <Tag color=\"danger\">My Second Tag</Tag>\n          <Tag remove />\n        </Tag.Group>\n        <Tag.Group hasAddons={hasAddons}>\n          <Tag color=\"info\">npm downloads</Tag>\n          <Tag>18k/month</Tag>\n        </Tag.Group>\n      </Block>\n    </Box>\n  </>\n);\n\nDefault.argTypes = {\n  color: {\n    table: {\n      category: 'Tag',\n    },\n    control: {\n      type: 'select',\n      options: ['default'].concat(Object.values(CONSTANTS.COLORS)),\n    },\n  },\n  size: {\n    table: {\n      category: 'Tag',\n    },\n    control: {\n      type: 'select',\n      options: ['default', 'normal', 'medium', 'large'],\n    },\n  },\n  rounded: {\n    table: {\n      category: 'Tag',\n    },\n    control: {\n      type: 'boolean',\n    },\n  },\n  remove: {\n    table: {\n      category: 'Tag',\n    },\n    control: {\n      type: 'boolean',\n    },\n  },\n  hasAddons: {\n    table: {\n      category: 'Tag Group',\n    },\n    control: {\n      type: 'boolean',\n    },\n    defaultValue: true,\n  },\n};\n"],"file":"tag.story.js"}
{"version":3,"sources":["../../../../src/components/form/components/textarea.js"],"names":["React","PropTypes","classnames","CONSTANTS","Element","useFieldContext","colors","concat","Object","values","COLORS","Textarea","className","size","color","status","fixedSize","props","context","calculatedSize","propTypes","oneOf","bool","disabled","renderAs","oneOfType","func","string","object","defaultProps"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,eAAP,MAA4B,iBAA5B;AAEA,IAAMC,MAAM,GAAG,CAAC,IAAD,EAAOC,MAAP,CAAcC,MAAM,CAACC,MAAP,CAAcN,SAAS,CAACO,MAAxB,CAAd,CAAf;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAA6D;AAAA;;AAAA,MAA1DC,SAA0D,QAA1DA,SAA0D;AAAA,MAA/CC,IAA+C,QAA/CA,IAA+C;AAAA,MAAzCC,KAAyC,QAAzCA,KAAyC;AAAA,MAAlCC,MAAkC,QAAlCA,MAAkC;AAAA,MAA1BC,SAA0B,QAA1BA,SAA0B;AAAA,MAAZC,KAAY;;AAC5E,MAAMC,OAAO,GAAGb,eAAe,EAA/B;AACA,MAAMc,cAAc,GAAGN,IAAI,IAAIK,OAAO,CAACL,IAAvC;AACA,sBACE,oBAAC,OAAD,eACMI,KADN;AAEE,IAAA,SAAS,EAAEf,UAAU,CAAC,UAAD,EAAaU,SAAb,+DACZG,MADY,SACCA,MADD,gCAEnB,gBAFmB,EAEDC,SAFC,6CAGZG,cAHY,GAGOA,cAHP,6CAIZL,KAJY,GAIFA,KAJE;AAFvB,KADF;AAWD,CAdD;;AAgBAH,QAAQ,CAACS,SAAT,GAAqB;AACnB;;;AAGAP,EAAAA,IAAI,EAAEZ,SAAS,CAACoB,KAAV,CAAgB,CAAC,OAAD,EAAU,QAAV,EAAoB,OAApB,CAAhB,CAJa;;AAKnB;;;AAGAP,EAAAA,KAAK,EAAEb,SAAS,CAACoB,KAAV,CAAgBf,MAAhB,CARY;AASnBS,EAAAA,MAAM,EAAEd,SAAS,CAACoB,KAAV,CAAgB,CAAC,OAAD,EAAU,OAAV,CAAhB,CATW;;AAUnB;;;AAGAL,EAAAA,SAAS,EAAEf,SAAS,CAACqB,IAbF;AAcnBC,EAAAA,QAAQ,EAAEtB,SAAS,CAACqB,IAdD;AAenBE,EAAAA,QAAQ,EAAEvB,SAAS,CAACwB,SAAV,CAAoB,CAC5BxB,SAAS,CAACyB,IADkB,EAE5BzB,SAAS,CAAC0B,MAFkB,EAG5B1B,SAAS,CAAC2B,MAHkB,CAApB;AAfS,CAArB;AAsBAjB,QAAQ,CAACkB,YAAT,GAAwB;AACtBL,EAAAA,QAAQ,EAAE;AADY,CAAxB;AAIA,eAAeb,QAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nimport CONSTANTS from '../../../constants';\nimport Element from '../../element';\nimport useFieldContext from './field/context';\n\nconst colors = [null].concat(Object.values(CONSTANTS.COLORS));\n\nconst Textarea = ({ className, size, color, status, fixedSize, ...props }) => {\n  const context = useFieldContext();\n  const calculatedSize = size || context.size;\n  return (\n    <Element\n      {...props}\n      className={classnames('textarea', className, {\n        [`is-${status}ed`]: status,\n        'has-fixed-size': fixedSize,\n        [`is-${calculatedSize}`]: calculatedSize,\n        [`is-${color}`]: color,\n      })}\n    />\n  );\n};\n\nTextarea.propTypes = {\n  /**\n   * Adjusts the size of the textarea input\n   */\n  size: PropTypes.oneOf(['small', 'medium', 'large']),\n  /**\n   * The color of this input.\n   */\n  color: PropTypes.oneOf(colors),\n  status: PropTypes.oneOf(['focus', 'hover']),\n  /**\n   * Whether the size of this textarea should be fixed regardless of its content.\n   */\n  fixedSize: PropTypes.bool,\n  disabled: PropTypes.bool,\n  renderAs: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.string,\n    PropTypes.object,\n  ]),\n};\n\nTextarea.defaultProps = {\n  renderAs: 'textarea',\n};\n\nexport default Textarea;\n"],"file":"textarea.js"}
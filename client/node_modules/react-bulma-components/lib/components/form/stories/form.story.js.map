{"version":3,"sources":["../../../../src/components/form/stories/form.story.js"],"names":["React","useState","Block","Box","Button","Form","Icon","CONSTANTS","Message","Default","username","setUsername","email","setEmail","subject","setSubject","message","setMessage","tocAgreed","setTocAgreed","questionValue","setQuestionValue","e","target","value","checked","LabelExample","args","argTypes","size","control","type","options","Field","Control","iconLeft","iconRight","defaultValue","loading","fullwidth","InputExample","color","Object","values","COLORS","status","readOnly","isStatic","disabled","rounded","TextAreaExample","rows","fixedSize","SelectExample","withIcon","selectedOption","setSelectedOption","useEffect","multiple","Array","from","selectedOptions","option","description","undefined","CheckboxExample","RadioExample","selectedValue","setSelectedValue","onChange","InputExampleExample","uploadedFile","setUploadedFile","files","align","boxed","label","filename"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Block, Box, Button, Form, Icon } from '../../..';\nimport CONSTANTS from '../../../constants';\nimport Message from '../../message';\n\nexport const Default = () => {\n  const [username, setUsername] = useState('bulma');\n  const [email, setEmail] = useState('hello@');\n  const [subject, setSubject] = useState('');\n  const [message, setMessage] = useState('');\n  const [tocAgreed, setTocAgreed] = useState(false);\n  const [questionValue, setQuestionValue] = useState('');\n\n  return (\n    <form>\n      <Form.Field>\n        <Form.Label>Username</Form.Label>\n        <Form.Control>\n          <Form.Input\n            color=\"success\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n          />\n          <Icon align=\"left\" size=\"small\">\n            <i className=\"fas fa-user\" />\n          </Icon>\n          <Icon align=\"right\" size=\"small\">\n            <i className=\"fas fa-check\" />\n          </Icon>\n        </Form.Control>\n        <Form.Help color=\"success\">This username is available</Form.Help>\n      </Form.Field>\n\n      <Form.Field>\n        <Form.Label>Email</Form.Label>\n        <Form.Control>\n          <Form.Input\n            color=\"danger\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n          <Icon align=\"left\" size=\"small\">\n            <i className=\"fas fa-envelope\" />\n          </Icon>\n          <Icon align=\"right\" size=\"small\">\n            <i className=\"fas fa-exclamation-triangle\" />\n          </Icon>\n        </Form.Control>\n        <Form.Help color=\"danger\">This email is invalid</Form.Help>\n      </Form.Field>\n\n      <Block renderAs=\"fieldset\" disabled>\n        <Form.Field>\n          <Form.Label>Label Text</Form.Label>\n          <Form.Control>\n            <Form.Input placeholder=\"Inside a field set\" />\n          </Form.Control>\n        </Form.Field>\n        <Form.Field>\n          <Form.Label>Another disabled field</Form.Label>\n          <Form.Control>\n            <Form.Input placeholder=\"Another nside a field set\" />\n          </Form.Control>\n        </Form.Field>\n      </Block>\n      <Form.Field>\n        <Form.Label>Subject</Form.Label>\n        <Form.Field kind=\"group\">\n          <Form.Control>\n            <Form.Select\n              value={subject}\n              onChange={(e) => setSubject(e.target.value)}\n            >\n              <option value=\"select-dropdown\">Select dropdown</option>\n              <option value=\"with-options\">With options</option>\n            </Form.Select>\n          </Form.Control>\n          <Form.Control fullwidth loading>\n            <Form.Input placeholder=\"With loading state\" />\n          </Form.Control>\n        </Form.Field>\n      </Form.Field>\n\n      <Form.Field>\n        <Form.Label>Message</Form.Label>\n        <Form.Textarea\n          value={message}\n          onChange={(e) => setMessage(e.target.value)}\n        />\n      </Form.Field>\n\n      <Form.Field>\n        <Form.Control>\n          <Form.Checkbox\n            checked={tocAgreed}\n            onChange={(e) => setTocAgreed(e.target.checked)}\n          >\n            {'  '}I agree to the <a href=\"#\">terms and conditions</a>\n          </Form.Checkbox>\n        </Form.Control>\n      </Form.Field>\n\n      <Form.Field>\n        <Form.Control>\n          <Form.Radio\n            value=\"yes\"\n            name=\"question\"\n            checked={questionValue === 'yes'}\n            onChange={(e) => setQuestionValue(e.target.value)}\n          >\n            {'  '}Yes\n          </Form.Radio>\n          <Form.Radio\n            value=\"no\"\n            name=\"question\"\n            checked={questionValue === 'no'}\n            onChange={(e) => setQuestionValue(e.target.value)}\n          >\n            {'  '}No\n          </Form.Radio>\n        </Form.Control>\n      </Form.Field>\n\n      <Form.Field kind=\"group\">\n        <Form.Control>\n          <Button color=\"link\">Submit</Button>\n        </Form.Control>\n        <Form.Control>\n          <Button color=\"link\" colorVariant=\"light\">\n            Cancel\n          </Button>\n        </Form.Control>\n      </Form.Field>\n    </form>\n  );\n};\n\nexport const LabelExample = (args) => {\n  return (\n    <Form.Field>\n      <Form.Label {...args}>I&apos;m the label of this field</Form.Label>\n      <Form.Control>\n        <Form.Input placeholder=\"Inside a field set\" />\n      </Form.Control>\n    </Form.Field>\n  );\n};\n\nLabelExample.argTypes = {\n  size: {\n    control: {\n      type: 'select',\n      options: ['small', 'medium', 'large'],\n    },\n  },\n};\n\nexport const Field = (args) => (\n  <>\n    <Box>\n      <Message color=\"info\">\n        <Message.Body>Vertical Form</Message.Body>\n      </Message>\n      <Form.Field {...args}>\n        <Form.Label>Field label</Form.Label>\n        <Form.Control>\n          <Form.Input type=\"text\" placeholder=\"Field control - text input\" />\n        </Form.Control>\n        <Form.Help>Help text for this field</Form.Help>\n      </Form.Field>\n      <Form.Field {...args}>\n        <Form.Label>With Button</Form.Label>\n        <Form.Field kind=\"addons\">\n          <Form.Control>\n            <Button disabled>+1</Button>\n          </Form.Control>\n          <Form.Control fullwidth>\n            <Form.Input type=\"tel\" placeholder=\"555-555-555\" />\n          </Form.Control>\n        </Form.Field>\n        <Form.Field kind=\"group\" align=\"center\">\n          <Form.Control>\n            <Button color=\"primary\">Send</Button>\n          </Form.Control>\n          <Form.Control>\n            <Button color=\"info\">Cancel</Button>\n          </Form.Control>\n          <Form.Control>\n            <Button color=\"link\">Reset</Button>\n          </Form.Control>\n        </Form.Field>\n      </Form.Field>\n    </Box>\n    <Box>\n      <Message color=\"info\">\n        <Message.Body>Horizontal Form</Message.Body>\n      </Message>\n      <Form.Field horizontal>\n        <Form.Field.Label>\n          <Form.Label>Field label</Form.Label>\n        </Form.Field.Label>\n        <Form.Field.Body>\n          <Form.Field>\n            <Form.Control>\n              <Form.Input\n                type=\"text\"\n                placeholder=\"Field control - text input\"\n              />\n            </Form.Control>\n            <Form.Help>Help text for this field</Form.Help>\n          </Form.Field>\n        </Form.Field.Body>\n      </Form.Field>\n      <Form.Field horizontal>\n        <Form.Field.Label>\n          <Form.Label>Field label</Form.Label>\n        </Form.Field.Label>\n        <Form.Field.Body>\n          <Form.Field>\n            <Form.Control>\n              <Form.Textarea type=\"text\" placeholder=\"Field control - Aread\" />\n            </Form.Control>\n          </Form.Field>\n        </Form.Field.Body>\n      </Form.Field>\n    </Box>\n  </>\n);\n\nField.argTypes = {\n  size: {\n    control: {\n      type: 'select',\n      options: ['small', 'medium', 'large'],\n    },\n  },\n};\n\nexport const Control = ({ iconLeft, iconRight, ...args }) => (\n  <>\n    <Form.Field>\n      <Form.Label>Username</Form.Label>\n      <Form.Control {...args}>\n        <Form.Input type=\"text\" placeholder=\"e.g. John Doe\" />\n        {iconLeft && (\n          <Icon align=\"left\">\n            <i className=\"fas fa-user\" />\n          </Icon>\n        )}\n        {iconRight && (\n          <Icon align=\"right\">\n            <i className=\"fas fa-check\" />\n          </Icon>\n        )}\n      </Form.Control>\n    </Form.Field>\n    <Form.Field>\n      <Form.Label>Username</Form.Label>\n      <Form.Control>\n        <Form.Select>\n          <option>Option 1</option>\n          <option>Option 2</option>\n          <option>Option 3</option>\n        </Form.Select>\n        <Icon align=\"left\">\n          <i className=\"fas fa-globe\" />\n        </Icon>\n      </Form.Control>\n    </Form.Field>\n  </>\n);\n\nControl.argTypes = {\n  size: {\n    control: {\n      type: 'select',\n      options: ['small', 'medium', 'large'],\n    },\n  },\n  iconLeft: {\n    defaultValue: true,\n    control: {\n      type: 'boolean',\n    },\n  },\n  iconRight: {\n    defaultValue: true,\n    control: {\n      type: 'boolean',\n    },\n  },\n  loading: {\n    defaultValue: false,\n    control: {\n      type: 'boolean',\n    },\n  },\n  fullwidth: {\n    defaultValue: false,\n    control: {\n      type: 'boolean',\n    },\n  },\n};\n\nexport const InputExample = (args) => {\n  return (\n    <>\n      <Form.Field>\n        <Form.Label>Username</Form.Label>\n        <Form.Control>\n          <Form.Input type=\"text\" {...args} placeholder=\"e.g. John Doe\" />\n        </Form.Control>\n      </Form.Field>\n      <Form.Field>\n        <Form.Label>Password</Form.Label>\n        <Form.Control>\n          <Form.Input {...args} type=\"password\" placeholder=\"password\" />\n        </Form.Control>\n      </Form.Field>\n    </>\n  );\n};\n\nInputExample.argTypes = {\n  size: {\n    control: {\n      type: 'select',\n      options: ['small', 'medium', 'large'],\n    },\n  },\n  color: {\n    control: {\n      type: 'select',\n      options: Object.values(CONSTANTS.COLORS),\n    },\n  },\n  status: {\n    control: {\n      type: 'select',\n      options: ['focus', 'hover'],\n    },\n  },\n  readOnly: {\n    control: {\n      type: 'boolean',\n    },\n  },\n  isStatic: {\n    control: {\n      type: 'boolean',\n    },\n  },\n  disabled: {\n    defaultValue: false,\n    control: {\n      type: 'boolean',\n    },\n  },\n  rounded: {\n    control: {\n      type: 'boolean',\n    },\n  },\n};\n\nexport const TextAreaExample = (args) => (\n  <Form.Field>\n    <Form.Control>\n      <Form.Textarea\n        {...args}\n        placeholder=\"I am a textarea\"\n        size={args.size === 'default' ? null : args.size}\n      />\n    </Form.Control>\n  </Form.Field>\n);\n\nTextAreaExample.argTypes = {\n  size: {\n    control: {\n      type: 'select',\n      options: ['default', 'small', 'medium', 'large'],\n    },\n  },\n  color: {\n    control: {\n      type: 'select',\n      options: ['default', ...Object.values(CONSTANTS.COLORS)],\n    },\n  },\n  rows: {\n    control: {\n      type: 'number',\n    },\n  },\n  status: {\n    control: {\n      type: 'select',\n      options: ['focus', 'hover'],\n    },\n  },\n  readOnly: {\n    defaultValue: false,\n    control: {\n      type: 'boolean',\n    },\n  },\n  disabled: {\n    defaultValue: false,\n    control: {\n      type: 'boolean',\n    },\n  },\n  fixedSize: {\n    defaultValue: false,\n    control: {\n      type: 'boolean',\n    },\n  },\n};\n\nexport const SelectExample = ({ withIcon, ...args }) => {\n  const [selectedOption, setSelectedOption] = React.useState('option1');\n  React.useEffect(() => {\n    if (args.multiple) {\n      setSelectedOption([]);\n      return;\n    }\n    setSelectedOption('option1');\n  }, [args.multiple]);\n  return (\n    <Form.Field>\n      <Form.Label>Select an option</Form.Label>\n      <Form.Control>\n        <Form.Select\n          {...args}\n          size={args.size === 'default' ? null : args.size}\n          value={selectedOption}\n          onChange={(e) => {\n            const { value } = e.target;\n            if (args.multiple) {\n              setSelectedOption(\n                Array.from(e.target.selectedOptions, (option) => option.value),\n              );\n              return;\n            }\n            setSelectedOption(value);\n          }}\n        >\n          <option value=\"option1\">Option 1</option>\n          <option value=\"option2\">Option 2</option>\n        </Form.Select>\n        {withIcon && (\n          <Icon align=\"left\">\n            <i className=\"fas fa-user\" />\n          </Icon>\n        )}\n      </Form.Control>\n    </Form.Field>\n  );\n};\n\nSelectExample.argTypes = {\n  color: {\n    description: 'Color of this dropdown',\n    defaultValue: undefined,\n    control: {\n      type: 'select',\n      options: Object.values(CONSTANTS.COLORS),\n    },\n  },\n  size: {\n    description: 'The size of this dropdown',\n    defaultValue: undefined,\n    control: {\n      type: 'select',\n      options: ['default', 'small', 'medium', 'large'],\n    },\n  },\n  rounded: {\n    description:\n      'Whether the dropdown button should have fully rounded corners.',\n    defaultValue: false,\n    control: {\n      type: 'boolean',\n    },\n  },\n  disabled: {\n    defaultValue: false,\n    control: {\n      type: 'boolean',\n    },\n  },\n  loading: {\n    description:\n      'Whether a loading spinner should be shown in place of the dropdown arrow',\n    defaultValue: false,\n    control: {\n      type: 'boolean',\n    },\n  },\n  multiple: {\n    defaultValue: false,\n    control: {\n      type: 'boolean',\n    },\n  },\n  status: {\n    defaultValue: false,\n    control: {\n      type: 'select',\n      options: ['focus', 'hover'],\n    },\n  },\n  withIcon: {\n    defaultValue: false,\n    control: {\n      type: 'boolean',\n    },\n  },\n};\n\nexport const CheckboxExample = (args) => {\n  return (\n    <Form.Field>\n      <Form.Control>\n        <Form.Checkbox {...args}>Remember me</Form.Checkbox>\n      </Form.Control>\n    </Form.Field>\n  );\n};\n\nCheckboxExample.argTypes = {\n  disabled: {\n    control: {\n      type: 'boolean',\n    },\n  },\n};\n\nexport const RadioExample = () => {\n  const [selectedValue, setSelectedValue] = useState('yes');\n  const onChange = (e) => setSelectedValue(e.target.value);\n  return (\n    <Form.Control>\n      <Form.Radio\n        value=\"yes\"\n        name=\"story-radio-name\"\n        checked={selectedValue === 'yes'}\n        onChange={onChange}\n      >\n        Yes\n      </Form.Radio>\n      <Form.Radio\n        value=\"no\"\n        name=\"story-radio-name\"\n        checked={selectedValue === 'no'}\n        onChange={onChange}\n      >\n        No\n      </Form.Radio>\n      <Form.Radio name=\"story-radio-name\" disabled onChange={onChange}>\n        I am disabled\n      </Form.Radio>\n    </Form.Control>\n  );\n};\n\nexport const InputExampleExample = ({ withIcon, ...args }) => {\n  const [uploadedFile, setUploadedFile] = useState();\n\n  return (\n    <Form.InputFile\n      {...args}\n      value={uploadedFile}\n      icon={withIcon ? <i className=\"fas fa-upload\" /> : undefined}\n      onChange={(e) => {\n        setUploadedFile(e.target.files);\n      }}\n    />\n  );\n};\n\nInputExampleExample.argTypes = {\n  color: {\n    defaultValue: undefined,\n    control: {\n      type: 'select',\n      options: Object.values(CONSTANTS.COLORS),\n    },\n  },\n  size: {\n    description: 'The size of this InputFile',\n    defaultValue: undefined,\n    control: {\n      type: 'select',\n      options: ['default', 'small', 'medium', 'large'],\n    },\n  },\n  align: {\n    control: {\n      type: 'select',\n      options: ['center', 'right'],\n    },\n  },\n  boxed: {\n    description: 'Whether this InputFile should be a box',\n    defaultValue: false,\n    control: {\n      type: 'boolean',\n    },\n  },\n  label: {\n    description: 'The label of the upload button',\n    defaultValue: 'Choose a file...',\n    control: {\n      type: 'text',\n    },\n  },\n  filename: {\n    control: {\n      type: 'text',\n    },\n  },\n  withIcon: {\n    control: {\n      type: 'boolean',\n    },\n  },\n};\n"],"file":"form.story.js"}
{"version":3,"sources":["../../../../src/components/columns/components/column.js"],"names":["React","PropTypes","classNames","CONSTANTS","Element","sizes","concat","Object","values","SIZES","Column","children","className","size","offset","narrow","mobile","tablet","desktop","widescreen","fullhd","touch","props","propTypes","oneOf","bool","shape","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CONSTANTS from '../constants';\n\nimport Element from '../../element';\n\nconst sizes = [null, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12].concat(\n  Object.values(CONSTANTS.SIZES),\n);\n\nconst Column = ({\n  children,\n  className,\n  size,\n  offset,\n  narrow,\n  mobile = {},\n  tablet = {},\n  desktop = {},\n  widescreen = {},\n  fullhd = {},\n  touch = {},\n  ...props\n}) => (\n  <Element\n    {...props}\n    {...{ mobile, tablet, desktop, widescreen, fullhd, touch }}\n    className={classNames(className, 'column', {\n      [`is-${size}`]: size,\n      [`is-${touch.size}-mobile`]: touch.size,\n      [`is-${mobile.size}-mobile`]: mobile.size,\n      [`is-${tablet.size}-tablet`]: tablet.size,\n      [`is-${desktop.size}-desktop`]: desktop.size,\n      [`is-${widescreen.size}-widescreen`]: widescreen.size,\n      [`is-${fullhd.size}-fullhd`]: fullhd.size,\n      [`is-offset-${touch.offset}-mobile`]: touch.offset,\n      [`is-offset-${mobile.offset}-mobile`]: mobile.offset,\n      [`is-offset-${tablet.offset}-tablet`]: tablet.offset,\n      [`is-offset-${desktop.offset}-desktop`]: desktop.offset,\n      [`is-offset-${widescreen.offset}-widescreen`]: widescreen.offset,\n      [`is-offset-${fullhd.offset}-fullhd`]: fullhd.offset,\n      [`is-offset-${offset}`]: offset,\n      'is-narrow': narrow,\n      'is-narrow-touch': touch.narrow,\n      'is-narrow-mobile': mobile.narrow,\n      'is-narrow-tablet': tablet.narrow,\n      'is-narrow-desktop': desktop.narrow,\n      'is-narrow-widescreen': widescreen.narrow,\n      'is-narrow-fullhd': fullhd.narrow,\n    })}\n  >\n    {children}\n  </Element>\n);\n\nColumn.propTypes = {\n  /**\n   * The size the column should take. Possible values depends on the sizing method used.\n   * See [below](#sizes) for more details.\n   */\n  size: PropTypes.oneOf(sizes),\n  /**\n   * The amount of offset from the left side of `<Columns />`.\n   * Possible values depends on the sizing method used.\n   * See [below](#offset) for more details.\n   */\n  offset: PropTypes.oneOf(sizes),\n  /**\n   * If you want a column to only take the space it needs, use the narrow modifier. The other column(s) will fill up the remaining space.\n   */\n  narrow: PropTypes.bool,\n  /**\n   * Size, Offset and Narrow props for touch devices (This props are merge with the default responsive props)\n   */\n  touch: PropTypes.shape({\n    size: PropTypes.oneOf(sizes),\n    offset: PropTypes.oneOf(sizes),\n    narrow: PropTypes.bool,\n  }),\n  /**\n   * Size, Offset and Narrow props for Mobile devices (This props are merge with the default responsive props)\n   */\n  mobile: PropTypes.shape({\n    size: PropTypes.oneOf(sizes),\n    offset: PropTypes.oneOf(sizes),\n    narrow: PropTypes.bool,\n  }),\n  /**\n   * Size, Offset and Narrow props for Tablet devices (This props are merge with the default responsive props)\n   */\n  tablet: PropTypes.shape({\n    size: PropTypes.oneOf(sizes),\n    offset: PropTypes.oneOf(sizes),\n    narrow: PropTypes.bool,\n  }),\n  /**\n   * Size, Offset and Narrow props for Desktop devices (This props are merge with the default responsive props)\n   */\n  desktop: PropTypes.shape({\n    size: PropTypes.oneOf(sizes),\n    offset: PropTypes.oneOf(sizes),\n    narrow: PropTypes.bool,\n  }),\n  /**\n   * Size, Offset and Narrow props for WideScreen devices (This props are merge with the default responsive props)\n   */\n  widescreen: PropTypes.shape({\n    size: PropTypes.oneOf(sizes),\n    offset: PropTypes.oneOf(sizes),\n    narrow: PropTypes.bool,\n  }),\n  /**\n   * Size, Offset and Narrow props for FullHD devices (This props are merge with the default responsive props)\n   */\n  fullhd: PropTypes.shape({\n    size: PropTypes.oneOf(sizes),\n    offset: PropTypes.oneOf(sizes),\n    narrow: PropTypes.bool,\n  }),\n};\n\nColumn.defaultProps = {};\n\nexport default Column;\n"],"file":"column.js"}
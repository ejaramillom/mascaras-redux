function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

/* eslint-disable react/prop-types */
import React from 'react';
import { Navbar } from '../..';
import CONSTANTS from '../../constants';
export var Default = function Default(_ref) {
  var arrowless = _ref.arrowless,
      hoverable = _ref.hoverable,
      itemAactive = _ref.itemAactive,
      up = _ref.up,
      right = _ref.right,
      boxed = _ref.boxed,
      args = _objectWithoutProperties(_ref, ["arrowless", "hoverable", "itemAactive", "up", "right", "boxed"]);

  return /*#__PURE__*/React.createElement(Navbar, args, /*#__PURE__*/React.createElement(Navbar.Brand, null, /*#__PURE__*/React.createElement(Navbar.Item, {
    renderAs: "a",
    href: "#"
  }, /*#__PURE__*/React.createElement("img", {
    src: "https://bulma.io/images/bulma-logo.png",
    alt: "Bulma: a modern CSS framework based on Flexbox",
    width: "112",
    height: "28"
  })), /*#__PURE__*/React.createElement(Navbar.Burger, null)), /*#__PURE__*/React.createElement(Navbar.Menu, null, /*#__PURE__*/React.createElement(Navbar.Container, null, /*#__PURE__*/React.createElement(Navbar.Item, {
    hoverable: hoverable,
    active: itemAactive,
    href: "#"
  }, /*#__PURE__*/React.createElement(Navbar.Link, {
    arrowless: arrowless
  }, "First"), /*#__PURE__*/React.createElement(Navbar.Dropdown, {
    up: up,
    right: right,
    boxed: boxed
  }, /*#__PURE__*/React.createElement(Navbar.Item, {
    href: "#"
  }, "Subitem 1"), /*#__PURE__*/React.createElement(Navbar.Item, {
    href: "#"
  }, "Subitem 2"), /*#__PURE__*/React.createElement(Navbar.Divider, null), /*#__PURE__*/React.createElement(Navbar.Item, {
    href: "#"
  }, "After divider"))), /*#__PURE__*/React.createElement(Navbar.Item, {
    href: "#"
  }, "Second")), /*#__PURE__*/React.createElement(Navbar.Container, {
    align: "end"
  }, /*#__PURE__*/React.createElement(Navbar.Item, {
    href: "#"
  }, "At the end"))));
};
Default.argTypes = {
  color: {
    table: {
      category: 'Navbar'
    },
    control: {
      type: 'select',
      options: Object.values(CONSTANTS.COLORS)
    }
  },
  fixed: {
    table: {
      category: 'Navbar'
    },
    control: {
      type: 'select',
      options: ['top', 'bottom']
    }
  },
  active: {
    table: {
      category: 'Navbar'
    },
    control: {
      type: 'boolean'
    }
  },
  transparent: {
    table: {
      category: 'Navbar'
    },
    control: {
      type: 'boolean'
    }
  },
  arrowless: {
    table: {
      category: 'Navbar.Link'
    },
    control: {
      type: 'boolean'
    }
  },
  hoverable: {
    table: {
      category: 'Navbar.Link'
    },
    control: {
      type: 'boolean'
    }
  },
  itemAactive: {
    name: 'active',
    table: {
      category: 'Navbar.Link'
    },
    control: {
      type: 'boolean'
    }
  },
  up: {
    table: {
      category: 'Navbar.Dropdown'
    },
    control: {
      type: 'boolean'
    }
  },
  right: {
    table: {
      category: 'Navbar.Dropdown'
    },
    control: {
      type: 'boolean'
    }
  },
  boxed: {
    table: {
      category: 'Navbar.Dropdown'
    },
    control: {
      type: 'boolean'
    }
  }
};
//# sourceMappingURL=navbar.story.js.map
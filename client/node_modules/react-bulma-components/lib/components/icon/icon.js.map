{"version":3,"sources":["../../../src/components/icon/icon.js"],"names":["React","PropTypes","classnames","CONSTANTS","Element","colors","undefined","concat","Object","values","COLORS","Icon","size","color","className","align","props","propTypes","oneOf","renderAs","oneOfType","func","string","object","defaultProps"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,OAAOC,OAAP,MAAoB,YAApB;AAEA,IAAMC,MAAM,GAAG,CAACC,SAAD,EAAYC,MAAZ,CAAmBC,MAAM,CAACC,MAAP,CAAcN,SAAS,CAACO,MAAxB,CAAnB,CAAf;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO;AAAA;;AAAA,MAAGC,IAAH,QAAGA,IAAH;AAAA,MAASC,KAAT,QAASA,KAAT;AAAA,MAAgBC,SAAhB,QAAgBA,SAAhB;AAAA,MAA2BC,KAA3B,QAA2BA,KAA3B;AAAA,MAAqCC,KAArC;;AAAA,sBACX,oBAAC,OAAD,eACMA,KADN;AAEE,IAAA,SAAS,EAAEd,UAAU,CAAC,MAAD,EAASY,SAAT,+DACZF,IADY,GACHA,IADG,6CAEZG,KAFY,GAEFA,KAFE,mDAGNF,KAHM,GAGIA,KAHJ;AAFvB,KADW;AAAA,CAAb;;AAWAF,IAAI,CAACM,SAAL,GAAiB;AACfL,EAAAA,IAAI,EAAEX,SAAS,CAACiB,KAAV,CAAgB,CAAC,OAAD,EAAU,QAAV,EAAoB,OAApB,EAA6B,MAA7B,CAAhB,CADS;;AAEf;;;AAGAH,EAAAA,KAAK,EAAEd,SAAS,CAACiB,KAAV,CAAgB,CAAC,MAAD,EAAS,OAAT,CAAhB,CALQ;AAMfL,EAAAA,KAAK,EAAEZ,SAAS,CAACiB,KAAV,CAAgBb,MAAhB,CANQ;AAOfc,EAAAA,QAAQ,EAAElB,SAAS,CAACmB,SAAV,CAAoB,CAC5BnB,SAAS,CAACoB,IADkB,EAE5BpB,SAAS,CAACqB,MAFkB,EAG5BrB,SAAS,CAACsB,MAHkB,CAApB;AAPK,CAAjB;AAcAZ,IAAI,CAACa,YAAL,GAAoB;AAClBL,EAAAA,QAAQ,EAAE;AADQ,CAApB;AAIA,eAAeR,IAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nimport CONSTANTS from '../../constants';\nimport Element from '../element';\n\nconst colors = [undefined].concat(Object.values(CONSTANTS.COLORS));\n\nconst Icon = ({ size, color, className, align, ...props }) => (\n  <Element\n    {...props}\n    className={classnames('icon', className, {\n      [`is-${size}`]: size,\n      [`is-${align}`]: align,\n      [`has-text-${color}`]: color,\n    })}\n  />\n);\n\nIcon.propTypes = {\n  size: PropTypes.oneOf(['small', 'medium', 'large', 'auto']),\n  /**\n   * Used when the icon is inside a `Form.Control`\n   */\n  align: PropTypes.oneOf(['left', 'right']),\n  color: PropTypes.oneOf(colors),\n  renderAs: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.string,\n    PropTypes.object,\n  ]),\n};\n\nIcon.defaultProps = {\n  renderAs: 'span',\n};\n\nexport default Icon;\n"],"file":"icon.js"}
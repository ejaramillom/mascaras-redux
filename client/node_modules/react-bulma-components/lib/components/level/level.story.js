function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import React from 'react';
import { Level, Form, Heading, Button, Box } from '../..';
export var Default = function Default(_ref) {
  var centeredItems = _ref.centeredItems,
      args = _objectWithoutProperties(_ref, ["centeredItems"]);

  return /*#__PURE__*/React.createElement(Box, null, centeredItems ? /*#__PURE__*/React.createElement(Level, args, /*#__PURE__*/React.createElement(Level.Item, null, /*#__PURE__*/React.createElement(Heading, {
    size: 5,
    subtitle: true
  }, /*#__PURE__*/React.createElement("strong", null, "123"), " posts")), /*#__PURE__*/React.createElement(Level.Item, null, /*#__PURE__*/React.createElement("strong", null, "All")), /*#__PURE__*/React.createElement(Level.Item, null, /*#__PURE__*/React.createElement("a", null, "Published")), /*#__PURE__*/React.createElement(Level.Item, null, /*#__PURE__*/React.createElement(Button, {
    renderAs: "a",
    color: "success"
  }, "New"))) : /*#__PURE__*/React.createElement(Level, args, /*#__PURE__*/React.createElement(Level.Side, {
    align: "left"
  }, /*#__PURE__*/React.createElement(Level.Item, null, /*#__PURE__*/React.createElement(Heading, {
    size: 5,
    subtitle: true
  }, /*#__PURE__*/React.createElement("strong", null, "123"), " posts")), /*#__PURE__*/React.createElement(Level.Item, null, /*#__PURE__*/React.createElement(Form.Field, {
    kind: "addons"
  }, /*#__PURE__*/React.createElement(Form.Control, null, /*#__PURE__*/React.createElement(Form.Input, {
    placeholder: "Find a post"
  })), /*#__PURE__*/React.createElement(Form.Control, null, /*#__PURE__*/React.createElement(Button, {
    renderAs: "button"
  }, "Search"))))), /*#__PURE__*/React.createElement(Level.Side, {
    align: "right"
  }, /*#__PURE__*/React.createElement(Level.Item, null, /*#__PURE__*/React.createElement("strong", null, "All")), /*#__PURE__*/React.createElement(Level.Item, null, /*#__PURE__*/React.createElement("a", null, "Published")), /*#__PURE__*/React.createElement(Level.Item, null, /*#__PURE__*/React.createElement("a", null, "Drafts")), /*#__PURE__*/React.createElement(Level.Item, null, /*#__PURE__*/React.createElement("a", null, "Deleted")), /*#__PURE__*/React.createElement(Level.Item, null, /*#__PURE__*/React.createElement(Button, {
    renderAs: "a",
    color: "success"
  }, "New")))));
};
Default.argTypes = {
  breakpoint: {
    control: {
      type: 'select',
      options: ['mobile']
    }
  },
  centeredItems: {
    name: 'Center Items',
    control: {
      type: 'boolean'
    }
  }
};
//# sourceMappingURL=level.story.js.map
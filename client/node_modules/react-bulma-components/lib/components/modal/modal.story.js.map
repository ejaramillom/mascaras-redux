{"version":3,"sources":["../../../src/components/modal/modal.story.js"],"names":["React","useState","Button","Block","Content","Image","Media","Modal","Default","args","openModal","setOpenModal","Group","argTypes","showClose","control","type"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,OAAxB,EAAiCC,KAAjC,EAAwCC,KAAxC,EAA+CC,KAA/C,QAA4D,OAA5D;AAEA,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,IAAD,EAAU;AAAA,kBACGR,QAAQ,EADX;AAAA;AAAA,MACxBS,SADwB;AAAA,MACbC,YADa;;AAE/B,sBACE,uDACE,oBAAC,MAAD,CAAQ,KAAR;AAAc,IAAA,QAAQ,EAAER;AAAxB,kBACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,MAAd;AAAqB,IAAA,OAAO,EAAE;AAAA,aAAMQ,YAAY,CAAC,MAAD,CAAlB;AAAA;AAA9B,uBADF,CADF,eAME,oBAAC,KAAD,eACMF,IADN;AAEE,IAAA,IAAI,EAAEC,SAAS,KAAK,MAFtB;AAGE,IAAA,OAAO,EAAE;AAAA,aAAMC,YAAY,EAAlB;AAAA;AAHX,mBAKE,oBAAC,KAAD,CAAO,IAAP,qBACE,oBAAC,KAAD,CAAO,IAAP,CAAY,MAAZ;AAAmB,IAAA,SAAS;AAA5B,kBACE,oBAAC,KAAD,CAAO,IAAP,CAAY,KAAZ,gBADF,CADF,eAIE,oBAAC,KAAD,CAAO,IAAP,CAAY,IAAZ,qBACE,oBAAC,KAAD,qBACE,oBAAC,KAAD,CAAO,IAAP;AAAY,IAAA,QAAQ,EAAC,QAArB;AAA8B,IAAA,KAAK,EAAC;AAApC,kBACE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAE,EADR;AAEE,IAAA,GAAG,EAAC,OAFN;AAGE,IAAA,GAAG,EAAC;AAHN,IADF,CADF,eAQE,oBAAC,KAAD,CAAO,IAAP,qBACE,oBAAC,OAAD,qBACE,4CACE,iDADF,oBAC8B,gDAD9B,EACwD,GADxD,eAEE,yCAFF,eAGE,+BAHF,kMADF,CADF,CARF,CADF,CAJF,eA4BE,oBAAC,KAAD,CAAO,IAAP,CAAY,MAAZ;AAAmB,IAAA,QAAQ,EAAET,MAAM,CAACU,KAApC;AAA2C,IAAA,KAAK,EAAC,OAAjD;AAAyD,IAAA,SAAS;AAAlE,kBACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC;AAAd,YADF,eAEE,oBAAC,MAAD,gBAFF,CA5BF,CALF,CANF,CADF;AAgDD,CAlDM;AAoDPJ,OAAO,CAACK,QAAR,GAAmB;AACjBC,EAAAA,SAAS,EAAE;AACTC,IAAAA,OAAO,EAAE;AACPC,MAAAA,IAAI,EAAE;AADC;AADA;AADM,CAAnB","sourcesContent":["import React, { useState } from 'react';\nimport { Button, Block, Content, Image, Media, Modal } from '../..';\n\nexport const Default = (args) => {\n  const [openModal, setOpenModal] = useState();\n  return (\n    <>\n      <Button.Group renderAs={Block}>\n        <Button color=\"info\" onClick={() => setOpenModal('card')}>\n          Open Card Modal\n        </Button>\n      </Button.Group>\n      <Modal\n        {...args}\n        show={openModal === 'card'}\n        onClose={() => setOpenModal()}\n      >\n        <Modal.Card>\n          <Modal.Card.Header showClose>\n            <Modal.Card.Title>Title</Modal.Card.Title>\n          </Modal.Card.Header>\n          <Modal.Card.Body>\n            <Media>\n              <Media.Item renderAs=\"figure\" align=\"left\">\n                <Image\n                  size={64}\n                  alt=\"64x64\"\n                  src=\"http://bulma.io/images/placeholders/128x128.png\"\n                />\n              </Media.Item>\n              <Media.Item>\n                <Content>\n                  <p>\n                    <strong>John Smith</strong> <small>@johnsmith</small>{' '}\n                    <small>31m</small>\n                    <br />\n                    If the children of the Modal is a card, the close button\n                    will be on the Card Head instead than the top-right corner\n                    You can also pass showClose = false to Card.Head to hide the\n                    close button\n                  </p>\n                </Content>\n              </Media.Item>\n            </Media>\n          </Modal.Card.Body>\n          <Modal.Card.Footer renderAs={Button.Group} align=\"right\" hasAddons>\n            <Button color=\"success\">Like</Button>\n            <Button>Share</Button>\n          </Modal.Card.Footer>\n        </Modal.Card>\n      </Modal>\n    </>\n  );\n};\n\nDefault.argTypes = {\n  showClose: {\n    control: {\n      type: 'boolean',\n    },\n  },\n};\n"],"file":"modal.story.js"}
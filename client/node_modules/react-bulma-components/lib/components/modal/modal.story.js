function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

import React, { useState } from 'react';
import { Button, Block, Content, Image, Media, Modal } from '../..';
export var Default = function Default(args) {
  var _useState = useState(),
      _useState2 = _slicedToArray(_useState, 2),
      openModal = _useState2[0],
      setOpenModal = _useState2[1];

  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button.Group, {
    renderAs: Block
  }, /*#__PURE__*/React.createElement(Button, {
    color: "info",
    onClick: function onClick() {
      return setOpenModal('card');
    }
  }, "Open Card Modal")), /*#__PURE__*/React.createElement(Modal, _extends({}, args, {
    show: openModal === 'card',
    onClose: function onClose() {
      return setOpenModal();
    }
  }), /*#__PURE__*/React.createElement(Modal.Card, null, /*#__PURE__*/React.createElement(Modal.Card.Header, {
    showClose: true
  }, /*#__PURE__*/React.createElement(Modal.Card.Title, null, "Title")), /*#__PURE__*/React.createElement(Modal.Card.Body, null, /*#__PURE__*/React.createElement(Media, null, /*#__PURE__*/React.createElement(Media.Item, {
    renderAs: "figure",
    align: "left"
  }, /*#__PURE__*/React.createElement(Image, {
    size: 64,
    alt: "64x64",
    src: "http://bulma.io/images/placeholders/128x128.png"
  })), /*#__PURE__*/React.createElement(Media.Item, null, /*#__PURE__*/React.createElement(Content, null, /*#__PURE__*/React.createElement("p", null, /*#__PURE__*/React.createElement("strong", null, "John Smith"), " ", /*#__PURE__*/React.createElement("small", null, "@johnsmith"), ' ', /*#__PURE__*/React.createElement("small", null, "31m"), /*#__PURE__*/React.createElement("br", null), "If the children of the Modal is a card, the close button will be on the Card Head instead than the top-right corner You can also pass showClose = false to Card.Head to hide the close button"))))), /*#__PURE__*/React.createElement(Modal.Card.Footer, {
    renderAs: Button.Group,
    align: "right",
    hasAddons: true
  }, /*#__PURE__*/React.createElement(Button, {
    color: "success"
  }, "Like"), /*#__PURE__*/React.createElement(Button, null, "Share")))));
};
Default.argTypes = {
  showClose: {
    control: {
      type: 'boolean'
    }
  }
};
//# sourceMappingURL=modal.story.js.map
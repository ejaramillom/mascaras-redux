{"ast":null,"code":"function ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport CONSTANTS from '../../constants';\nimport modifiers from '../../modifiers';\nimport Element from '../element';\nimport renderAsShape from '../../modifiers/render-as';\nvar breakpoints = [null].concat(Object.values(CONSTANTS.BREAKPOINTS));\n\nvar Container = function Container(_ref) {\n  var children = _ref.children,\n      fluid = _ref.fluid,\n      breakpoint = _ref.breakpoint,\n      className = _ref.className,\n      props = _objectWithoutProperties(_ref, [\"children\", \"fluid\", \"breakpoint\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(Element, _extends({}, props, {\n    className: classnames('container', className, _defineProperty({\n      'is-fluid': fluid\n    }, \"is-\".concat(breakpoint), breakpoint))\n  }), children);\n};\n\nContainer.propTypes = _objectSpread(_objectSpread({}, modifiers.propTypes), {}, {\n  /**\n   * Whether this container is fluid. If true, the container\n   * will be fullwidth, but will also leave 32px on left and right side.\n   */\n  fluid: PropTypes.bool,\n\n  /**\n   * Specifies the breakpoint at which the container will stop being fullwidth.\n   */\n  breakpoint: PropTypes.oneOf(breakpoints),\n  children: PropTypes.node,\n\n  /**\n   * Additional CSS classes to pass to `<Container />`.\n   * They will sit alongside pre-applied bulma classes.\n   */\n  className: PropTypes.string,\n  style: PropTypes.shape({}),\n\n  /**\n   * Specifies what component `<Container />` should be rendered as.\n   */\n  renderAs: renderAsShape\n});\nContainer.defaultProps = _objectSpread(_objectSpread({}, modifiers.defaultProps), {}, {\n  fluid: false,\n  children: null,\n  breakpoint: undefined,\n  className: undefined,\n  style: undefined,\n  renderAs: 'div'\n});\nexport default Container;","map":{"version":3,"sources":["../../../src/components/container/container.js"],"names":["breakpoints","Object","CONSTANTS","Container","children","fluid","breakpoint","className","props","classnames","modifiers","PropTypes","style","renderAs","renderAsShape"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,SAAA,MAAA,YAAA;AACA,OAAA,UAAA,MAAA,YAAA;AACA,OAAA,SAAA,MAAA,iBAAA;AACA,OAAA,SAAA,MAAA,iBAAA;AACA,OAAA,OAAA,MAAA,YAAA;AACA,OAAA,aAAA,MAAA,2BAAA;AAEA,IAAMA,WAAW,GAAG,CAAA,IAAA,EAAA,MAAA,CAAcC,MAAM,CAANA,MAAAA,CAAcC,SAAS,CAAzD,WAAkCD,CAAd,CAApB;;AAEA,IAAME,SAAS,GAAG,SAAZA,SAAY,CAAA,IAAA,EAAA;AAAA,MAAGC,QAAH,GAAA,IAAA,CAAA,QAAA;AAAA,MAAaC,KAAb,GAAA,IAAA,CAAA,KAAA;AAAA,MAAoBC,UAApB,GAAA,IAAA,CAAA,UAAA;AAAA,MAAgCC,SAAhC,GAAA,IAAA,CAAA,SAAA;AAAA,MAA8CC,KAA9C,GAAA,wBAAA,CAAA,IAAA,EAAA,CAAA,UAAA,EAAA,OAAA,EAAA,YAAA,EAAA,WAAA,CAAA,CAAA;;AAAA,SAAA,aAChB,KAAA,CAAA,aAAA,CAAA,OAAA,EAAA,QAAA,CAAA,EAAA,EAAA,KAAA,EAAA;AAEE,IAAA,SAAS,EAAEC,UAAU,CAAA,WAAA,EAAA,SAAA,EAAA,eAAA,CAAA;AACnB,kBAAYJ;AADO,KAAA,EAAA,MAAA,MAAA,CAAA,UAAA,CAAA,EAAA,UAAA,CAAA;AAFvB,GAAA,CAAA,EADgB,QAChB,CADgB;AAAlB,CAAA;;AAYAF,SAAS,CAATA,SAAAA,GAAAA,aAAAA,CAAAA,aAAAA,CAAAA,EAAAA,EACKO,SAAS,CADdP,SAAAA,CAAAA,EAAAA,EAAAA,EAAAA;AAEE;;;;AAIAE,EAAAA,KAAK,EAAEM,SAAS,CANlBR,IAAAA;;AAOE;;;AAGAG,EAAAA,UAAU,EAAEK,SAAS,CAATA,KAAAA,CAVdR,WAUcQ,CAVdR;AAWEC,EAAAA,QAAQ,EAAEO,SAAS,CAXrBR,IAAAA;;AAYE;;;;AAIAI,EAAAA,SAAS,EAAEI,SAAS,CAhBtBR,MAAAA;AAiBES,EAAAA,KAAK,EAAED,SAAS,CAATA,KAAAA,CAjBTR,EAiBSQ,CAjBTR;;AAkBE;;;AAGAU,EAAAA,QAAQ,EAAEC;AArBZX,CAAAA,CAAAA;AAwBAA,SAAS,CAATA,YAAAA,GAAAA,aAAAA,CAAAA,aAAAA,CAAAA,EAAAA,EACKO,SAAS,CADdP,YAAAA,CAAAA,EAAAA,EAAAA,EAAAA;AAEEE,EAAAA,KAAK,EAFPF,KAAAA;AAGEC,EAAAA,QAAQ,EAHVD,IAAAA;AAIEG,EAAAA,UAAU,EAJZH,SAAAA;AAKEI,EAAAA,SAAS,EALXJ,SAAAA;AAMES,EAAAA,KAAK,EANPT,SAAAA;AAOEU,EAAAA,QAAQ,EAAE;AAPZV,CAAAA,CAAAA;AAUA,eAAA,SAAA","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport CONSTANTS from '../../constants';\nimport modifiers from '../../modifiers';\nimport Element from '../element';\nimport renderAsShape from '../../modifiers/render-as';\n\nconst breakpoints = [null].concat(Object.values(CONSTANTS.BREAKPOINTS));\n\nconst Container = ({ children, fluid, breakpoint, className, ...props }) => (\n  <Element\n    {...props}\n    className={classnames('container', className, {\n      'is-fluid': fluid,\n      [`is-${breakpoint}`]: breakpoint,\n    })}\n  >\n    {children}\n  </Element>\n);\n\nContainer.propTypes = {\n  ...modifiers.propTypes,\n  /**\n   * Whether this container is fluid. If true, the container\n   * will be fullwidth, but will also leave 32px on left and right side.\n   */\n  fluid: PropTypes.bool,\n  /**\n   * Specifies the breakpoint at which the container will stop being fullwidth.\n   */\n  breakpoint: PropTypes.oneOf(breakpoints),\n  children: PropTypes.node,\n  /**\n   * Additional CSS classes to pass to `<Container />`.\n   * They will sit alongside pre-applied bulma classes.\n   */\n  className: PropTypes.string,\n  style: PropTypes.shape({}),\n  /**\n   * Specifies what component `<Container />` should be rendered as.\n   */\n  renderAs: renderAsShape,\n};\n\nContainer.defaultProps = {\n  ...modifiers.defaultProps,\n  fluid: false,\n  children: null,\n  breakpoint: undefined,\n  className: undefined,\n  style: undefined,\n  renderAs: 'div',\n};\n\nexport default Container;\n"]},"metadata":{},"sourceType":"module"}
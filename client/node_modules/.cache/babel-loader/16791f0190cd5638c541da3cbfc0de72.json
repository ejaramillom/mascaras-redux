{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport CONSTANTS from '../../constants';\nimport ButtonGroup from './components/button-group';\nimport Element from '../element';\nvar colors = [null, ''].concat(Object.values(CONSTANTS.COLORS));\n\nvar Button = function Button(_ref) {\n  var _classnames;\n\n  var children = _ref.children,\n      className = _ref.className,\n      renderAs = _ref.renderAs,\n      color = _ref.color,\n      size = _ref.size,\n      outlined = _ref.outlined,\n      inverted = _ref.inverted,\n      submit = _ref.submit,\n      reset = _ref.reset,\n      fullwidth = _ref.fullwidth,\n      focused = _ref.focused,\n      hovered = _ref.hovered,\n      active = _ref.active,\n      loading = _ref.loading,\n      disabled = _ref.disabled,\n      remove = _ref.remove,\n      isSelected = _ref.isSelected,\n      isStatic = _ref.isStatic,\n      rounded = _ref.rounded,\n      onClick = _ref.onClick,\n      text = _ref.text,\n      props = _objectWithoutProperties(_ref, [\"children\", \"className\", \"renderAs\", \"color\", \"size\", \"outlined\", \"inverted\", \"submit\", \"reset\", \"fullwidth\", \"focused\", \"hovered\", \"active\", \"loading\", \"disabled\", \"remove\", \"isSelected\", \"isStatic\", \"rounded\", \"onClick\", \"text\"]);\n\n  var otherProps = {};\n\n  if (submit) {\n    otherProps = {\n      type: 'submit',\n      renderAs: 'button'\n    };\n  }\n\n  if (reset) {\n    otherProps = {\n      type: 'reset',\n      renderAs: 'button'\n    };\n  }\n\n  if (isStatic) {\n    otherProps = {\n      renderAs: 'span'\n    };\n  }\n\n  return /*#__PURE__*/React.createElement(Element, _extends({\n    tabIndex: disabled ? -1 : 0,\n    renderAs: renderAs\n  }, props, otherProps, {\n    disabled: disabled,\n    onClick: disabled ? undefined : onClick,\n    className: classnames(className, (_classnames = {}, _defineProperty(_classnames, \"is-\".concat(color), color), _defineProperty(_classnames, \"is-\".concat(size), size), _defineProperty(_classnames, 'is-selected', isSelected), _defineProperty(_classnames, 'is-static', isStatic), _defineProperty(_classnames, 'is-rounded', rounded), _defineProperty(_classnames, 'is-outlined', outlined), _defineProperty(_classnames, 'is-inverted', inverted), _defineProperty(_classnames, 'is-fullwidth', fullwidth), _defineProperty(_classnames, 'is-hovered', hovered), _defineProperty(_classnames, 'is-focused', focused), _defineProperty(_classnames, 'is-active', active), _defineProperty(_classnames, 'is-loading', loading), _defineProperty(_classnames, 'is-text', text), _defineProperty(_classnames, \"delete\", remove), _defineProperty(_classnames, \"button\", !remove), _classnames))\n  }), children);\n};\n\nButton.Group = ButtonGroup;\nButton.propTypes = {\n  color: PropTypes.oneOf(colors),\n\n  /**\n   * Size of Button\n   */\n  size: PropTypes.oneOf(['small', 'medium', 'large']),\n\n  /**\n   * Whether Button should have an outline.\n   */\n  outlined: PropTypes.bool,\n\n  /**\n   * Whether Button should have an inverted color scheme. Useful when button is used on colored background\n   */\n  inverted: PropTypes.bool,\n  submit: PropTypes.bool,\n  reset: PropTypes.bool,\n  hovered: PropTypes.bool,\n  focused: PropTypes.bool,\n  active: PropTypes.bool,\n  loading: PropTypes.bool,\n\n  /**\n   * Whether Button should occupy the full width of parent\n   */\n  fullwidth: PropTypes.bool,\n  disabled: PropTypes.bool,\n  remove: PropTypes.bool,\n\n  /**\n   * Whether Button is selected. Useful in a Button.Group.\n   */\n  isSelected: PropTypes.bool,\n\n  /**\n   * Whether Button is non-interactive/static.\n   */\n  isStatic: PropTypes.bool,\n\n  /**\n   * Whether Button should have fully-rounded corners\n   */\n  rounded: PropTypes.bool,\n\n  /**\n   * Whether Button is a text button.\n   */\n  text: PropTypes.bool,\n  renderAs: PropTypes.oneOfType([PropTypes.func, PropTypes.string, PropTypes.object])\n};\nButton.defaultProps = {\n  renderAs: 'button',\n  color: undefined,\n  size: undefined,\n  outlined: undefined,\n  inverted: undefined,\n  submit: undefined,\n  reset: undefined,\n  fullwidth: undefined,\n  hovered: undefined,\n  focused: undefined,\n  active: undefined,\n  loading: undefined,\n  disabled: undefined,\n  remove: undefined,\n  isSelected: undefined,\n  isStatic: undefined,\n  rounded: undefined,\n  text: undefined\n};\nexport default Button;","map":{"version":3,"sources":["../../../src/components/button/button.js"],"names":["colors","Object","CONSTANTS","Button","children","className","renderAs","color","size","outlined","inverted","submit","reset","fullwidth","focused","hovered","active","loading","disabled","remove","isSelected","isStatic","rounded","onClick","text","props","otherProps","type","classnames","PropTypes","undefined"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport CONSTANTS from '../../constants';\nimport ButtonGroup from './components/button-group';\nimport Element from '../element';\n\nconst colors = [null, ''].concat(Object.values(CONSTANTS.COLORS));\n\nconst Button = ({\n  children,\n  className,\n  renderAs,\n  color,\n  size,\n  outlined,\n  inverted,\n  submit,\n  reset,\n  fullwidth,\n  focused,\n  hovered,\n  active,\n  loading,\n  disabled,\n  remove,\n  isSelected,\n  isStatic,\n  rounded,\n  onClick,\n  text,\n  ...props\n}) => {\n  let otherProps = {};\n  if (submit) {\n    otherProps = {\n      type: 'submit',\n      renderAs: 'button',\n    };\n  }\n  if (reset) {\n    otherProps = {\n      type: 'reset',\n      renderAs: 'button',\n    };\n  }\n\n  if (isStatic) {\n    otherProps = {\n      renderAs: 'span',\n    };\n  }\n\n  return (\n    <Element\n      tabIndex={disabled ? -1 : 0}\n      renderAs={renderAs}\n      {...props}\n      {...otherProps}\n      disabled={disabled}\n      onClick={disabled ? undefined : onClick}\n      className={classnames(className, {\n        [`is-${color}`]: color,\n        [`is-${size}`]: size,\n        'is-selected': isSelected,\n        'is-static': isStatic,\n        'is-rounded': rounded,\n        'is-outlined': outlined,\n        'is-inverted': inverted,\n        'is-fullwidth': fullwidth,\n        'is-hovered': hovered,\n        'is-focused': focused,\n        'is-active': active,\n        'is-loading': loading,\n        'is-text': text,\n        delete: remove,\n        button: !remove,\n      })}\n    >\n      {children}\n    </Element>\n  );\n};\n\nButton.Group = ButtonGroup;\n\nButton.propTypes = {\n  color: PropTypes.oneOf(colors),\n  /**\n   * Size of Button\n   */\n  size: PropTypes.oneOf(['small', 'medium', 'large']),\n  /**\n   * Whether Button should have an outline.\n   */\n  outlined: PropTypes.bool,\n  /**\n   * Whether Button should have an inverted color scheme. Useful when button is used on colored background\n   */\n  inverted: PropTypes.bool,\n  submit: PropTypes.bool,\n  reset: PropTypes.bool,\n  hovered: PropTypes.bool,\n  focused: PropTypes.bool,\n  active: PropTypes.bool,\n  loading: PropTypes.bool,\n  /**\n   * Whether Button should occupy the full width of parent\n   */\n  fullwidth: PropTypes.bool,\n  disabled: PropTypes.bool,\n  remove: PropTypes.bool,\n  /**\n   * Whether Button is selected. Useful in a Button.Group.\n   */\n  isSelected: PropTypes.bool,\n  /**\n   * Whether Button is non-interactive/static.\n   */\n  isStatic: PropTypes.bool,\n  /**\n   * Whether Button should have fully-rounded corners\n   */\n  rounded: PropTypes.bool,\n  /**\n   * Whether Button is a text button.\n   */\n  text: PropTypes.bool,\n  renderAs: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.string,\n    PropTypes.object,\n  ]),\n};\n\nButton.defaultProps = {\n  renderAs: 'button',\n  color: undefined,\n  size: undefined,\n  outlined: undefined,\n  inverted: undefined,\n  submit: undefined,\n  reset: undefined,\n  fullwidth: undefined,\n  hovered: undefined,\n  focused: undefined,\n  active: undefined,\n  loading: undefined,\n  disabled: undefined,\n  remove: undefined,\n  isSelected: undefined,\n  isStatic: undefined,\n  rounded: undefined,\n  text: undefined,\n};\n\nexport default Button;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/leon/Documentos/proyectos/react/mascaras/client/src/components/Build.component.js\";\nimport React, { useState, useEffect } from 'react';\nimport '../App.css';\nimport { select, boolean } from '@storybook/addon-knobs';\nimport Button from 'react-bulma-components/lib/components/button';\nimport Section from 'react-bulma-components/lib/components/section';\nimport Container from 'react-bulma-components/lib/components/container';\nimport Heading from 'react-bulma-components/lib/components/heading';\nimport { useQuery } from \"react-query\";\nimport { BottleModal, BrushModal, RodModal, CapModal, WiperModal } from './OpenModal.component';\nimport { Compatibility } from './Compatibility.component';\nimport { getBuild } from \"../middlewares/services\";\nimport axios from \"axios\";\n\nconst verifyThread = data => {\n  if (data.bottle && data.rod) {\n    if (data.bottle.thread === data.rod.thread) {\n      return true;\n    }\n  }\n};\n\nconst Build = () => {\n  const [thread, setThread] = useState(false);\n  const [build, setBuild] = useState([]);\n  const {\n    status,\n    isLoading,\n    error,\n    data\n  } = useQuery(\"build\", getBuild);\n  useEffect(() => {\n    const fetchThread = async data => {\n      const resultThread = await verifyThread(data);\n      setThread(resultThread);\n    };\n\n    if (!status) return;\n    if (!data) return;\n\n    if (status === \"success\") {\n      setBuild([data]);\n    }\n\n    setThread(verifyThread(data));\n  }, []);\n  if (isLoading) return \"Loading...\";\n\n  if (error) {\n    return \"Oops! \" + error.message;\n  }\n\n  const deleteBuild = async () => {\n    await axios.post(\"/delete\").then(function (response) {\n      if (response.status === 200) {\n        console.log(\"Succesfully deleted\");\n        alert(\"Build deleted!\");\n      } else {\n        const err = new Error(response.error);\n        console.log(err);\n        throw err;\n      }\n    }).catch(function (error) {\n      alert(error);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Compatibility, {\n    thread: thread,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Section, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, data.map(element => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, element.bottle ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    key: element.bottle.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, element.bottle.name), /*#__PURE__*/React.createElement(\"li\", {\n    key: element.bottle.thread,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, element.bottle.thread, \" \")) : \"\", element.brush ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    key: element.brush.brush,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }, element.brush.brush)) : \"\", element.rod ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    key: element.rod.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }, element.rod.name), /*#__PURE__*/React.createElement(\"li\", {\n    key: element.rod.thread,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }, element.rod.thread)) : \"\"))), /*#__PURE__*/React.createElement(Section, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"info\",\n    onClick: () => {\n      deleteBuild();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, \"Erase build\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"info\",\n    onClick: () => {\n      verifyThread(data);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, \"thread\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Heading, {\n    size: 5,\n    renderAs: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, \"Build\"), /*#__PURE__*/React.createElement(Heading, {\n    subtitle: true,\n    renderAs: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, \"Mascara\")), /*#__PURE__*/React.createElement(Button.Group, {\n    hasAddons: boolean('hasAddons', false),\n    position: \"centered\",\n    size: select('Size', {\n      small: 'small',\n      medium: 'medium',\n      large: 'large'\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(BottleModal, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(BrushModal, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(RodModal, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default Build;","map":{"version":3,"sources":["/home/leon/Documentos/proyectos/react/mascaras/client/src/components/Build.component.js"],"names":["React","useState","useEffect","select","boolean","Button","Section","Container","Heading","useQuery","BottleModal","BrushModal","RodModal","CapModal","WiperModal","Compatibility","getBuild","axios","verifyThread","data","bottle","rod","thread","Build","setThread","build","setBuild","status","isLoading","error","fetchThread","resultThread","message","deleteBuild","post","then","response","console","log","alert","err","Error","catch","map","element","name","brush","small","medium","large"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAO,YAAP;AACA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,wBAAhC;AACA,OAAOC,MAAP,MAAmB,8CAAnB;AACA,OAAOC,OAAP,MAAoB,+CAApB;AACA,OAAOC,SAAP,MAAsB,iDAAtB;AACA,OAAOC,OAAP,MAAoB,+CAApB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SACEC,WADF,EAEEC,UAFF,EAGEC,QAHF,EAIEC,QAJF,EAKEC,UALF,QAMO,uBANP;AAOA,SACEC,aADF,QAEO,2BAFP;AAGA,SAASC,QAAT,QAAyB,yBAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,YAAY,GAAIC,IAAD,IAAU;AAC7B,MAAIA,IAAI,CAACC,MAAL,IAAeD,IAAI,CAACE,GAAxB,EAA6B;AAC3B,QAAIF,IAAI,CAACC,MAAL,CAAYE,MAAZ,KAAuBH,IAAI,CAACE,GAAL,CAASC,MAApC,EAA4C;AAC1C,aAAO,IAAP;AACD;AACF;AACF,CAND;;AAQA,MAAMC,KAAK,GAAG,MAAO;AACnB,QAAM,CAACD,MAAD,EAASE,SAAT,IAAsBvB,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACwB,KAAD,EAAQC,QAAR,IAAoBzB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAAE0B,IAAAA,MAAF;AAAUC,IAAAA,SAAV;AAAqBC,IAAAA,KAArB;AAA4BV,IAAAA;AAA5B,MAAqCV,QAAQ,CAAC,OAAD,EAAUO,QAAV,CAAnD;AAEAd,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM4B,WAAW,GAAG,MAAOX,IAAP,IAAgB;AAClC,YAAMY,YAAY,GAAG,MAAMb,YAAY,CAACC,IAAD,CAAvC;AACAK,MAAAA,SAAS,CAACO,YAAD,CAAT;AACD,KAHD;;AAIA,QAAI,CAACJ,MAAL,EAAa;AACb,QAAI,CAACR,IAAL,EAAW;;AACX,QAAIQ,MAAM,KAAK,SAAf,EAA0B;AACxBD,MAAAA,QAAQ,CAAC,CAAEP,IAAF,CAAD,CAAR;AACD;;AACDK,IAAAA,SAAS,CAACN,YAAY,CAACC,IAAD,CAAb,CAAT;AACD,GAXQ,EAWN,EAXM,CAAT;AAaA,MAAIS,SAAJ,EAAe,OAAO,YAAP;;AACf,MAAIC,KAAJ,EAAW;AACT,WAAO,WAAWA,KAAK,CAACG,OAAxB;AACD;;AAED,QAAMC,WAAW,GAAG,YAAY;AAC9B,UAAMhB,KAAK,CAACiB,IAAN,CAAW,SAAX,EACLC,IADK,CACA,UAAUC,QAAV,EAAoB;AACxB,UAAIA,QAAQ,CAACT,MAAT,KAAoB,GAAxB,EAA6B;AAC3BU,QAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACAC,QAAAA,KAAK,CAAC,gBAAD,CAAL;AACD,OAHD,MAGO;AACL,cAAMC,GAAG,GAAG,IAAIC,KAAJ,CAAUL,QAAQ,CAACP,KAAnB,CAAZ;AACAQ,QAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACA,cAAMA,GAAN;AACD;AACF,KAVK,EAWLE,KAXK,CAWC,UAAUb,KAAV,EAAiB;AACtBU,MAAAA,KAAK,CAACV,KAAD,CAAL;AACD,KAbK,CAAN;AAcD,GAfD;;AAiBA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,aAAD;AAAe,IAAA,MAAM,EAAEP,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAGE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIH,IAAI,CAACwB,GAAL,CAAUC,OAAO,iBACjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,OAAO,CAACxB,MAAR,gBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,GAAG,EAAKwB,OAAO,CAACxB,MAAR,CAAeyB,IAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoCD,OAAO,CAACxB,MAAR,CAAeyB,IAAnD,CADF,eAEE;AAAI,IAAA,GAAG,EAAKD,OAAO,CAACxB,MAAR,CAAeE,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsCsB,OAAO,CAACxB,MAAR,CAAeE,MAArD,MAFF,CADD,GAKG,EANN,EAOGsB,OAAO,CAACE,KAAR,gBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,GAAG,EAAKF,OAAO,CAACE,KAAR,CAAcA,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoCF,OAAO,CAACE,KAAR,CAAcA,KAAlD,CADF,CADD,GAIG,EAXN,EAYGF,OAAO,CAACvB,GAAR,gBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,GAAG,EAAKuB,OAAO,CAACvB,GAAR,CAAYwB,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCD,OAAO,CAACvB,GAAR,CAAYwB,IAA7C,CADF,eAEE;AAAI,IAAA,GAAG,EAAKD,OAAO,CAACvB,GAAR,CAAYC,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmCsB,OAAO,CAACvB,GAAR,CAAYC,MAA/C,CAFF,CADD,GAKG,EAjBN,CADA,CADJ,CAHF,eA0BE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAC,MADR;AAEE,IAAA,OAAO,EAAE,MAAM;AACbW,MAAAA,WAAW;AACZ,KAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eASE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAC,MADR;AAEE,IAAA,OAAO,EAAE,MAAM;AACbf,MAAAA,YAAY,CAACC,IAAD,CAAZ;AACD,KAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATF,eAiBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAE,CAAf;AAAkB,IAAA,QAAQ,EAAC,GAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAEE,oBAAC,OAAD;AAAS,IAAA,QAAQ,MAAjB;AAAkB,IAAA,QAAQ,EAAC,GAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF,CAjBF,eAqBE,oBAAC,MAAD,CAAQ,KAAR;AACE,IAAA,SAAS,EAAEf,OAAO,CAAC,WAAD,EAAc,KAAd,CADpB;AAEE,IAAA,QAAQ,EAAC,UAFX;AAGE,IAAA,IAAI,EAAED,MAAM,CAAC,MAAD,EAAS;AAAE4C,MAAAA,KAAK,EAAE,OAAT;AAAkBC,MAAAA,MAAM,EAAE,QAA1B;AAAoCC,MAAAA,KAAK,EAAE;AAA3C,KAAT,CAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,eAOE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,eASE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CArBF,CADF,CA1BF,CADF;AAiED,CAzGD;;AA2GA,eAAe1B,KAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport '../App.css';\nimport { select, boolean } from '@storybook/addon-knobs';\nimport Button from 'react-bulma-components/lib/components/button';\nimport Section from 'react-bulma-components/lib/components/section';\nimport Container from 'react-bulma-components/lib/components/container';\nimport Heading from 'react-bulma-components/lib/components/heading';\nimport { useQuery } from \"react-query\";\nimport {\n  BottleModal,\n  BrushModal,\n  RodModal,\n  CapModal,\n  WiperModal\n} from './OpenModal.component';\nimport {\n  Compatibility\n} from './Compatibility.component';\nimport { getBuild } from \"../middlewares/services\";\nimport axios from \"axios\";\n\nconst verifyThread = (data) => {\n  if (data.bottle && data.rod) {\n    if (data.bottle.thread === data.rod.thread) {\n      return true;\n    }\n  }\n}\n\nconst Build = ( ) => {\n  const [thread, setThread] = useState(false);\n  const [build, setBuild] = useState([]);\n  const { status, isLoading, error, data } = useQuery(\"build\", getBuild);\n\n  useEffect(() => {\n    const fetchThread = async (data) => {\n      const resultThread = await verifyThread(data);\n      setThread(resultThread)\n    }\n    if (!status) return;\n    if (!data) return;\n    if (status === \"success\") {\n      setBuild([ data ]);\n    }\n    setThread(verifyThread(data));\n  }, []);\n\n  if (isLoading) return \"Loading...\";\n  if (error) {\n    return \"Oops! \" + error.message;\n  }\n\n  const deleteBuild = async () => {\n    await axios.post(\"/delete\")\n    .then(function (response) {\n      if (response.status === 200) {\n        console.log(\"Succesfully deleted\");\n        alert(\"Build deleted!\");\n      } else {\n        const err = new Error(response.error);\n        console.log(err);\n        throw err;\n      }\n    })\n    .catch(function (error) {\n      alert(error);\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      <Compatibility thread={thread}>\n      </Compatibility>\n      <Section>\n        { data.map( element =>\n          <div>\n            {element.bottle ?\n              <div>\n                <li key = { element.bottle.name }>{ element.bottle.name }</li>\n                <li key = { element.bottle.thread }>{ element.bottle.thread } </li>\n              </div>\n              : \"\" }\n            {element.brush ?\n              <div>\n                <li key = { element.brush.brush }>{ element.brush.brush }</li>\n              </div>\n              : \"\" }\n            {element.rod ?\n              <div>\n                <li key = { element.rod.name }>{ element.rod.name }</li>\n                <li key = { element.rod.thread }>{ element.rod.thread }</li>\n              </div>\n              : \"\" }\n          </div>\n        )}\n      </Section>\n      <Section>\n        <Container>\n          <Button\n            color=\"info\"\n            onClick={() => {\n              deleteBuild();\n            }}\n          >\n            Erase build\n          </Button>\n          <Button\n            color=\"info\"\n            onClick={() => {\n              verifyThread(data);\n            }}\n          >\n            thread\n          </Button>\n          <p>\n            <Heading size={5} renderAs=\"p\">Build</Heading>\n            <Heading subtitle renderAs=\"p\">Mascara</Heading>\n          </p>\n          <Button.Group\n            hasAddons={boolean('hasAddons', false)}\n            position=\"centered\"\n            size={select('Size', { small: 'small', medium: 'medium', large: 'large' })}\n          >\n            <BottleModal>\n            </BottleModal>\n            <BrushModal>\n            </BrushModal>\n            <RodModal>\n            </RodModal>\n          </Button.Group>\n        </Container>\n      </Section>\n    </div>\n  );\n}\n\nexport default Build;\n"]},"metadata":{},"sourceType":"module"}
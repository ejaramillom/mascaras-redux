{"ast":null,"code":"var _jsxFileName = \"/home/leon/Documentos/proyectos/react/mascaras/client/src/components/OpenModal.component.js\";\nimport React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Modal from \"react-bulma-components/lib/components/modal\";\nimport Button from \"react-bulma-components/lib/components/button\";\nimport Content from \"react-bulma-components/lib/components/content\";\nimport Section from \"react-bulma-components/lib/components/section\";\nimport { Redirect } from 'react-router';\nimport { select, boolean } from \"@storybook/addon-knobs\";\nimport axios from \"axios\";\nimport { getBrushes, getBottles, getRods, getWipers, getCaps } from \"../middlewares/services\";\nimport { useQuery } from \"react-query\";\nimport { colors } from \"../features/colors.js\";\nimport \"../App.css\";\nexport class OpenModal extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      show: false\n    };\n\n    this.open = () => this.setState({\n      show: true\n    });\n\n    this.close = () => this.setState({\n      show: false\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"info\",\n      onClick: this.open,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }, \" \", this.props.name, \" \"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Modal, Object.assign({\n      show: this.state.show,\n      onClose: this.close\n    }, this.props.modal, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }), this.props.children));\n  }\n\n}\nOpenModal.propTypes = {\n  modal: PropTypes.object,\n  children: PropTypes.node.isRequired,\n  name: PropTypes.string\n};\nOpenModal.defaultProps = {\n  modal: {},\n  name: \"name\"\n};\nexport const BottleModal = () => {\n  const addBottle = async data => {\n    const ServerCall = await axios.post(\"/bottle\", {\n      name: data.name,\n      drawing: data.drawing,\n      mold: data.mold,\n      depth: data.depth,\n      thread: data.thread\n    }).then(function (response) {\n      if (response.status === 200) {\n        alert(\"Bottle added to the list!\");\n        console.log(\"Succesfully added\");\n      } else {\n        const err = new Error(response.error);\n        console.log(err);\n        throw err;\n      }\n    }).catch(function (error) {\n      alert(error);\n    });\n  };\n\n  const {\n    isLoading,\n    error,\n    data\n  } = useQuery(\"bottles\", getBottles);\n  if (isLoading) return \"Loading...\";\n\n  if (error) {\n    return \"Oops! \" + error.message;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(OpenModal, {\n    modal: {\n      closeOnBlur: true\n    },\n    name: \"Bottle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, data.map(element => /*#__PURE__*/React.createElement(Modal.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Section, {\n    style: {\n      backgroundColor: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 19\n    }\n  }, element.name), /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 19\n    }\n  }, element.drawing), \" \", /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 52\n    }\n  }, element.mold), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    color: \"info\",\n    onClick: () => {\n      addBottle(element);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  }, \"Add\")))))));\n};\nexport const BrushModal = () => {\n  const addBrush = async data => {\n    const ServerCall = await axios.post(\"/brush\", {\n      brush: data.brush,\n      original: data.original,\n      shaftDiameter: data.shaftDiameter,\n      shaftLength: data.shaftLength,\n      thread: data.thread\n    }).then(function (response) {\n      if (response.status === 200) {\n        alert(\"Brush added to the list!\");\n        console.log(\"Succesfully added\");\n      } else {\n        const err = new Error(response.error);\n        console.log(err);\n        throw err;\n      }\n    }).catch(function (error) {\n      alert(error);\n    });\n  };\n\n  const {\n    isLoading,\n    error,\n    data\n  } = useQuery(\"brushes\", getBrushes);\n  if (isLoading) return \"Loading...\";\n\n  if (error) {\n    return \"Oops! \" + error.message;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(OpenModal, {\n    modal: {\n      closeOnBlur: true\n    },\n    name: \"Brush\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 11\n    }\n  }, \"hola\"), data.map(element => /*#__PURE__*/React.createElement(Modal.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Section, {\n    style: {\n      backgroundColor: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 17\n    }\n  }, element.brush), /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 17\n    }\n  }, element.original), \" \", /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 51\n    }\n  }, element.type), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    color: \"info\",\n    onClick: () => {\n      addBrush(element);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 15\n    }\n  }, \"Add\")))))));\n};\nexport const RodModal = () => {\n  const {\n    isLoading,\n    error,\n    data\n  } = useQuery(\"rods\", getRods);\n  if (isLoading) return \"Loading...\";\n\n  if (error) {\n    return \"Oops! \" + error.message;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(OpenModal, {\n    modal: {\n      closeOnBlur: true\n    },\n    name: \"Rod\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 9\n    }\n  }, data.map(element => /*#__PURE__*/React.createElement(Modal.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Section, {\n    style: {\n      backgroundColor: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 19\n    }\n  }, element.name), \" \", /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 19\n    }\n  }, element.drawing), \" \", /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 52\n    }\n  }, element.mold), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 19\n    }\n  }), \"Something else\")))))));\n};\nexport const WiperModal = () => {\n  const {\n    isLoading,\n    error,\n    data\n  } = useQuery(\"wipers\", getWipers);\n  if (isLoading) return \"Loading...\";\n\n  if (error) {\n    return \"Oops! \" + error.message;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 5\n    }\n  }, data.map(element => /*#__PURE__*/React.createElement(OpenModal, {\n    modal: {\n      closeOnBlur: true\n    },\n    name: \"Wiper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Section, {\n    style: {\n      backgroundColor: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 17\n    }\n  }, element.name), \" \", /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 49\n    }\n  }, element.drawing), \" \", /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 17\n    }\n  }, element.mold), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 17\n    }\n  }), \"Something else\"))))));\n};\nexport const CapModal = () => {\n  const {\n    isLoading,\n    error,\n    data\n  } = useQuery(\"caps\", getCaps);\n  if (isLoading) return \"Loading...\";\n\n  if (error) {\n    return \"Oops! \" + error.message;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"modal-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 5\n    }\n  }, data.map(element => /*#__PURE__*/React.createElement(OpenModal, {\n    modal: {\n      closeOnBlur: true\n    },\n    name: \"Wiper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Section, {\n    style: {\n      backgroundColor: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 17\n    }\n  }, element.name), \" \", /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 49\n    }\n  }, element.drawing), \" \", /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 17\n    }\n  }, element.mold), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 17\n    }\n  }), \"Something else\"))))));\n};","map":{"version":3,"sources":["/home/leon/Documentos/proyectos/react/mascaras/client/src/components/OpenModal.component.js"],"names":["React","useState","PropTypes","Modal","Button","Content","Section","Redirect","select","boolean","axios","getBrushes","getBottles","getRods","getWipers","getCaps","useQuery","colors","OpenModal","Component","state","show","open","setState","close","render","props","name","modal","children","propTypes","object","node","isRequired","string","defaultProps","BottleModal","addBottle","data","ServerCall","post","drawing","mold","depth","thread","then","response","status","alert","console","log","err","Error","error","catch","isLoading","message","closeOnBlur","map","element","backgroundColor","BrushModal","addBrush","brush","original","shaftDiameter","shaftLength","type","RodModal","WiperModal","CapModal"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Modal from \"react-bulma-components/lib/components/modal\";\nimport Button from \"react-bulma-components/lib/components/button\";\nimport Content from \"react-bulma-components/lib/components/content\";\nimport Section from \"react-bulma-components/lib/components/section\";\nimport { Redirect } from 'react-router';\nimport { select, boolean } from \"@storybook/addon-knobs\";\nimport axios from \"axios\";\n\nimport {\n  getBrushes,\n  getBottles,\n  getRods,\n  getWipers,\n  getCaps,\n} from \"../middlewares/services\";\nimport { useQuery } from \"react-query\";\nimport { colors } from \"../features/colors.js\";\nimport \"../App.css\";\n\nexport class OpenModal extends React.Component {\n  static propTypes = {\n    modal: PropTypes.object,\n    children: PropTypes.node.isRequired,\n    name: PropTypes.string,\n  };\n\n  static defaultProps = {\n    modal: {},\n    name: \"name\",\n  };\n\n  state = {\n    show: false,\n  };\n\n  open = () => this.setState({ show: true });\n  close = () => this.setState({ show: false });\n\n  render() {\n    return (\n      <div>\n        <Button color=\"info\" onClick={this.open}>\n          {\" \"}\n          {this.props.name}{\" \"}\n        </Button>\n        <br />\n        <Modal\n          show={this.state.show}\n          onClose={this.close}\n          {...this.props.modal}\n        >\n          {this.props.children}\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport const BottleModal = () => {\n  const addBottle = async (data) => {\n    const ServerCall = await axios\n      .post(\"/bottle\", {\n        name: data.name,\n        drawing: data.drawing,\n        mold: data.mold,\n        depth: data.depth,\n        thread: data.thread\n      })\n      .then(function (response) {\n        if (response.status === 200) {\n          alert(\"Bottle added to the list!\");\n          console.log(\"Succesfully added\");\n        } else {\n          const err = new Error(response.error);\n          console.log(err);\n          throw err;\n        }\n      })\n      .catch(function (error) {\n        alert(error);\n      });\n  };\n\n  const { isLoading, error, data } = useQuery(\"bottles\", getBottles);\n  if (isLoading) return \"Loading...\";\n  if (error) {\n    return \"Oops! \" + error.message;\n  }\n\n  return (\n    <div>\n      <OpenModal modal={{ closeOnBlur: true }} name=\"Bottle\">\n        <div className=\"modal-body\">\n          {data.map((element) => (\n            <Modal.Content>\n              <Section style={{ backgroundColor: \"white\" }}>\n                <p>\n                  <strong>{element.name}</strong>\n                  <small>{element.drawing}</small> <small>{element.mold}</small>\n                  <br />\n                </p>\n                <Button\n                  type=\"submit\"\n                  color=\"info\"\n                  onClick={() => {\n                    addBottle(element);\n                  }}\n                >\n                  Add\n                </Button>\n              </Section>\n            </Modal.Content>\n          ))}\n        </div>\n      </OpenModal>\n    </div>\n  );\n};\n\nexport const BrushModal = () => {\n\n  const addBrush = async (data) => {\n    const ServerCall = await axios\n      .post(\"/brush\", {\n        brush: data.brush,\n        original: data.original,\n        shaftDiameter: data.shaftDiameter,\n        shaftLength: data.shaftLength,\n        thread: data.thread\n      })\n      .then(function (response) {\n        if (response.status === 200) {\n          alert(\"Brush added to the list!\");\n          console.log(\"Succesfully added\");\n        } else {\n          const err = new Error(response.error);\n          console.log(err);\n          throw err;\n        }\n      })\n      .catch(function (error) {\n        alert(error);\n      });\n  };\n\n  const { isLoading, error, data } = useQuery(\"brushes\", getBrushes);\n  if (isLoading) return \"Loading...\";\n  if (error) {\n    return \"Oops! \" + error.message;\n  }\n\n  return (\n    <div>\n      <OpenModal modal={{ closeOnBlur: true }} name=\"Brush\">\n        <div className=\"modal-body\">\n          <h1>hola</h1>\n          {data.map((element) => (\n            <Modal.Content>\n            <Section style={{ backgroundColor: \"white\" }}>\n              <p>\n                <strong>{element.brush}</strong>\n                <small>{element.original}</small> <small>{element.type}</small>\n                <br />\n              </p>\n              <Button\n                type=\"submit\"\n                color=\"info\"\n                onClick={() => {\n                  addBrush(element);\n                }}\n              >\n                Add\n              </Button>\n            </Section>\n            </Modal.Content>\n          ))}\n        </div>\n      </OpenModal>\n    </div>\n  );\n};\n\nexport const RodModal = () => {\n  const { isLoading, error, data } = useQuery(\"rods\", getRods);\n  if (isLoading) return \"Loading...\";\n  if (error) {\n    return \"Oops! \" + error.message;\n  }\n  return (\n    <div>\n      <OpenModal modal={{ closeOnBlur: true }} name=\"Rod\">\n        <div className=\"modal-body\">\n          {data.map((element) => (\n            <Modal.Content>\n              <Section style={{ backgroundColor: \"white\" }}>\n                <p>\n                  <strong>{element.name}</strong>{\" \"}\n                  <small>{element.drawing}</small> <small>{element.mold}</small>\n                  <br />\n                  Something else\n                </p>\n              </Section>\n            </Modal.Content>\n          ))}\n        </div>\n      </OpenModal>\n    </div>\n  );\n};\n\nexport const WiperModal = () => {\n  const { isLoading, error, data } = useQuery(\"wipers\", getWipers);\n  if (isLoading) return \"Loading...\";\n  if (error) {\n    return \"Oops! \" + error.message;\n  }\n  return (\n    <div className=\"modal-body\">\n      {data.map((element) => (\n        <OpenModal modal={{ closeOnBlur: true }} name=\"Wiper\">\n          <Modal.Content>\n            <Section style={{ backgroundColor: \"white\" }}>\n              <p>\n                <strong>{element.name}</strong> <small>{element.drawing}</small>{\" \"}\n                <small>{element.mold}</small>\n                <br />\n                Something else\n              </p>\n            </Section>\n          </Modal.Content>\n        </OpenModal>\n      ))}\n    </div>\n  );\n};\n\nexport const CapModal = () => {\n  const { isLoading, error, data } = useQuery(\"caps\", getCaps);\n  if (isLoading) return \"Loading...\";\n  if (error) {\n    return \"Oops! \" + error.message;\n  }\n  return (\n    <div className=\"modal-body\">\n      {data.map((element) => (\n        <OpenModal modal={{ closeOnBlur: true }} name=\"Wiper\">\n          <Modal.Content>\n            <Section style={{ backgroundColor: \"white\" }}>\n              <p>\n                <strong>{element.name}</strong> <small>{element.drawing}</small>{\" \"}\n                <small>{element.mold}</small>\n                <br />\n                Something else\n              </p>\n            </Section>\n          </Modal.Content>\n        </OpenModal>\n      ))}\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}
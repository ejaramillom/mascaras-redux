{"ast":null,"code":"var _jsxFileName = \"/home/leon/Documentos/proyectos/mascara/client/src/components/Display.component.js\";\nimport React, { useState, useEffect } from 'react';\nimport Button from 'react-bulma-components/lib/components/button';\nimport Tile from 'react-bulma-components/lib/components/tile';\nimport Heading from 'react-bulma-components/lib/components/heading';\nimport Image from 'react-bulma-components/lib/components/image';\nimport Tag from 'react-bulma-components/lib/components/tag';\nimport ExportCSV from './ExportCSV.component';\nimport { Control, Input } from 'react-bulma-components/lib/components/form';\nimport axios from \"axios\";\nimport '../App.css'; //---------------- Bottle filter\n\nexport const BottleDisplay = ({\n  BottlestoDisplay\n}) => {\n  const bottle = props.bottle;\n  const bottles = props.bottles;\n  const rod = props.rod;\n  const brush = props.brush;\n  const setBuildClick = props.setBuildClick;\n  const buildClick = props.buildClick;\n  const [search, setSearch] = useState(\"\");\n  const [filterDisplay, setFilterDisplay] = useState([]);\n\n  const addBottle = async data => {\n    await axios.post(\"/bottle\", {\n      name: data.name,\n      drawing: data.drawing,\n      mold: data.mold,\n      depth: data.depth,\n      thread: data.thread\n    }).then(function (response) {\n      if (response.status === 200) {\n        alert(\"Bottle added to the list!\");\n        console.log(\"Succesfully added\");\n      } else {\n        const err = new Error(response.error);\n        console.log(err);\n        throw err;\n      }\n    }).catch(function (error) {\n      alert(error);\n    });\n  };\n\n  const addBottleClick = element => {\n    addBottle(element);\n    setBuildClick(!buildClick);\n  };\n\n  const onChange = e => {\n    setSearch(e);\n    let oldList = bottles;\n\n    if (search !== \"\") {\n      let newList = [];\n      newList = bottles.filter(element => {\n        return element.name.toLowerCase().indexOf(search.toLowerCase()) !== -1;\n      });\n      setFilterDisplay(newList);\n    } else {\n      setFilterDisplay(bottles);\n    }\n  };\n\n  if (bottle && bottle.name) {\n    const filteredBottles = bottles.filter(element => {\n      return element.name.toLowerCase().indexOf(bottle.name.toLowerCase()) !== -1;\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ExportCSV, {\n      csvData: filteredBottles,\n      fileName: \"bottles\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }), filteredBottles.map(element => /*#__PURE__*/React.createElement(Tile, {\n      kind: \"ancestor\",\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Tile, {\n      kind: \"parent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Tile, {\n      renderAs: \"article\",\n      kind: \"child\",\n      notification: true,\n      color: \"light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Heading, {\n      size: 7,\n      renderAs: \"h6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    }, element.name, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 19\n      }\n    }, \" Drawing \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 19\n      }\n    }, \" \", element.drawing), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 19\n      }\n    }, \" Thread \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 19\n      }\n    }, \" \", element.thread), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 19\n      }\n    }, \" Depth \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 19\n      }\n    }, \" \", element.depth), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      color: \"info\",\n      onClick: () => {\n        addBottleClick(element);\n      },\n      size: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }\n    }, \"Add Bottle\")))))));\n  } else if (rod && rod.thread && brush && brush.brushLength) {\n    const filteredBottles = bottles.filter(element => {\n      let gap = Number(element.depth) - (Number(rod.dimensions.length) + Number(brush.brushLength));\n\n      if (gap > 2 && gap < 6 && element.thread.toLowerCase().indexOf(rod.thread.toLowerCase()) !== -1) {\n        return element;\n      } else {\n        return \"\";\n      }\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ExportCSV, {\n      csvData: filteredBottles,\n      fileName: \"bottles\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 7\n      }\n    }), filteredBottles.map(element => /*#__PURE__*/React.createElement(Tile, {\n      kind: \"ancestor\",\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Tile, {\n      kind: \"parent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Tile, {\n      renderAs: \"article\",\n      kind: \"child\",\n      notification: true,\n      color: \"light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Heading, {\n      size: 7,\n      renderAs: \"h6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }\n    }, element.name, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 19\n      }\n    }, \" Drawing \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 19\n      }\n    }, \" \", element.drawing), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 19\n      }\n    }, \" Thread \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 19\n      }\n    }, \" \", element.thread), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 19\n      }\n    }, \" Depth \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 19\n      }\n    }, \" \", element.depth), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      color: \"info\",\n      onClick: () => {\n        addBottleClick(element);\n      },\n      size: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 19\n      }\n    }, \"Add Bottle\")))))));\n  } else if (rod && rod.thread) {\n    const filteredBottles = bottles.filter(element => {\n      return element.thread.toLowerCase().indexOf(rod.thread.toLowerCase()) !== -1;\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ExportCSV, {\n      csvData: filteredBottles,\n      fileName: \"bottles\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 7\n      }\n    }), filteredBottles.map(element => /*#__PURE__*/React.createElement(Tile, {\n      kind: \"ancestor\",\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Tile, {\n      kind: \"parent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Tile, {\n      renderAs: \"article\",\n      kind: \"child\",\n      notification: true,\n      color: \"light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Heading, {\n      size: 7,\n      renderAs: \"h6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }\n    }, element.name, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 19\n      }\n    }, \" Drawing \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 19\n      }\n    }, \" \", element.drawing), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 19\n      }\n    }, \" Thread \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 19\n      }\n    }, \" \", element.thread), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 19\n      }\n    }, \" Depth \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 19\n      }\n    }, \" \", element.depth), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      color: \"info\",\n      onClick: () => {\n        addBottleClick(element);\n      },\n      size: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 19\n      }\n    }, \"Add Bottle\")))))));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ExportCSV, {\n    csvData: bottles,\n    fileName: \"bottles\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Control, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    onChange: e => onChange(e.target.value),\n    name: \"bottle\",\n    type: \"bottle\",\n    placeholder: \"Bottle search\",\n    value: search,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 5\n    }\n  }), filterDisplay.map(element => /*#__PURE__*/React.createElement(Tile, {\n    kind: \"ancestor\",\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Tile, {\n    kind: \"parent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Tile, {\n    renderAs: \"article\",\n    kind: \"child\",\n    notification: true,\n    color: \"light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Heading, {\n    size: 7,\n    renderAs: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 15\n    }\n  }, element.name, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Tag, {\n    color: \"dark\",\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 17\n    }\n  }, \" Drawing \"), /*#__PURE__*/React.createElement(Tag, {\n    color: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 17\n    }\n  }, \" \", element.drawing), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Tag, {\n    color: \"dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 17\n    }\n  }, \" Thread \"), /*#__PURE__*/React.createElement(Tag, {\n    color: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 17\n    }\n  }, \" \", element.thread), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Tag, {\n    color: \"dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 17\n    }\n  }, \" Depth \"), /*#__PURE__*/React.createElement(Tag, {\n    color: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 17\n    }\n  }, \" \", element.depth), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    color: \"info\",\n    onClick: () => {\n      addBottleClick(element);\n    },\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 17\n    }\n  }, \"Add Bottle\")))))));\n}; //---------------- Bottle filter\n//---------------- Brush filter\n\nexport const BrushFilter = props => {\n  const brush = props.brush;\n  const brushes = props.brushes;\n  const claim = props.claim;\n  const rod = props.rod;\n  const bottle = props.bottle;\n  const setBuildClick = props.setBuildClick;\n  const buildClick = props.buildClick;\n\n  const addBrush = async data => {\n    await axios.post(\"/brush\", {\n      brush: data.brush,\n      original: data.original,\n      shaftLength: data.shaftLength,\n      shaftDiameter: data.shaftDiameter,\n      brushLength: data.brushLength,\n      brushDiameter: data.brushDiameter,\n      type: data.type\n    }).then(function (response) {\n      if (response.status === 200) {\n        alert(\"Brush added to the list!\");\n        console.log(\"Succesfully added\");\n      } else {\n        const err = new Error(response.error);\n        console.log(err);\n        throw err;\n      }\n    }).catch(function (error) {\n      alert(error);\n    });\n  };\n\n  const addBrushClick = element => {\n    addBrush(element);\n    setBuildClick(!buildClick);\n  };\n\n  if (brush && brush.brush) {\n    const filteredBrushes = brushes.filter(element => {\n      return element.brush.toLowerCase().indexOf(brush.brush.toLowerCase()) !== -1;\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ExportCSV, {\n      csvData: filteredBrushes,\n      fileName: \"brushes\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 7\n      }\n    }), filteredBrushes.map(element => /*#__PURE__*/React.createElement(Tile, {\n      kind: \"ancestor\",\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Tile, {\n      kind: \"parent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Tile, {\n      renderAs: \"article\",\n      kind: \"child\",\n      notification: true,\n      color: \"light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Heading, {\n      size: 7,\n      renderAs: \"h6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 17\n      }\n    }, element.brush, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Image, {\n      rounded: \"true\",\n      key: element.brush,\n      size: \"2by1\",\n      className: \"center\",\n      src: require(`../images/${element.brush}.jpg`),\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 19\n      }\n    }, \" Drawing \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 19\n      }\n    }, \" \", element.drawing), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 19\n      }\n    }, \" Type \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 19\n      }\n    }, \" \", element.type), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 19\n      }\n    }, \" Length \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 19\n      }\n    }, \" \", element.brushLength), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 19\n      }\n    }, \" Shaft \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 19\n      }\n    }, \" \", element.shaftDiameter), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 19\n      }\n    }, \" Brush \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 19\n      }\n    }, \" \", element.brushDiameter), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      color: \"info\",\n      size: \"small\",\n      onClick: () => {\n        addBrushClick(element);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 19\n      }\n    }, \"Add Brush\")))))));\n  } else if (claim) {\n    const filteredBrushes = brushes.filter(element => {\n      if (claim === \"definition\" && element.claim.definition === true) {\n        return element;\n      } else if (claim === \"volumizing\" && element.claim.volumizing === true) {\n        return element;\n      } else if (claim === \"lengthening\" && element.claim.lengthening === true) {\n        return element;\n      } else if (claim === \"curling\" && element.claim.curling === true) {\n        return element;\n      } else if (claim === \"plumping\" && element.claim.plumping === true) {\n        return element;\n      } else {\n        return \"\";\n      }\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ExportCSV, {\n      csvData: filteredBrushes,\n      fileName: \"brushes\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 7\n      }\n    }), filteredBrushes.map(element => /*#__PURE__*/React.createElement(Tile, {\n      kind: \"ancestor\",\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Tile, {\n      kind: \"parent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Tile, {\n      renderAs: \"article\",\n      kind: \"child\",\n      notification: true,\n      color: \"light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Heading, {\n      size: 7,\n      renderAs: \"h6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 17\n      }\n    }, element.brush, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Image, {\n      rounded: \"true\",\n      key: element.brush,\n      size: \"2by1\",\n      className: \"center\",\n      src: require(`../images/${element.brush}.jpg`),\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 19\n      }\n    }, \" Drawing \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 19\n      }\n    }, \" \", element.drawing), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 19\n      }\n    }, \" Type \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 19\n      }\n    }, \" \", element.type), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 19\n      }\n    }, \" Length \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 19\n      }\n    }, \" \", element.brushLength), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 19\n      }\n    }, \" Shaft \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 19\n      }\n    }, \" \", element.shaftDiameter), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 19\n      }\n    }, \" Brush \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 19\n      }\n    }, \" \", element.brushDiameter), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      color: \"info\",\n      size: \"small\",\n      onClick: () => {\n        addBrushClick(element);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 19\n      }\n    }, \"Add Brush\")))))));\n  } else if (rod && rod.name && bottle && bottle.name) {\n    const filteredBrushes = brushes.filter(element => {\n      let mascaraGap = Number(bottle.depth) - (Number(element.brushLength) + Number(rod.dimensions.length));\n\n      if (mascaraGap > 1 && mascaraGap < 6) {\n        return element;\n      } else {\n        return null;\n      }\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ExportCSV, {\n      csvData: filteredBrushes,\n      fileName: \"brushes\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 7\n      }\n    }), filteredBrushes.map(element => /*#__PURE__*/React.createElement(Tile, {\n      kind: \"ancestor\",\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Tile, {\n      kind: \"parent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Tile, {\n      renderAs: \"article\",\n      kind: \"child\",\n      notification: true,\n      color: \"light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Heading, {\n      size: 7,\n      renderAs: \"h6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 17\n      }\n    }, element.brush, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Image, {\n      rounded: \"true\",\n      key: element.brush,\n      size: \"2by1\",\n      className: \"center\",\n      src: require(`../images/${element.brush}.jpg`),\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 19\n      }\n    }, \" Drawing \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 19\n      }\n    }, \" \", element.drawing), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 19\n      }\n    }, \" Type \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 19\n      }\n    }, \" \", element.type), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 19\n      }\n    }, \" Length \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 19\n      }\n    }, \" \", element.brushLength), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 19\n      }\n    }, \" Shaft \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 19\n      }\n    }, \" \", element.shaftDiameter), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 19\n      }\n    }, \" Brush \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 19\n      }\n    }, \" \", element.brushDiameter), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      color: \"info\",\n      size: \"small\",\n      onClick: () => {\n        addBrushClick(element);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 19\n      }\n    }, \"Add Brush\")))))));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ExportCSV, {\n    csvData: brushes,\n    fileName: \"brushes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 482,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 484,\n      columnNumber: 5\n    }\n  }), brushes.map(element => /*#__PURE__*/React.createElement(Tile, {\n    kind: \"ancestor\",\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 486,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Tile, {\n    kind: \"parent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Tile, {\n    renderAs: \"article\",\n    kind: \"child\",\n    notification: true,\n    color: \"light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Heading, {\n    size: 7,\n    renderAs: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 489,\n      columnNumber: 15\n    }\n  }, element.brush, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 491,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Image, {\n    rounded: \"true\",\n    key: element.brush,\n    size: \"2by1\",\n    className: \"center\",\n    src: require(`../images/${element.brush}.jpg`),\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 492,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 493,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Tag, {\n    color: \"dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 17\n    }\n  }, \" Drawing \"), /*#__PURE__*/React.createElement(Tag, {\n    color: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 495,\n      columnNumber: 17\n    }\n  }, \" \", element.drawing), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Tag, {\n    color: \"dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 17\n    }\n  }, \" Type \"), /*#__PURE__*/React.createElement(Tag, {\n    color: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 498,\n      columnNumber: 17\n    }\n  }, \" \", element.type), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 499,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Tag, {\n    color: \"dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 500,\n      columnNumber: 17\n    }\n  }, \" Length \"), /*#__PURE__*/React.createElement(Tag, {\n    color: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 501,\n      columnNumber: 17\n    }\n  }, \" \", element.brushLength), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 502,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Tag, {\n    color: \"dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 503,\n      columnNumber: 17\n    }\n  }, \" Shaft \"), /*#__PURE__*/React.createElement(Tag, {\n    color: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 504,\n      columnNumber: 17\n    }\n  }, \" \", element.shaftDiameter), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 505,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Tag, {\n    color: \"dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 506,\n      columnNumber: 17\n    }\n  }, \" Brush \"), /*#__PURE__*/React.createElement(Tag, {\n    color: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 507,\n      columnNumber: 17\n    }\n  }, \" \", element.brushDiameter), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 508,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 509,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    color: \"info\",\n    size: \"small\",\n    onClick: () => {\n      addBrushClick(element);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 510,\n      columnNumber: 17\n    }\n  }, \"Add Brush\")))))));\n}; //---------------- Brush filter\n//---------------- Rod filter\n\nexport const RodFilter = props => {\n  const rod = props.rod;\n  const rods = props.rods;\n  const bottle = props.bottle;\n  const brush = props.brush;\n  const setBuildClick = props.setBuildClick;\n  const buildClick = props.buildClick;\n\n  const addRod = async data => {\n    await axios.post(\"/rod\", {\n      name: data.name,\n      drawing: data.drawing,\n      thread: data.thread,\n      dimensions: {\n        length: data.dimensions.length,\n        rodDiameter: data.dimensions.rodDiameter,\n        brushDiameter: data.dimensions.brushDiameter\n      }\n    }).then(function (response) {\n      if (response.status === 200) {\n        alert(\"Rod added to the list!\");\n        console.log(\"Succesfully added\");\n      } else {\n        const err = new Error(response.error);\n        console.log(err);\n        throw err;\n      }\n    }).catch(function (error) {\n      alert(error);\n    });\n  };\n\n  const addRodClick = element => {\n    addRod(element);\n    setBuildClick(!buildClick);\n  };\n\n  if (rod && rod.name) {\n    const filteredRods = rods.filter(element => {\n      return element.name.toLowerCase().indexOf(rod.name.toLowerCase()) !== -1;\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 578,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ExportCSV, {\n      csvData: filteredRods,\n      fileName: \"rods\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 579,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 580,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 581,\n        columnNumber: 7\n      }\n    }), filteredRods.map(element => /*#__PURE__*/React.createElement(Tile, {\n      kind: \"ancestor\",\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 583,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Tile, {\n      kind: \"parent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 584,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Tile, {\n      renderAs: \"article\",\n      kind: \"child\",\n      notification: true,\n      color: \"light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 585,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Heading, {\n      size: 7,\n      renderAs: \"h6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 586,\n        columnNumber: 17\n      }\n    }, element.name, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 587,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 588,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 589,\n        columnNumber: 19\n      }\n    }, \" Drawing \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 590,\n        columnNumber: 19\n      }\n    }, \" \", element.drawing), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 591,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 592,\n        columnNumber: 19\n      }\n    }, \" Thread \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 593,\n        columnNumber: 19\n      }\n    }, \" \", element.thread), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 594,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 595,\n        columnNumber: 19\n      }\n    }, \" Length \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 596,\n        columnNumber: 19\n      }\n    }, \" \", element.dimensions.length), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 597,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 598,\n        columnNumber: 19\n      }\n    }, \" Shaft \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 599,\n        columnNumber: 19\n      }\n    }, \" \", element.dimensions.brushDiameter), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 600,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 601,\n        columnNumber: 19\n      }\n    }, \" Rod \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 602,\n        columnNumber: 19\n      }\n    }, \" \", element.dimensions.rodDiameter), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 603,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 604,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      color: \"info\",\n      size: \"small\",\n      onClick: () => {\n        addRodClick(element);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 605,\n        columnNumber: 19\n      }\n    }, \"Add Rod\")))))));\n  } else if (bottle && bottle.thread && bottle.depth) {\n    const filteredRods = rods.filter(element => {\n      let depthDiff = Number(bottle.depth) - Number(element.dimensions.length);\n\n      if (element.thread && depthDiff > 0) {\n        return element.thread.toLowerCase().indexOf(bottle.thread.toLowerCase()) !== -1;\n      } else {\n        return \"\";\n      }\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 634,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ExportCSV, {\n      csvData: filteredRods,\n      fileName: \"rods\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 635,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 636,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 637,\n        columnNumber: 7\n      }\n    }), filteredRods.map(element => /*#__PURE__*/React.createElement(Tile, {\n      kind: \"ancestor\",\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 639,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Tile, {\n      kind: \"parent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 640,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Tile, {\n      renderAs: \"article\",\n      kind: \"child\",\n      notification: true,\n      color: \"light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 641,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Heading, {\n      size: 7,\n      renderAs: \"h6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 642,\n        columnNumber: 17\n      }\n    }, element.name, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 643,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 644,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 645,\n        columnNumber: 19\n      }\n    }, \" Drawing \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 646,\n        columnNumber: 19\n      }\n    }, \" \", element.drawing), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 647,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 648,\n        columnNumber: 19\n      }\n    }, \" Thread \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 649,\n        columnNumber: 19\n      }\n    }, \" \", element.thread), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 650,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 651,\n        columnNumber: 19\n      }\n    }, \" Length \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 652,\n        columnNumber: 19\n      }\n    }, \" \", element.dimensions.length), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 653,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 654,\n        columnNumber: 19\n      }\n    }, \" Shaft \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 655,\n        columnNumber: 19\n      }\n    }, \" \", element.dimensions.brushDiameter), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 656,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 657,\n        columnNumber: 19\n      }\n    }, \" Rod \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 658,\n        columnNumber: 19\n      }\n    }, \" \", element.dimensions.rodDiameter), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 659,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 660,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      color: \"info\",\n      size: \"small\",\n      onClick: () => {\n        addRodClick(element);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 661,\n        columnNumber: 19\n      }\n    }, \"Add Rod\")))))));\n  } else if (bottle && bottle.thread) {\n    const filteredRods = rods.filter(element => {\n      if (element.thread) {\n        return element.thread.toLowerCase().indexOf(bottle.thread.toLowerCase()) !== -1;\n      } else {\n        return \"\";\n      }\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 689,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ExportCSV, {\n      csvData: filteredRods,\n      fileName: \"rods\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 690,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 691,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 692,\n        columnNumber: 7\n      }\n    }), filteredRods.map(element => /*#__PURE__*/React.createElement(Tile, {\n      kind: \"ancestor\",\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 694,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Tile, {\n      kind: \"parent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 695,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Tile, {\n      renderAs: \"article\",\n      kind: \"child\",\n      notification: true,\n      color: \"light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 696,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Heading, {\n      size: 7,\n      renderAs: \"h6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 697,\n        columnNumber: 17\n      }\n    }, element.name, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 698,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 699,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 700,\n        columnNumber: 19\n      }\n    }, \" Drawing \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 701,\n        columnNumber: 19\n      }\n    }, \" \", element.drawing), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 702,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 703,\n        columnNumber: 19\n      }\n    }, \" Thread \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 704,\n        columnNumber: 19\n      }\n    }, \" \", element.thread), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 705,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 706,\n        columnNumber: 19\n      }\n    }, \" Length \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 707,\n        columnNumber: 19\n      }\n    }, \" \", element.dimensions.length), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 708,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 709,\n        columnNumber: 19\n      }\n    }, \" Shaft \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 710,\n        columnNumber: 19\n      }\n    }, \" \", element.dimensions.brushDiameter), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 711,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 712,\n        columnNumber: 19\n      }\n    }, \" Rod \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 713,\n        columnNumber: 19\n      }\n    }, \" \", element.dimensions.rodDiameter), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 714,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 715,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      color: \"info\",\n      size: \"small\",\n      onClick: () => {\n        addRodClick(element);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 716,\n        columnNumber: 19\n      }\n    }, \"Add Rod\")))))));\n  } else if (brush && brush.type) {\n    const filteredRods = rods.filter(element => {\n      let brushRodDiff = Number(element.dimensions.brushDiameter) - Number(brush.shaftDiameter);\n      let wipeDelta = Number(brush.brushDiameter) - Number(element.dimensions.rodDiameter);\n\n      if (brush.type === \"INYECTADO\" && wipeDelta > 0.5 && wipeDelta < 4.8) {\n        if (brushRodDiff > 0.05 && brushRodDiff < 0.15) {\n          return element;\n        } else {\n          return \"\";\n        }\n      }\n\n      if (brush.type === \"NYLON\" && wipeDelta > 0.8 && wipeDelta < 6.4) {\n        if (brushRodDiff > -0.05 && brushRodDiff < 0.1) {\n          return element;\n        } else {\n          return \"\";\n        }\n      }\n\n      if (brush.type === \"LIP GLOSS\" && wipeDelta > -2 && wipeDelta < 3) {\n        if (brushRodDiff > 0 && brushRodDiff < 0.2) {\n          return element;\n        } else {\n          return \"\";\n        }\n      }\n\n      if (brush.type === \"DELINEADOR\" && wipeDelta > -2 && wipeDelta < -1) {\n        if (brushRodDiff > -0.05 && brushRodDiff < 0.1) {\n          return element;\n        } else {\n          return \"\";\n        }\n      }\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 769,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ExportCSV, {\n      csvData: filteredRods,\n      fileName: \"rods\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 770,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 771,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 772,\n        columnNumber: 7\n      }\n    }), filteredRods.map(element => /*#__PURE__*/React.createElement(Tile, {\n      kind: \"ancestor\",\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 774,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Tile, {\n      kind: \"parent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 775,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Tile, {\n      renderAs: \"article\",\n      kind: \"child\",\n      notification: true,\n      color: \"light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 776,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Heading, {\n      size: 7,\n      renderAs: \"h6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 777,\n        columnNumber: 17\n      }\n    }, element.name, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 778,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 779,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 780,\n        columnNumber: 19\n      }\n    }, \" Drawing \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 781,\n        columnNumber: 19\n      }\n    }, \" \", element.drawing), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 782,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 783,\n        columnNumber: 19\n      }\n    }, \" Thread \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 784,\n        columnNumber: 19\n      }\n    }, \" \", element.thread), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 785,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 786,\n        columnNumber: 19\n      }\n    }, \" Length \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 787,\n        columnNumber: 19\n      }\n    }, \" \", element.dimensions.length), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 788,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 789,\n        columnNumber: 19\n      }\n    }, \" Shaft \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 790,\n        columnNumber: 19\n      }\n    }, \" \", element.dimensions.brushDiameter), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 791,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 792,\n        columnNumber: 19\n      }\n    }, \" Rod \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 793,\n        columnNumber: 19\n      }\n    }, \" \", element.dimensions.rodDiameter), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 794,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 795,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      color: \"info\",\n      size: \"small\",\n      onClick: () => {\n        addRodClick(element);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 796,\n        columnNumber: 19\n      }\n    }, \"Add Rod\")))))));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 817,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ExportCSV, {\n    csvData: rods,\n    fileName: \"rods\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 818,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 819,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 820,\n      columnNumber: 5\n    }\n  }), rods.map(element => /*#__PURE__*/React.createElement(Tile, {\n    kind: \"ancestor\",\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 822,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Tile, {\n    kind: \"parent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 823,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Tile, {\n    renderAs: \"article\",\n    kind: \"child\",\n    notification: true,\n    color: \"light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 824,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Heading, {\n    size: 7,\n    renderAs: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 825,\n      columnNumber: 15\n    }\n  }, element.name, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 826,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 827,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Tag, {\n    color: \"dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 828,\n      columnNumber: 17\n    }\n  }, \" Drawing \"), /*#__PURE__*/React.createElement(Tag, {\n    color: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 829,\n      columnNumber: 17\n    }\n  }, \" \", element.drawing), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 830,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Tag, {\n    color: \"dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 831,\n      columnNumber: 17\n    }\n  }, \" Thread \"), /*#__PURE__*/React.createElement(Tag, {\n    color: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 832,\n      columnNumber: 17\n    }\n  }, \" \", element.thread), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 833,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Tag, {\n    color: \"dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 834,\n      columnNumber: 17\n    }\n  }, \" Length \"), /*#__PURE__*/React.createElement(Tag, {\n    color: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 835,\n      columnNumber: 17\n    }\n  }, \" \", element.dimensions.length), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 836,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Tag, {\n    color: \"dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 837,\n      columnNumber: 17\n    }\n  }, \" Shaft \"), /*#__PURE__*/React.createElement(Tag, {\n    color: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 838,\n      columnNumber: 17\n    }\n  }, \" \", element.dimensions.brushDiameter), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 839,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Tag, {\n    color: \"dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 840,\n      columnNumber: 17\n    }\n  }, \" Rod \"), /*#__PURE__*/React.createElement(Tag, {\n    color: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 841,\n      columnNumber: 17\n    }\n  }, \" \", element.dimensions.rodDiameter), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 842,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 843,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    color: \"info\",\n    size: \"small\",\n    onClick: () => {\n      addRodClick(element);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 844,\n      columnNumber: 17\n    }\n  }, \"Add Rod\")))))));\n}; //---------------- Rod filter\n//---------------- Wiper filter\n\nexport const WiperFilter = props => {\n  const wiper = props.wiper;\n  const wipers = props.wipers;\n  const setBuildClick = props.setBuildClick;\n  const buildClick = props.buildClick;\n\n  const addWiper = async data => {\n    await axios.post(\"/wiper\", {\n      name: data.name,\n      drawing: data.drawing,\n      mold: data.mold\n    }).then(function (response) {\n      if (response.status === 200) {\n        alert(\"Wiper added to the list!\");\n        console.log(\"Wiper succesfully added\");\n      } else {\n        const err = new Error(response.error);\n        console.log(err);\n        throw err;\n      }\n    }).catch(function (error) {\n      alert(error);\n    });\n  };\n\n  const addWiperClick = element => {\n    addWiper(element);\n    setBuildClick(!buildClick);\n  };\n\n  if (wiper && wiper.name) {\n    const filteredWipers = wipers.filter(element => {\n      return element.name.toLowerCase().indexOf(wiper.name.toLowerCase()) !== -1;\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 907,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ExportCSV, {\n      csvData: filteredWipers,\n      fileName: \"wipers\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 908,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 909,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 910,\n        columnNumber: 7\n      }\n    }), filteredWipers.map(element => /*#__PURE__*/React.createElement(Tile, {\n      kind: \"ancestor\",\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 912,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Tile, {\n      kind: \"parent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 913,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Tile, {\n      renderAs: \"article\",\n      kind: \"child\",\n      notification: true,\n      color: \"light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 914,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Heading, {\n      size: 7,\n      renderAs: \"h6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 915,\n        columnNumber: 15\n      }\n    }, element.name, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 916,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 917,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 918,\n        columnNumber: 17\n      }\n    }, \" Drawing \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 919,\n        columnNumber: 17\n      }\n    }, \" \", element.drawing), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 920,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 921,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      color: \"info\",\n      size: \"small\",\n      onClick: () => {\n        addWiperClick(element);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 922,\n        columnNumber: 17\n      }\n    }, \"Add Wiper\")))))));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 942,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ExportCSV, {\n    csvData: wipers,\n    fileName: \"wipers\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 943,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 944,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 945,\n      columnNumber: 5\n    }\n  }), wipers.map(element => /*#__PURE__*/React.createElement(Tile, {\n    kind: \"ancestor\",\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 947,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Tile, {\n    kind: \"parent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 948,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Tile, {\n    renderAs: \"article\",\n    kind: \"child\",\n    notification: true,\n    color: \"light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 949,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Heading, {\n    size: 7,\n    renderAs: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 950,\n      columnNumber: 15\n    }\n  }, element.name, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 951,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 952,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Tag, {\n    color: \"dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 953,\n      columnNumber: 17\n    }\n  }, \" Drawing \"), /*#__PURE__*/React.createElement(Tag, {\n    color: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 954,\n      columnNumber: 17\n    }\n  }, \" \", element.drawing), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 955,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 956,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    color: \"info\",\n    size: \"small\",\n    onClick: () => {\n      addWiperClick(element);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 957,\n      columnNumber: 17\n    }\n  }, \"Add Wiper\")))))));\n}; //---------------- Wiper filter","map":{"version":3,"sources":["/home/leon/Documentos/proyectos/mascara/client/src/components/Display.component.js"],"names":["React","useState","useEffect","Button","Tile","Heading","Image","Tag","ExportCSV","Control","Input","axios","BottleDisplay","BottlestoDisplay","bottle","props","bottles","rod","brush","setBuildClick","buildClick","search","setSearch","filterDisplay","setFilterDisplay","addBottle","data","post","name","drawing","mold","depth","thread","then","response","status","alert","console","log","err","Error","error","catch","addBottleClick","element","onChange","e","oldList","newList","filter","toLowerCase","indexOf","filteredBottles","map","brushLength","gap","Number","dimensions","length","target","value","BrushFilter","brushes","claim","addBrush","original","shaftLength","shaftDiameter","brushDiameter","type","addBrushClick","filteredBrushes","require","definition","volumizing","lengthening","curling","plumping","mascaraGap","RodFilter","rods","addRod","rodDiameter","addRodClick","filteredRods","depthDiff","brushRodDiff","wipeDelta","WiperFilter","wiper","wipers","addWiper","addWiperClick","filteredWipers"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport Button from 'react-bulma-components/lib/components/button';\nimport Tile from 'react-bulma-components/lib/components/tile';\nimport Heading from 'react-bulma-components/lib/components/heading';\nimport Image from 'react-bulma-components/lib/components/image';\nimport Tag from 'react-bulma-components/lib/components/tag';\nimport ExportCSV from './ExportCSV.component';\nimport {\n  Control,\n  Input,\n} from 'react-bulma-components/lib/components/form';\n\nimport axios from \"axios\";\nimport '../App.css';\n\n//---------------- Bottle filter\n\nexport const BottleDisplay = ({ BottlestoDisplay}) => {\n  const bottle = props.bottle;\n  const bottles = props.bottles;\n  const rod = props.rod;\n  const brush = props.brush;\n  const setBuildClick = props.setBuildClick;\n  const buildClick = props.buildClick;\n\n  const [search, setSearch] = useState(\"\");\n  const [filterDisplay, setFilterDisplay] = useState([]);\n\n  const addBottle = async (data) => {\n    await axios.post(\"/bottle\", {\n      name: data.name,\n      drawing: data.drawing,\n      mold: data.mold,\n      depth: data.depth,\n      thread: data.thread\n    })\n    .then(function (response) {\n      if (response.status === 200) {\n        alert(\"Bottle added to the list!\");\n        console.log(\"Succesfully added\");\n      } else {\n        const err = new Error(response.error);\n        console.log(err);\n        throw err;\n      }\n    })\n    .catch(function (error) {\n      alert(error);\n    });\n  };\n\n  const addBottleClick = (element) => {\n    addBottle(element);\n    setBuildClick(!buildClick);\n  };\n\n  const onChange = (e) => {\n    setSearch(e);\n\n    let oldList = bottles;\n\n    if(search !== \"\") {\n      let newList =[];\n\n      newList = bottles.filter( element => {\n        return element.name.toLowerCase().indexOf(search.toLowerCase()) !== -1;\n      });\n\n      setFilterDisplay(newList)\n    } else {\n      setFilterDisplay(bottles)\n    }\n  }\n\n  if (bottle && bottle.name){\n    const filteredBottles = bottles.filter( element => {\n      return element.name.toLowerCase().indexOf(bottle.name.toLowerCase()) !== -1;\n    });\n\n    return (\n      <div>\n        <ExportCSV csvData={filteredBottles} fileName=\"bottles\" />\n        <br />\n        <br />\n        {filteredBottles.map((element) => (\n          <Tile kind=\"ancestor\" className=\"App\">\n            <Tile kind=\"parent\">\n              <Tile renderAs=\"article\" kind=\"child\" notification color=\"light\">\n                <Heading size={7} renderAs=\"h6\">{element.name}\n                  <br/>\n                  <br/>\n                  <Tag color=\"dark\" className=\"App\"> Drawing </Tag>\n                  <Tag color=\"info\"> {element.drawing}</Tag>\n                  <br/>\n                  <Tag color=\"dark\"> Thread </Tag>\n                  <Tag color=\"info\"> {element.thread}</Tag>\n                <br/>\n                  <Tag color=\"dark\"> Depth </Tag>\n                  <Tag color=\"info\"> {element.depth}</Tag>\n                <br/>\n                <br/>\n                <Button\n                  type=\"submit\"\n                  color=\"info\"\n                  onClick={() => {\n                    addBottleClick(element);\n                  }}\n                  size=\"small\"\n                >\n                  Add Bottle\n                </Button>\n                </Heading>\n              </Tile>\n            </Tile>\n          </Tile>\n        ))}\n      </div>\n    );\n  } else if (rod && rod.thread && brush && brush.brushLength){\n    const filteredBottles = bottles.filter( element => {\n      let gap = (Number(element.depth) - (Number(rod.dimensions.length) + Number(brush.brushLength)) );\n      if (gap > 2 && gap < 6 && (element.thread.toLowerCase().indexOf(rod.thread.toLowerCase()) !== -1) ){\n        return element;\n      } else {\n        return \"\";\n      }\n    });\n\n    return (\n      <div>\n      <ExportCSV csvData={filteredBottles} fileName=\"bottles\" />\n      <br />\n      <br />\n        {filteredBottles.map((element) => (\n          <Tile kind=\"ancestor\" className=\"App\">\n            <Tile kind=\"parent\">\n              <Tile renderAs=\"article\" kind=\"child\" notification color=\"light\">\n                <Heading size={7} renderAs=\"h6\">{element.name}\n                  <br/>\n                  <br/>\n                  <Tag color=\"dark\" className=\"App\"> Drawing </Tag>\n                  <Tag color=\"info\"> {element.drawing}</Tag>\n                  <br/>\n                  <Tag color=\"dark\"> Thread </Tag>\n                  <Tag color=\"info\"> {element.thread}</Tag>\n                  <br/>\n                  <Tag color=\"dark\"> Depth </Tag>\n                  <Tag color=\"info\"> {element.depth}</Tag>\n                  <br/>\n                  <br/>\n                  <Button\n                    type=\"submit\"\n                    color=\"info\"\n                    onClick={() => {\n                      addBottleClick(element);\n                    }}\n                    size=\"small\"\n                  >\n                    Add Bottle\n                  </Button>\n                </Heading>\n              </Tile>\n            </Tile>\n          </Tile>\n        ))}\n      </div>\n    );\n\n  } else if (rod && rod.thread){\n    const filteredBottles = bottles.filter( element => {\n      return element.thread.toLowerCase().indexOf(rod.thread.toLowerCase()) !== -1;\n    });\n\n    return (\n      <div>\n      <ExportCSV csvData={filteredBottles} fileName=\"bottles\" />\n      <br />\n      <br />\n        {filteredBottles.map((element) => (\n          <Tile kind=\"ancestor\" className=\"App\">\n            <Tile kind=\"parent\">\n              <Tile renderAs=\"article\" kind=\"child\" notification color=\"light\">\n                <Heading size={7} renderAs=\"h6\">{element.name}\n                  <br/>\n                  <br/>\n                  <Tag color=\"dark\" className=\"App\"> Drawing </Tag>\n                  <Tag color=\"info\"> {element.drawing}</Tag>\n                  <br/>\n                  <Tag color=\"dark\"> Thread </Tag>\n                  <Tag color=\"info\"> {element.thread}</Tag>\n                  <br/>\n                  <Tag color=\"dark\"> Depth </Tag>\n                  <Tag color=\"info\"> {element.depth}</Tag>\n                  <br/>\n                  <br/>\n                  <Button\n                    type=\"submit\"\n                    color=\"info\"\n                    onClick={() => {\n                      addBottleClick(element);\n                    }}\n                    size=\"small\"\n                  >\n                    Add Bottle\n                  </Button>\n                </Heading>\n              </Tile>\n            </Tile>\n          </Tile>\n        ))}\n      </div>\n    );\n  }\n\n  return (\n    <div>\n    <ExportCSV csvData={bottles} fileName=\"bottles\" />\n    <Control>\n      <Input onChange={e => onChange(e.target.value)} name=\"bottle\" type=\"bottle\" placeholder=\"Bottle search\" value={search} />\n    </Control>\n    <br />\n    <br />\n      {filterDisplay.map((element) => (\n        <Tile kind=\"ancestor\" className=\"App\">\n          <Tile kind=\"parent\">\n            <Tile renderAs=\"article\" kind=\"child\" notification color=\"light\">\n              <Heading size={7} renderAs=\"h6\">{element.name}\n                <br/>\n                <br/>\n                <Tag color=\"dark\" className=\"App\"> Drawing </Tag>\n                <Tag color=\"info\"> {element.drawing}</Tag>\n                <br/>\n                <Tag color=\"dark\"> Thread </Tag>\n                <Tag color=\"info\"> {element.thread}</Tag>\n                <br/>\n                <Tag color=\"dark\"> Depth </Tag>\n                <Tag color=\"info\"> {element.depth}</Tag>\n                <br/>\n                <br/>\n                <Button\n                  type=\"submit\"\n                  color=\"info\"\n                  onClick={() => {\n                    addBottleClick(element);\n                  }}\n                  size=\"small\"\n                >\n                  Add Bottle\n                </Button>\n              </Heading>\n            </Tile>\n          </Tile>\n        </Tile>\n      ))}\n    </div>\n  );\n};\n\n//---------------- Bottle filter\n\n//---------------- Brush filter\n\nexport const BrushFilter = (props) => {\n  const brush = props.brush;\n  const brushes = props.brushes;\n  const claim = props.claim;\n  const rod = props.rod;\n  const bottle = props.bottle;\n  const setBuildClick = props.setBuildClick;\n  const buildClick = props.buildClick;\n\n  const addBrush = async (data) => {\n    await axios.post(\"/brush\", {\n        brush: data.brush,\n        original: data.original,\n        shaftLength: data.shaftLength,\n        shaftDiameter: data.shaftDiameter,\n        brushLength: data.brushLength,\n        brushDiameter: data.brushDiameter,\n        type: data.type\n      })\n      .then(function (response) {\n        if (response.status === 200) {\n          alert(\"Brush added to the list!\");\n          console.log(\"Succesfully added\");\n        } else {\n          const err = new Error(response.error);\n          console.log(err);\n          throw err;\n        }\n      })\n      .catch(function (error) {\n        alert(error);\n      });\n  };\n\n  const addBrushClick = (element) => {\n    addBrush(element);\n    setBuildClick(!buildClick);\n  };\n\n   if (brush && brush.brush){\n    const filteredBrushes = brushes.filter( element => {\n      return element.brush.toLowerCase().indexOf(brush.brush.toLowerCase()) !== -1;\n    });\n\n    return (\n      <div>\n      <ExportCSV csvData={filteredBrushes} fileName=\"brushes\" />\n      <br />\n      <br />\n        {filteredBrushes.map((element) => (\n          <Tile kind=\"ancestor\" className=\"App\">\n            <Tile kind=\"parent\">\n              <Tile renderAs=\"article\" kind=\"child\" notification color=\"light\">\n                <Heading size={7} renderAs=\"h6\" >{element.brush}\n                  <br/>\n                  <br/>\n                  <Image rounded=\"true\" key={element.brush} size=\"2by1\" className=\"center\" src={require(`../images/${element.brush}.jpg`)} alt=\"\" />\n                  <br/>\n                  <Tag color=\"dark\"> Drawing </Tag>\n                  <Tag color=\"info\"> {element.drawing}</Tag>\n                  <br/>\n                  <Tag color=\"dark\"> Type </Tag>\n                  <Tag color=\"info\"> {element.type}</Tag>\n                  <br/>\n                  <Tag color=\"dark\"> Length </Tag>\n                  <Tag color=\"info\"> {element.brushLength}</Tag>\n                  <br/>\n                  <Tag color=\"dark\"> Shaft </Tag>\n                  <Tag color=\"info\"> {element.shaftDiameter}</Tag>\n                  <br/>\n                  <Tag color=\"dark\"> Brush </Tag>\n                  <Tag color=\"info\"> {element.brushDiameter}</Tag>\n                  <br/>\n                  <br/>\n                  <Button\n                    type=\"submit\"\n                    color=\"info\"\n                    size=\"small\"\n                    onClick={() => {\n                      addBrushClick(element);\n                    }}\n                  >\n                    Add Brush\n                  </Button>\n                </Heading>\n              </Tile>\n            </Tile>\n          </Tile>\n        ))}\n      </div>\n    );\n\n  } else if (claim){\n    const filteredBrushes = brushes.filter( element => {\n      if (claim === \"definition\" && element.claim.definition === true) {\n        return element;\n      } else if (claim === \"volumizing\" && element.claim.volumizing === true)  {\n        return element;\n      } else if (claim === \"lengthening\" && element.claim.lengthening === true) {\n        return element;\n      } else if (claim === \"curling\" && element.claim.curling === true) {\n        return element;\n      } else if (claim === \"plumping\" && element.claim.plumping === true) {\n        return element;\n      } else {\n        return \"\";\n      }\n    });\n\n    return (\n      <div>\n      <ExportCSV csvData={filteredBrushes} fileName=\"brushes\" />\n      <br />\n      <br />\n        {filteredBrushes.map((element) => (\n          <Tile kind=\"ancestor\" className=\"App\">\n            <Tile kind=\"parent\">\n              <Tile renderAs=\"article\" kind=\"child\" notification color=\"light\">\n                <Heading size={7} renderAs=\"h6\" >{element.brush}\n                  <br/>\n                  <br/>\n                  <Image rounded=\"true\" key={element.brush} size=\"2by1\" className=\"center\" src={require(`../images/${element.brush}.jpg`)} alt=\"\" />\n                  <br/>\n                  <Tag color=\"dark\"> Drawing </Tag>\n                  <Tag color=\"info\"> {element.drawing}</Tag>\n                  <br/>\n                  <Tag color=\"dark\"> Type </Tag>\n                  <Tag color=\"info\"> {element.type}</Tag>\n                  <br/>\n                  <Tag color=\"dark\"> Length </Tag>\n                  <Tag color=\"info\"> {element.brushLength}</Tag>\n                  <br/>\n                  <Tag color=\"dark\"> Shaft </Tag>\n                  <Tag color=\"info\"> {element.shaftDiameter}</Tag>\n                  <br/>\n                  <Tag color=\"dark\"> Brush </Tag>\n                  <Tag color=\"info\"> {element.brushDiameter}</Tag>\n                  <br/>\n                  <br/>\n                  <Button\n                    type=\"submit\"\n                    color=\"info\"\n                    size=\"small\"\n                    onClick={() => {\n                      addBrushClick(element);\n                    }}\n                  >\n                    Add Brush\n                  </Button>\n                </Heading>\n              </Tile>\n            </Tile>\n          </Tile>\n        ))}\n      </div>\n    );\n\n  } else if (rod && rod.name && bottle && bottle.name){\n    const filteredBrushes = brushes.filter( element => {\n      let mascaraGap =  (Number(bottle.depth) - (Number(element.brushLength) + Number(rod.dimensions.length)));\n      if (mascaraGap > 1 && mascaraGap < 6) {\n        return element;\n      } else {\n        return null ;\n      }\n    });\n\n    return (\n      <div>\n      <ExportCSV csvData={filteredBrushes} fileName=\"brushes\" />\n      <br />\n      <br />\n        {filteredBrushes.map((element) => (\n          <Tile kind=\"ancestor\" className=\"App\">\n            <Tile kind=\"parent\">\n              <Tile renderAs=\"article\" kind=\"child\" notification color=\"light\">\n                <Heading size={7} renderAs=\"h6\" >{element.brush}\n                  <br/>\n                  <br/>\n                  <Image rounded=\"true\" key={element.brush} size=\"2by1\" className=\"center\" src={require(`../images/${element.brush}.jpg`)} alt=\"\" />\n                  <br/>\n                  <Tag color=\"dark\"> Drawing </Tag>\n                  <Tag color=\"info\"> {element.drawing}</Tag>\n                  <br/>\n                  <Tag color=\"dark\"> Type </Tag>\n                  <Tag color=\"info\"> {element.type}</Tag>\n                  <br/>\n                  <Tag color=\"dark\"> Length </Tag>\n                  <Tag color=\"info\"> {element.brushLength}</Tag>\n                  <br/>\n                  <Tag color=\"dark\"> Shaft </Tag>\n                  <Tag color=\"info\"> {element.shaftDiameter}</Tag>\n                  <br/>\n                  <Tag color=\"dark\"> Brush </Tag>\n                  <Tag color=\"info\"> {element.brushDiameter}</Tag>\n                  <br/>\n                  <br/>\n                  <Button\n                    type=\"submit\"\n                    color=\"info\"\n                    size=\"small\"\n                    onClick={() => {\n                      addBrushClick(element);\n                    }}\n                  >\n                    Add Brush\n                  </Button>\n                </Heading>\n              </Tile>\n            </Tile>\n          </Tile>\n        ))}\n      </div>\n    );\n\n  }\n\n  return (\n    <div>\n    <ExportCSV csvData={brushes} fileName=\"brushes\" />\n    <br />\n    <br />\n      {brushes.map((element) => (\n        <Tile kind=\"ancestor\" className=\"App\">\n          <Tile kind=\"parent\">\n            <Tile renderAs=\"article\" kind=\"child\" notification color=\"light\">\n              <Heading size={7} renderAs=\"h6\" >{element.brush}\n                <br/>\n                <br/>\n                <Image rounded=\"true\" key={element.brush} size=\"2by1\" className=\"center\" src={require(`../images/${element.brush}.jpg`)} alt=\"\" />\n                <br/>\n                <Tag color=\"dark\"> Drawing </Tag>\n                <Tag color=\"info\"> {element.drawing}</Tag>\n                <br/>\n                <Tag color=\"dark\"> Type </Tag>\n                <Tag color=\"info\"> {element.type}</Tag>\n                <br/>\n                <Tag color=\"dark\"> Length </Tag>\n                <Tag color=\"info\"> {element.brushLength}</Tag>\n                <br/>\n                <Tag color=\"dark\"> Shaft </Tag>\n                <Tag color=\"info\"> {element.shaftDiameter}</Tag>\n                <br/>\n                <Tag color=\"dark\"> Brush </Tag>\n                <Tag color=\"info\"> {element.brushDiameter}</Tag>\n                <br/>\n                <br/>\n                <Button\n                  type=\"submit\"\n                  color=\"info\"\n                  size=\"small\"\n                  onClick={() => {\n                    addBrushClick(element);\n                  }}\n                >\n                  Add Brush\n                </Button>\n              </Heading>\n            </Tile>\n          </Tile>\n        </Tile>\n      ))}\n    </div>\n  );\n};\n\n//---------------- Brush filter\n\n//---------------- Rod filter\n\nexport const RodFilter = (props) => {\n  const rod = props.rod;\n  const rods = props.rods;\n  const bottle = props.bottle;\n  const brush = props.brush;\n  const setBuildClick = props.setBuildClick;\n  const buildClick = props.buildClick;\n\n  const addRod = async (data) => {\n    await axios.post(\"/rod\", {\n        name: data.name,\n        drawing: data.drawing,\n        thread: data.thread,\n        dimensions: {\n          length: data.dimensions.length,\n          rodDiameter: data.dimensions.rodDiameter,\n          brushDiameter: data.dimensions.brushDiameter,\n        }\n      })\n      .then(function (response) {\n        if (response.status === 200) {\n          alert(\"Rod added to the list!\");\n          console.log(\"Succesfully added\");\n        } else {\n          const err = new Error(response.error);\n          console.log(err);\n          throw err;\n        }\n      })\n      .catch(function (error) {\n        alert(error);\n      });\n  };\n\n  const addRodClick = (element) => {\n    addRod(element);\n    setBuildClick(!buildClick);\n  };\n\n  if (rod && rod.name){\n    const filteredRods = rods.filter( element => {\n      return element.name.toLowerCase().indexOf(rod.name.toLowerCase()) !== -1;\n    });\n\n    return (\n      <div>\n      <ExportCSV csvData={filteredRods} fileName=\"rods\" />\n      <br />\n      <br />\n        {filteredRods.map((element) => (\n          <Tile kind=\"ancestor\" className=\"App\">\n            <Tile kind=\"parent\">\n              <Tile renderAs=\"article\" kind=\"child\" notification color=\"light\">\n                <Heading size={7} renderAs=\"h6\" >{element.name}\n                  <br/>\n                  <br/>\n                  <Tag color=\"dark\"> Drawing </Tag>\n                  <Tag color=\"info\"> {element.drawing}</Tag>\n                  <br/>\n                  <Tag color=\"dark\"> Thread </Tag>\n                  <Tag color=\"info\"> {element.thread}</Tag>\n                  <br/>\n                  <Tag color=\"dark\"> Length </Tag>\n                  <Tag color=\"info\"> {element.dimensions.length}</Tag>\n                  <br/>\n                  <Tag color=\"dark\"> Shaft </Tag>\n                  <Tag color=\"info\"> {element.dimensions.brushDiameter}</Tag>\n                  <br/>\n                  <Tag color=\"dark\"> Rod </Tag>\n                  <Tag color=\"info\"> {element.dimensions.rodDiameter}</Tag>\n                  <br/>\n                  <br/>\n                  <Button\n                    type=\"submit\"\n                    color=\"info\"\n                    size=\"small\"\n                    onClick={() => {\n                      addRodClick(element);\n                    }}\n                  >\n                    Add Rod\n                  </Button>\n                </Heading>\n              </Tile>\n            </Tile>\n          </Tile>\n        ))}\n      </div>\n    );\n\n  } else if (bottle && bottle.thread && bottle.depth){\n    const filteredRods = rods.filter( element => {\n      let depthDiff = (Number(bottle.depth) - Number(element.dimensions.length));\n      if (element.thread && (depthDiff > 0)) {\n        return element.thread.toLowerCase().indexOf(bottle.thread.toLowerCase()) !== -1;\n      } else {\n        return \"\";\n      }\n    });\n\n    return (\n      <div>\n      <ExportCSV csvData={filteredRods} fileName=\"rods\" />\n      <br />\n      <br />\n        {filteredRods.map((element) => (\n          <Tile kind=\"ancestor\" className=\"App\">\n            <Tile kind=\"parent\">\n              <Tile renderAs=\"article\" kind=\"child\" notification color=\"light\">\n                <Heading size={7} renderAs=\"h6\" >{element.name}\n                  <br/>\n                  <br/>\n                  <Tag color=\"dark\"> Drawing </Tag>\n                  <Tag color=\"info\"> {element.drawing}</Tag>\n                  <br/>\n                  <Tag color=\"dark\"> Thread </Tag>\n                  <Tag color=\"info\"> {element.thread}</Tag>\n                  <br/>\n                  <Tag color=\"dark\"> Length </Tag>\n                  <Tag color=\"info\"> {element.dimensions.length}</Tag>\n                  <br/>\n                  <Tag color=\"dark\"> Shaft </Tag>\n                  <Tag color=\"info\"> {element.dimensions.brushDiameter}</Tag>\n                  <br/>\n                  <Tag color=\"dark\"> Rod </Tag>\n                  <Tag color=\"info\"> {element.dimensions.rodDiameter}</Tag>\n                  <br/>\n                  <br/>\n                  <Button\n                    type=\"submit\"\n                    color=\"info\"\n                    size=\"small\"\n                    onClick={() => {\n                      addRodClick(element);\n                    }}\n                  >\n                    Add Rod\n                  </Button>\n                </Heading>\n              </Tile>\n            </Tile>\n          </Tile>\n        ))}\n      </div>\n  );\n\n  } else if (bottle && bottle.thread){\n    const filteredRods = rods.filter( element => {\n      if (element.thread) {\n        return element.thread.toLowerCase().indexOf(bottle.thread.toLowerCase()) !== -1;\n      } else {\n        return \"\";\n      }\n    });\n\n    return (\n      <div>\n      <ExportCSV csvData={filteredRods} fileName=\"rods\" />\n      <br />\n      <br />\n        {filteredRods.map((element) => (\n          <Tile kind=\"ancestor\" className=\"App\">\n            <Tile kind=\"parent\">\n              <Tile renderAs=\"article\" kind=\"child\" notification color=\"light\">\n                <Heading size={7} renderAs=\"h6\" >{element.name}\n                  <br/>\n                  <br/>\n                  <Tag color=\"dark\"> Drawing </Tag>\n                  <Tag color=\"info\"> {element.drawing}</Tag>\n                  <br/>\n                  <Tag color=\"dark\"> Thread </Tag>\n                  <Tag color=\"info\"> {element.thread}</Tag>\n                  <br/>\n                  <Tag color=\"dark\"> Length </Tag>\n                  <Tag color=\"info\"> {element.dimensions.length}</Tag>\n                  <br/>\n                  <Tag color=\"dark\"> Shaft </Tag>\n                  <Tag color=\"info\"> {element.dimensions.brushDiameter}</Tag>\n                  <br/>\n                  <Tag color=\"dark\"> Rod </Tag>\n                  <Tag color=\"info\"> {element.dimensions.rodDiameter}</Tag>\n                  <br/>\n                  <br/>\n                  <Button\n                    type=\"submit\"\n                    color=\"info\"\n                    size=\"small\"\n                    onClick={() => {\n                      addRodClick(element);\n                    }}\n                  >\n                    Add Rod\n                  </Button>\n                </Heading>\n              </Tile>\n            </Tile>\n          </Tile>\n        ))}\n      </div>\n  );\n\n  } else if (brush && brush.type){\n    const filteredRods = rods.filter( element => {\n      let brushRodDiff =  Number(element.dimensions.brushDiameter) - Number(brush.shaftDiameter);\n      let wipeDelta =  Number(brush.brushDiameter) - Number(element.dimensions.rodDiameter) ;\n      if (brush.type === \"INYECTADO\" && wipeDelta > 0.5 && wipeDelta < 4.8) {\n        if (brushRodDiff > 0.05 && brushRodDiff < 0.15){\n          return element;\n        } else {\n          return \"\";\n        }\n      }\n      if (brush.type === \"NYLON\" && wipeDelta > 0.8 && wipeDelta < 6.4) {\n        if (brushRodDiff > -0.05 && brushRodDiff < 0.1){\n          return element;\n        } else {\n          return \"\";\n        }\n      }\n      if (brush.type === \"LIP GLOSS\" && wipeDelta > -2 && wipeDelta < 3) {\n        if (brushRodDiff > 0 && brushRodDiff < 0.2){\n          return element;\n        } else {\n          return \"\";\n        }\n      }\n      if (brush.type === \"DELINEADOR\" && wipeDelta > -2 && wipeDelta < -1) {\n        if (brushRodDiff > -0.05 && brushRodDiff < 0.1){\n          return element;\n        } else {\n          return \"\";\n        }\n      }\n    });\n\n    return (\n      <div>\n      <ExportCSV csvData={filteredRods} fileName=\"rods\" />\n      <br />\n      <br />\n        {filteredRods.map((element) => (\n          <Tile kind=\"ancestor\" className=\"App\">\n            <Tile kind=\"parent\">\n              <Tile renderAs=\"article\" kind=\"child\" notification color=\"light\">\n                <Heading size={7} renderAs=\"h6\" >{element.name}\n                  <br/>\n                  <br/>\n                  <Tag color=\"dark\"> Drawing </Tag>\n                  <Tag color=\"info\"> {element.drawing}</Tag>\n                  <br/>\n                  <Tag color=\"dark\"> Thread </Tag>\n                  <Tag color=\"info\"> {element.thread}</Tag>\n                  <br/>\n                  <Tag color=\"dark\"> Length </Tag>\n                  <Tag color=\"info\"> {element.dimensions.length}</Tag>\n                  <br/>\n                  <Tag color=\"dark\"> Shaft </Tag>\n                  <Tag color=\"info\"> {element.dimensions.brushDiameter}</Tag>\n                  <br/>\n                  <Tag color=\"dark\"> Rod </Tag>\n                  <Tag color=\"info\"> {element.dimensions.rodDiameter}</Tag>\n                  <br/>\n                  <br/>\n                  <Button\n                    type=\"submit\"\n                    color=\"info\"\n                    size=\"small\"\n                    onClick={() => {\n                      addRodClick(element);\n                    }}\n                  >\n                    Add Rod\n                  </Button>\n                </Heading>\n              </Tile>\n            </Tile>\n          </Tile>\n        ))}\n      </div>\n  );\n\n  }\n\n  return (\n    <div>\n    <ExportCSV csvData={rods} fileName=\"rods\" />\n    <br />\n    <br />\n      {rods.map((element) => (\n        <Tile kind=\"ancestor\" className=\"App\">\n          <Tile kind=\"parent\">\n            <Tile renderAs=\"article\" kind=\"child\" notification color=\"light\">\n              <Heading size={7} renderAs=\"h6\" >{element.name}\n                <br/>\n                <br/>\n                <Tag color=\"dark\"> Drawing </Tag>\n                <Tag color=\"info\"> {element.drawing}</Tag>\n                <br/>\n                <Tag color=\"dark\"> Thread </Tag>\n                <Tag color=\"info\"> {element.thread}</Tag>\n                <br/>\n                <Tag color=\"dark\"> Length </Tag>\n                <Tag color=\"info\"> {element.dimensions.length}</Tag>\n                <br/>\n                <Tag color=\"dark\"> Shaft </Tag>\n                <Tag color=\"info\"> {element.dimensions.brushDiameter}</Tag>\n                <br/>\n                <Tag color=\"dark\"> Rod </Tag>\n                <Tag color=\"info\"> {element.dimensions.rodDiameter}</Tag>\n                <br/>\n                <br/>\n                <Button\n                  type=\"submit\"\n                  color=\"info\"\n                  size=\"small\"\n                  onClick={() => {\n                    addRodClick(element);\n                  }}\n                >\n                  Add Rod\n                </Button>\n              </Heading>\n            </Tile>\n          </Tile>\n        </Tile>\n      ))}\n    </div>\n\n  );\n\n};\n\n//---------------- Rod filter\n\n//---------------- Wiper filter\n\nexport const WiperFilter = (props) => {\n  const wiper = props.wiper;\n  const wipers = props.wipers;\n  const setBuildClick = props.setBuildClick;\n  const buildClick = props.buildClick;\n\n  const addWiper = async (data) => {\n    await axios.post(\"/wiper\", {\n        name: data.name,\n        drawing: data.drawing,\n        mold: data.mold,\n      })\n      .then(function (response) {\n        if (response.status === 200) {\n          alert(\"Wiper added to the list!\");\n          console.log(\"Wiper succesfully added\");\n        } else {\n          const err = new Error(response.error);\n          console.log(err);\n          throw err;\n        }\n      })\n      .catch(function (error) {\n        alert(error);\n      });\n  };\n\n  const addWiperClick = (element) => {\n    addWiper(element);\n    setBuildClick(!buildClick);\n  };\n\n   if (wiper && wiper.name){\n    const filteredWipers = wipers.filter( element => {\n      return element.name.toLowerCase().indexOf(wiper.name.toLowerCase()) !== -1;\n    });\n\n    return (\n      <div>\n      <ExportCSV csvData={filteredWipers} fileName=\"wipers\" />\n      <br />\n      <br />\n        {filteredWipers.map((element) => (\n          <Tile kind=\"ancestor\" className=\"App\">\n            <Tile kind=\"parent\">\n              <Tile renderAs=\"article\" kind=\"child\" notification color=\"light\">\n              <Heading size={7} renderAs=\"h6\" >{element.name}\n                <br/>\n                <br/>\n                <Tag color=\"dark\"> Drawing </Tag>\n                <Tag color=\"info\"> {element.drawing}</Tag>\n                <br/>\n                <br/>\n                <Button\n                  type=\"submit\"\n                  color=\"info\"\n                  size=\"small\"\n                  onClick={() => {\n                    addWiperClick(element);\n                  }}\n                >\n                  Add Wiper\n                </Button>\n              </Heading>\n              </Tile>\n            </Tile>\n          </Tile>\n        ))}\n      </div>\n    );\n  }\n\n  return (\n    <div>\n    <ExportCSV csvData={wipers} fileName=\"wipers\" />\n    <br />\n    <br />\n      {wipers.map((element) => (\n        <Tile kind=\"ancestor\" className=\"App\">\n          <Tile kind=\"parent\">\n            <Tile renderAs=\"article\" kind=\"child\" notification color=\"light\">\n              <Heading size={7} renderAs=\"h6\" >{element.name}\n                <br/>\n                <br/>\n                <Tag color=\"dark\"> Drawing </Tag>\n                <Tag color=\"info\"> {element.drawing}</Tag>\n                <br/>\n                <br/>\n                <Button\n                  type=\"submit\"\n                  color=\"info\"\n                  size=\"small\"\n                  onClick={() => {\n                    addWiperClick(element);\n                  }}\n                >\n                  Add Wiper\n                </Button>\n              </Heading>\n            </Tile>\n          </Tile>\n        </Tile>\n      ))}\n    </div>\n  );\n};\n\n//---------------- Wiper filter\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/leon/Documentos/proyectos/react/mascaras/client/src/components/Build.component.js\";\nimport React, { useState, useEffect } from 'react';\nimport '../App.css';\nimport Button from 'react-bulma-components/lib/components/button';\nimport Section from 'react-bulma-components/lib/components/section';\nimport Container from 'react-bulma-components/lib/components/container';\nimport Heading from 'react-bulma-components/lib/components/heading';\nimport Tile from 'react-bulma-components/lib/components/tile';\nimport MascaraBuild from './MascaraBuild.component';\nimport { BottleModal, BrushModal, RodModal, CapModal, WiperModal } from './OpenModal.component';\nimport { ThreadCompatibility, BrushRodCompatibility, BrushWiperCompatibility, GapCompatibility } from './Compatibility.component';\nimport axios from \"axios\";\n\nconst Build = () => {\n  //------hooks\n  const [thread, setThread] = useState(false);\n  const [rodBrush, setRodBrush] = useState(false);\n  const [brushWiper, setBrushWiper] = useState(false);\n  const [gap, setGap] = useState(false);\n  const [build, setBuild] = useState([]);\n  const [modalClick, setModalClick] = useState(false); //------hooks end\n  //------useEffect\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const {\n        data\n      } = await axios.get(\"/build\").catch(function (error) {\n        console.log(error);\n      });\n      setBuild(data);\n    };\n\n    fetchData();\n\n    if (!build[0]) {\n      setThread(false);\n      setGap(false);\n      setBrushWiper(false);\n      setRodBrush(false);\n    }\n\n    if (build[0] && build[0].bottle && build[0].rod) {\n      if (build[0].bottle.thread === build[0].rod.thread) {\n        setThread(true);\n      } else {\n        setThread(false);\n      }\n    }\n\n    if (build[0] && build[0].brush && build[0].rod) {\n      let brushRodDiff = Number(build[0].rod.dimensions.brushDiameter) - Number(build[0].brush.shaftDiameter);\n\n      if (build[0].brush.type === \"INYECTADO\") {\n        if (brushRodDiff > 0.05 && brushRodDiff < 0.15) {\n          setRodBrush(true);\n        } else {\n          setRodBrush(false);\n        }\n      }\n\n      if (build[0].brush.type === \"NYLON\") {\n        if (brushRodDiff > -0.05 && brushRodDiff < 0.1) {\n          setRodBrush(true);\n        } else {\n          setRodBrush(false);\n        }\n      }\n\n      if (build[0].brush.type === \"LIP GLOSS\") {\n        if (brushRodDiff > 0 && brushRodDiff < 0.2) {\n          setRodBrush(true);\n        } else {\n          setRodBrush(false);\n        }\n      }\n\n      if (build[0].brush.type === \"DELINEADOR\") {\n        if (brushRodDiff > -0.05 && brushRodDiff < 0.1) {\n          setRodBrush(true);\n        } else {\n          setRodBrush(false);\n        }\n      }\n    }\n  }, [modalClick]); //------useEffect end\n  //------middlewares that must be moved and imported\n\n  const deleteBuild = async () => {\n    await axios.post(\"/delete\").then(function (response) {\n      if (response.status === 200) {\n        console.log(\"Succesfully deleted\");\n        alert(\"Build deleted!\");\n      } else {\n        const err = new Error(response.error);\n        console.log(err);\n        throw err;\n      }\n    }).catch(function (error) {\n      alert(error);\n    });\n  };\n\n  const verifyThread = () => {\n    if (build[0] && build[0].bottle && build[0].rod) {\n      if (build[0].bottle.thread === build[0].rod.thread) {\n        setThread(true);\n      } else {\n        alert(\"Threads are different\");\n        setThread(false);\n      }\n    } else {\n      alert(\"There is missing data on the mascara\");\n    }\n  };\n\n  const verifyRodBrush = () => {\n    if (build[0] && build[0].brush && build[0].rod) {\n      let brushRodDiff = Number(build[0].rod.dimensions.brushDiameter) - Number(build[0].brush.shaftDiameter);\n\n      if (build[0].brush.type === \"INYECTADO\") {\n        if (brushRodDiff > 0.05 && brushRodDiff < 0.15) {\n          setRodBrush(true);\n        } else {\n          alert(\"Difference is lower than 0.05mm or bigger than 0.15mm\");\n        }\n      }\n\n      if (build[0].brush.type === \"NYLON\") {\n        if (brushRodDiff > -0.05 && brushRodDiff < 0.1) {\n          setRodBrush(true);\n        } else {\n          alert(\"Difference is lower than -0.05mm or bigger than 0.1mm\");\n        }\n      }\n\n      if (build[0].brush.type === \"LIP GLOSS\") {\n        if (brushRodDiff > 0 && brushRodDiff < 0.2) {\n          setRodBrush(true);\n        } else {\n          alert(\"Difference is lower than 0mm or bigger than 0.2mm\");\n        }\n      }\n\n      if (build[0].brush.type === \"DELINEADOR\") {\n        if (brushRodDiff > -0.05 && brushRodDiff < 0.1) {\n          setRodBrush(true);\n        } else {\n          alert(\"Difference is lower than -0.05mm or bigger than 0.1mm\");\n        }\n      }\n    } else {\n      alert(\"There is missing data on the mascara\");\n    }\n  };\n\n  const verifyBrushWiper = () => {\n    if (build[0] && build[0].brush && build[0].rod) {\n      let brushWiperDiff = Number(build[0].brush.brushDiameter) - Number(build[0].rod.dimensions.rodDiameter);\n\n      if (build[0].brush.type === \"INYECTADO\") {\n        if (brushWiperDiff > 0.5 && brushWiperDiff < 4.8) {\n          setBrushWiper(true);\n        } else {\n          alert(\"Difference is lower than 0.5mm or bigger than 4.8mm\");\n        }\n      }\n\n      if (build[0].brush.type === \"NYLON\") {\n        if (brushWiperDiff > 0.8 && brushWiperDiff < 6.4) {\n          setBrushWiper(true);\n        } else {\n          alert(\"Difference is lower than 0.8mm or bigger than 6.4mm\");\n        }\n      }\n\n      if (build[0].brush.type === \"LIP GLOSS\") {\n        if (brushWiperDiff > -3 && brushWiperDiff < 2) {\n          setBrushWiper(true);\n        } else {\n          alert(\"Difference is lower than -3mm or bigger than 2mm\");\n        }\n      }\n\n      if (build[0].brush.type === \"DELINEADOR\") {\n        if (brushWiperDiff > 1 && brushWiperDiff < 2) {\n          setBrushWiper(true);\n        } else {\n          alert(\"Difference is lower than 1mm or bigger than 2mm\");\n        }\n      }\n    } else {\n      alert(\"There is missing build on the mascara\");\n    }\n  };\n\n  const verifyGap = () => {\n    if (build[0] && build[0].bottle && build[0].rod) {\n      if (build[0].bottle.thread === build[0].rod.thread) {\n        setGap(true);\n      } else {\n        setGap(false);\n      }\n    } else {\n      alert(\"There is missing data on the mascara\");\n    }\n  };\n\n  const reset = () => {\n    setThread(false);\n    setGap(false);\n    setBrushWiper(false);\n    setRodBrush(false);\n  }; //------middlewares that must be moved and imported end\n  //------rendering of the component\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App App-build\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Tile, {\n    kind: \"ancestor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Tile, {\n    kind: \"parent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Tile, {\n    renderAs: \"article\",\n    kind: \"child\",\n    notification: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ThreadCompatibility, {\n    thread: thread,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Tile, {\n    renderAs: \"article\",\n    kind: \"child\",\n    notification: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(BrushRodCompatibility, {\n    rodBrush: rodBrush,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Tile, {\n    renderAs: \"article\",\n    kind: \"child\",\n    notification: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(BrushWiperCompatibility, {\n    brushWiper: brushWiper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Tile, {\n    renderAs: \"article\",\n    kind: \"child\",\n    notification: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(GapCompatibility, {\n    gap: gap,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(Section, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button.Group, {\n    position: \"centered\",\n    size: \"medium\",\n    onClick: () => setModalClick(!modalClick),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"danger\",\n    onClick: () => {\n      deleteBuild();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 13\n    }\n  }, \"Erase build\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"info\",\n    onClick: () => {\n      reset();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 13\n    }\n  }, \"Reset\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"info\",\n    onClick: () => {\n      setRodBrush(true);\n      setThread(true);\n      setBrushWiper(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 13\n    }\n  }, \"Check state\")), \"//------invisible buttons for verification\", /*#__PURE__*/React.createElement(Button.Group, {\n    position: \"centered\",\n    size: \"medium\",\n    className: \"invisible\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"dark\",\n    onClick: () => {\n      verifyThread();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 13\n    }\n  }, \"Check thread\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"dark\",\n    onClick: () => {\n      verifyRodBrush();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 13\n    }\n  }, \"Check rod and brush\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"dark\",\n    onClick: () => {\n      verifyBrushWiper();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 13\n    }\n  }, \"Check brush and wiper\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"dark\",\n    onClick: () => {\n      verifyGap();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 13\n    }\n  }, \"Check gap\")), \"//------invisible buttons for verification\", /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Heading, {\n    size: 5,\n    renderAs: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 13\n    }\n  }, \"Build\"), /*#__PURE__*/React.createElement(Heading, {\n    subtitle: true,\n    renderAs: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 13\n    }\n  }, \"Mascara\")), /*#__PURE__*/React.createElement(Button.Group, {\n    position: \"centered\",\n    size: \"medium\",\n    onClick: () => setModalClick(!modalClick),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(BottleModal, {\n    build: build,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(BrushModal, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(RodModal, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(Section, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MascaraBuild, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 9\n    }\n  })));\n}; //------here ends rendering of the component\n\n\nexport default Build;","map":{"version":3,"sources":["/home/leon/Documentos/proyectos/react/mascaras/client/src/components/Build.component.js"],"names":["React","useState","useEffect","Button","Section","Container","Heading","Tile","MascaraBuild","BottleModal","BrushModal","RodModal","CapModal","WiperModal","ThreadCompatibility","BrushRodCompatibility","BrushWiperCompatibility","GapCompatibility","axios","Build","thread","setThread","rodBrush","setRodBrush","brushWiper","setBrushWiper","gap","setGap","build","setBuild","modalClick","setModalClick","fetchData","data","get","catch","error","console","log","bottle","rod","brush","brushRodDiff","Number","dimensions","brushDiameter","shaftDiameter","type","deleteBuild","post","then","response","status","alert","err","Error","verifyThread","verifyRodBrush","verifyBrushWiper","brushWiperDiff","rodDiameter","verifyGap","reset"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport '../App.css';\nimport Button from 'react-bulma-components/lib/components/button';\nimport Section from 'react-bulma-components/lib/components/section';\nimport Container from 'react-bulma-components/lib/components/container';\nimport Heading from 'react-bulma-components/lib/components/heading';\nimport Tile from 'react-bulma-components/lib/components/tile';\nimport MascaraBuild from './MascaraBuild.component';\nimport {\n  BottleModal,\n  BrushModal,\n  RodModal,\n  CapModal,\n  WiperModal\n} from './OpenModal.component';\nimport {\n  ThreadCompatibility,\n  BrushRodCompatibility,\n  BrushWiperCompatibility,\n  GapCompatibility,\n} from './Compatibility.component';\nimport axios from \"axios\";\n\nconst Build = () => {\n\n  //------hooks\n\n  const [thread, setThread] = useState(false);\n  const [rodBrush, setRodBrush] = useState(false);\n  const [brushWiper, setBrushWiper] = useState(false);\n  const [gap, setGap] = useState(false);\n  const [build, setBuild] = useState([]);\n  const [modalClick, setModalClick] = useState(false);\n\n  //------hooks end\n  //------useEffect\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const {data} = await axios.get(\"/build\")\n      .catch(function (error) {\n        console.log(error)\n      });\n      setBuild(data);\n    }\n    fetchData();\n\n    if (!build[0]) {\n      setThread(false);\n      setGap(false);\n      setBrushWiper(false);\n      setRodBrush(false);\n    }\n\n    if (build[0] && build[0].bottle && build[0].rod) {\n      if (build[0].bottle.thread === build[0].rod.thread) {\n        setThread(true);\n      } else {\n        setThread(false);\n      }\n    }\n\n    if (build[0] && build[0].brush && build[0].rod) {\n      let brushRodDiff =  Number(build[0].rod.dimensions.brushDiameter) - Number(build[0].brush.shaftDiameter);\n      if (build[0].brush.type === \"INYECTADO\") {\n        if (brushRodDiff > 0.05 && brushRodDiff < 0.15){\n          setRodBrush(true);\n        } else {\n          setRodBrush(false);\n        }\n      }\n      if (build[0].brush.type === \"NYLON\") {\n        if (brushRodDiff > -0.05 && brushRodDiff < 0.1){\n          setRodBrush(true);\n        } else {\n          setRodBrush(false);\n        }\n      }\n      if (build[0].brush.type === \"LIP GLOSS\") {\n        if (brushRodDiff > 0 && brushRodDiff < 0.2){\n          setRodBrush(true);\n        } else {\n          setRodBrush(false);\n        }\n      }\n      if (build[0].brush.type === \"DELINEADOR\") {\n        if (brushRodDiff > -0.05 && brushRodDiff < 0.1){\n          setRodBrush(true);\n        } else {\n          setRodBrush(false);\n        }\n      }\n    }\n\n  }, [modalClick]);\n\n  //------useEffect end\n  //------middlewares that must be moved and imported\n\n  const deleteBuild = async () => {\n    await axios.post(\"/delete\")\n    .then(function (response) {\n      if (response.status === 200) {\n        console.log(\"Succesfully deleted\");\n        alert(\"Build deleted!\");\n      } else {\n        const err = new Error(response.error);\n        console.log(err);\n        throw err;\n      }\n    })\n    .catch(function (error) {\n      alert(error);\n    });\n  };\n\n  const verifyThread = () => {\n    if (build[0] && build[0].bottle && build[0].rod) {\n      if (build[0].bottle.thread === build[0].rod.thread) {\n        setThread(true);\n      } else {\n        alert(\"Threads are different\")\n        setThread(false);\n      }\n    } else {\n      alert(\"There is missing data on the mascara\")\n    }\n  };\n\n  const verifyRodBrush = () => {\n    if (build[0] && build[0].brush && build[0].rod) {\n      let brushRodDiff =  Number(build[0].rod.dimensions.brushDiameter) - Number(build[0].brush.shaftDiameter);\n      if (build[0].brush.type === \"INYECTADO\") {\n        if (brushRodDiff > 0.05 && brushRodDiff < 0.15){\n          setRodBrush(true);\n        } else {\n          alert(\"Difference is lower than 0.05mm or bigger than 0.15mm\")\n        }\n      }\n      if (build[0].brush.type === \"NYLON\") {\n        if (brushRodDiff > -0.05 && brushRodDiff < 0.1){\n          setRodBrush(true);\n        } else {\n          alert(\"Difference is lower than -0.05mm or bigger than 0.1mm\")\n        }\n      }\n      if (build[0].brush.type === \"LIP GLOSS\") {\n        if (brushRodDiff > 0 && brushRodDiff < 0.2){\n          setRodBrush(true);\n        } else {\n          alert(\"Difference is lower than 0mm or bigger than 0.2mm\")\n        }\n      }\n      if (build[0].brush.type === \"DELINEADOR\") {\n        if (brushRodDiff > -0.05 && brushRodDiff < 0.1){\n          setRodBrush(true);\n        } else {\n          alert(\"Difference is lower than -0.05mm or bigger than 0.1mm\")\n        }\n      }\n    } else {\n      alert(\"There is missing data on the mascara\")\n    }\n  };\n  const verifyBrushWiper = () => {\n    if (build[0] && build[0].brush && build[0].rod) {\n      let brushWiperDiff =  Number(build[0].brush.brushDiameter) - Number(build[0].rod.dimensions.rodDiameter) ;\n      if (build[0].brush.type === \"INYECTADO\") {\n        if (brushWiperDiff > 0.5 && brushWiperDiff < 4.8){\n          setBrushWiper(true);\n        } else {\n          alert(\"Difference is lower than 0.5mm or bigger than 4.8mm\")\n        }\n      }\n      if (build[0].brush.type === \"NYLON\") {\n        if (brushWiperDiff > 0.8 && brushWiperDiff < 6.4){\n          setBrushWiper(true);\n        } else {\n          alert(\"Difference is lower than 0.8mm or bigger than 6.4mm\")\n        }\n      }\n      if (build[0].brush.type === \"LIP GLOSS\") {\n        if (brushWiperDiff > -3 && brushWiperDiff < 2){\n          setBrushWiper(true);\n        } else {\n          alert(\"Difference is lower than -3mm or bigger than 2mm\")\n        }\n      }\n      if (build[0].brush.type === \"DELINEADOR\") {\n        if (brushWiperDiff > 1 && brushWiperDiff < 2){\n          setBrushWiper(true);\n        } else {\n          alert(\"Difference is lower than 1mm or bigger than 2mm\")\n        }\n      }\n    } else {\n      alert(\"There is missing build on the mascara\")\n    }\n  };\n  const verifyGap = () => {\n    if (build[0] && build[0].bottle && build[0].rod) {\n      if (build[0].bottle.thread === build[0].rod.thread) {\n        setGap(true);\n      } else {\n        setGap(false);\n      }\n    } else {\n      alert(\"There is missing data on the mascara\")\n    }\n  };\n  const reset = () => {\n    setThread(false);\n    setGap(false);\n    setBrushWiper(false);\n    setRodBrush(false);\n  };\n\n  //------middlewares that must be moved and imported end\n  //------rendering of the component\n\n  return (\n    <div className=\"App App-build\">\n      <Tile kind=\"ancestor\">\n        <Tile kind=\"parent\">\n          <Tile renderAs=\"article\" kind=\"child\" notification >\n            <ThreadCompatibility thread={thread}>\n            </ThreadCompatibility>\n          </Tile>\n          <Tile renderAs=\"article\" kind=\"child\" notification >\n            <BrushRodCompatibility rodBrush={rodBrush}>\n            </BrushRodCompatibility>\n          </Tile>\n          <Tile renderAs=\"article\" kind=\"child\" notification >\n            <BrushWiperCompatibility brushWiper={brushWiper}>\n            </BrushWiperCompatibility>\n          </Tile>\n          <Tile renderAs=\"article\" kind=\"child\" notification >\n            <GapCompatibility gap={gap}>\n            </GapCompatibility>\n          </Tile>\n        </Tile>\n      </Tile>\n      <Section>\n        <Container>\n          <Button.Group\n            position=\"centered\"\n            size=\"medium\"\n            onClick={() => setModalClick(!modalClick)}\n          >\n            <Button\n              color=\"danger\"\n              onClick={() => {\n                deleteBuild();\n              }}\n            >\n              Erase build\n            </Button>\n            <Button\n              color=\"info\"\n              onClick={() => {\n                reset();\n              }}\n            >\n              Reset\n            </Button>\n            <Button\n              color=\"info\"\n              onClick={() => {\n                setRodBrush(true);\n                setThread(true);\n                setBrushWiper(true);\n              }}\n            >\n              Check state\n            </Button>\n          </Button.Group>\n\n          //------invisible buttons for verification\n\n          <Button.Group\n            position=\"centered\"\n            size=\"medium\"\n            className=\"invisible\"\n          >\n            <Button\n              color=\"dark\"\n              onClick={() => {\n                verifyThread();\n              }}\n            >\n              Check thread\n            </Button>\n            <Button\n              color=\"dark\"\n              onClick={() => {\n                verifyRodBrush();\n              }}\n            >\n              Check rod and brush\n            </Button>\n            <Button\n              color=\"dark\"\n              onClick={() => {\n                verifyBrushWiper();\n              }}\n            >\n              Check brush and wiper\n            </Button>\n            <Button\n              color=\"dark\"\n              onClick={() => {\n                verifyGap();\n              }}\n            >\n              Check gap\n            </Button>\n          </Button.Group>\n\n          //------invisible buttons for verification\n\n          <p>\n            <Heading size={5} renderAs=\"p\">Build</Heading>\n            <Heading subtitle renderAs=\"p\">Mascara</Heading>\n          </p>\n          <Button.Group\n            position=\"centered\"\n            size=\"medium\"\n            onClick={() => setModalClick(!modalClick)}\n          >\n            <BottleModal build={build}>\n            </BottleModal>\n            <BrushModal>\n            </BrushModal>\n            <RodModal>\n            </RodModal>\n          </Button.Group>\n        </Container>\n      </Section>\n      <Section>\n        <MascaraBuild>\n        </MascaraBuild>\n      </Section>\n    </div>\n  );\n}\n\n//------here ends rendering of the component\n\nexport default Build;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport PropTypes from 'prop-types';\nimport _classnames from 'classnames';\nexport default {\n  propTypes: {\n    textColor: PropTypes.string,\n    backgroundColor: PropTypes.string,\n    colorVariant: PropTypes.oneOf(['light', 'dark'])\n  },\n  defaultProps: {\n    textColor: undefined,\n    backgroundColor: undefined,\n    colorVariant: undefined\n  },\n  classnames: function classnames(props) {\n    var _classnames2;\n\n    return _classnames((_classnames2 = {}, _defineProperty(_classnames2, \"has-text-\".concat(props.textColor), props.textColor), _defineProperty(_classnames2, \"has-background-\".concat(props.backgroundColor), props.backgroundColor), _defineProperty(_classnames2, \"is-\".concat(props.colorVariant), props.colorVariant), _classnames2));\n  },\n  clean: function clean(_ref) {\n    var textColor = _ref.textColor,\n        backgroundColor = _ref.backgroundColor,\n        colorVariant = _ref.colorVariant,\n        props = _objectWithoutProperties(_ref, [\"textColor\", \"backgroundColor\", \"colorVariant\"]);\n\n    return props;\n  }\n};","map":{"version":3,"sources":["../../src/modifiers/colors.js"],"names":["propTypes","textColor","PropTypes","backgroundColor","colorVariant","defaultProps","undefined","classnames","props","clean"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAA,SAAA,MAAA,YAAA;AACA,OAAA,WAAA,MAAA,YAAA;AAEA,eAAe;AACbA,EAAAA,SAAS,EAAE;AACTC,IAAAA,SAAS,EAAEC,SAAS,CADX,MAAA;AAETC,IAAAA,eAAe,EAAED,SAAS,CAFjB,MAAA;AAGTE,IAAAA,YAAY,EAAEF,SAAS,CAATA,KAAAA,CAAgB,CAAA,OAAA,EAAhBA,MAAgB,CAAhBA;AAHL,GADE;AAMbG,EAAAA,YAAY,EAAE;AACZJ,IAAAA,SAAS,EADG,SAAA;AAEZE,IAAAA,eAAe,EAFH,SAAA;AAGZC,IAAAA,YAAY,EAAEE;AAHF,GAND;AAWbC,EAAAA,UAAU,EAAE,SAAA,UAAA,CAAA,KAAA,EAAA;AAAA,QAAA,YAAA;;AAAA,WACVA,WAAU,EAAA,YAAA,GAAA,EAAA,EAAA,eAAA,CAAA,YAAA,EAAA,YAAA,MAAA,CACKC,KAAK,CADV,SAAA,CAAA,EACyBA,KAAK,CAD9B,SAAA,CAAA,EAAA,eAAA,CAAA,YAAA,EAAA,kBAAA,MAAA,CAEWA,KAAK,CAFhB,eAAA,CAAA,EAEqCA,KAAK,CAF1C,eAAA,CAAA,EAAA,eAAA,CAAA,YAAA,EAAA,MAAA,MAAA,CAGDA,KAAK,CAHJ,YAAA,CAAA,EAGsBA,KAAK,CAH3B,YAAA,CAAA,EADA,YACA,EADA;AAXC,GAAA;AAiBbC,EAAAA,KAAK,EAAE,SAAA,KAAA,CAAA,IAAA,EAAA;AAAA,QAAGR,SAAH,GAAA,IAAA,CAAA,SAAA;AAAA,QAAcE,eAAd,GAAA,IAAA,CAAA,eAAA;AAAA,QAA+BC,YAA/B,GAAA,IAAA,CAAA,YAAA;AAAA,QAAgDI,KAAhD,GAAA,wBAAA,CAAA,IAAA,EAAA,CAAA,WAAA,EAAA,iBAAA,EAAA,cAAA,CAAA,CAAA;;AAAA,WAAA,KAAA;AAAA;AAjBM,CAAf","sourcesContent":["import PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nexport default {\n  propTypes: {\n    textColor: PropTypes.string,\n    backgroundColor: PropTypes.string,\n    colorVariant: PropTypes.oneOf(['light', 'dark']),\n  },\n  defaultProps: {\n    textColor: undefined,\n    backgroundColor: undefined,\n    colorVariant: undefined,\n  },\n  classnames: (props) =>\n    classnames({\n      [`has-text-${props.textColor}`]: props.textColor,\n      [`has-background-${props.backgroundColor}`]: props.backgroundColor,\n      [`is-${props.colorVariant}`]: props.colorVariant,\n    }),\n  clean: ({ textColor, backgroundColor, colorVariant, ...props }) => props,\n};\n"]},"metadata":{},"sourceType":"module"}
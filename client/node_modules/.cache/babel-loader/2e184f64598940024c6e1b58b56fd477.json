{"ast":null,"code":"function ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React, { useRef, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport Element from '../../element';\nimport modifiers from '../../../modifiers';\nimport CONSTANTS from '../../../constants';\nvar colors = [null].concat(Object.values(CONSTANTS.COLORS));\n\nvar InputFile = function InputFile(_ref) {\n  var _classnames;\n\n  var className = _ref.className,\n      style = _ref.style,\n      onChange = _ref.onChange,\n      color = _ref.color,\n      size = _ref.size,\n      fullwidth = _ref.fullwidth,\n      right = _ref.right,\n      boxed = _ref.boxed,\n      name = _ref.name,\n      label = _ref.label,\n      icon = _ref.icon,\n      inputProps = _ref.inputProps,\n      filename = _ref.filename,\n      files = _ref.files,\n      props = _objectWithoutProperties(_ref, [\"className\", \"style\", \"onChange\", \"color\", \"size\", \"fullwidth\", \"right\", \"boxed\", \"name\", \"label\", \"icon\", \"inputProps\", \"filename\", \"files\"]);\n\n  var ref = useRef();\n  useEffect(function () {\n    if (files) {\n      ref.current.files = files;\n    } else {\n      ref.current.value = '';\n    }\n  }, [files]);\n  return /*#__PURE__*/React.createElement(Element, _extends({\n    style: style\n  }, props, {\n    className: classnames('file', className, (_classnames = {}, _defineProperty(_classnames, \"is-\".concat(size), size), _defineProperty(_classnames, \"is-\".concat(color), color), _defineProperty(_classnames, 'has-name', !!filename), _defineProperty(_classnames, 'is-right', right), _defineProperty(_classnames, 'is-boxed', boxed), _defineProperty(_classnames, 'is-fullwidth', fullwidth), _classnames))\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"file-label\"\n  }, /*#__PURE__*/React.createElement(\"input\", _extends({}, inputProps, {\n    name: name,\n    type: \"file\",\n    className: \"file-input\",\n    onChange: onChange,\n    ref: ref\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"file-cta\"\n  }, icon && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"file-icon\"\n  }, icon), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"file-label\"\n  }, label)), filename && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"file-name\"\n  }, filename)));\n};\n\nInputFile.propTypes = _objectSpread(_objectSpread({}, modifiers.propTypes), {}, {\n  className: PropTypes.string,\n  style: PropTypes.shape({}),\n  onChange: PropTypes.func,\n  color: PropTypes.oneOf(colors),\n  size: PropTypes.oneOf(['small', 'medium', 'large']),\n  filename: PropTypes.string,\n  value: PropTypes.any,\n  fullwidth: PropTypes.bool,\n  right: PropTypes.bool,\n  boxed: PropTypes.bool,\n\n  /**\n   * The name of the input field Commonly used for [multi-input handling](https://reactjs.org/docs/forms.html#handling-multiple-inputs)\n   */\n  name: PropTypes.string,\n  label: PropTypes.string,\n  icon: PropTypes.element,\n  inputProps: PropTypes.shape({})\n});\nInputFile.defaultProps = _objectSpread(_objectSpread({}, modifiers.defaultProps), {}, {\n  className: undefined,\n  style: undefined,\n  onChange: function onChange() {},\n  color: undefined,\n  size: undefined,\n  filename: undefined,\n  files: undefined,\n  fullwidth: undefined,\n  right: undefined,\n  boxed: undefined,\n  name: undefined,\n  icon: undefined,\n  label: 'Choose a file...',\n  inputProps: {}\n});\nexport default InputFile;","map":{"version":3,"sources":["../../../../src/components/form/components/input-file.js"],"names":["colors","Object","CONSTANTS","InputFile","className","style","onChange","color","size","fullwidth","right","boxed","name","label","icon","inputProps","filename","files","props","ref","useRef","useEffect","classnames","modifiers","PropTypes","value"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,IAAA,MAAA,EAAA,SAAA,QAAA,OAAA;AACA,OAAA,SAAA,MAAA,YAAA;AACA,OAAA,UAAA,MAAA,YAAA;AACA,OAAA,OAAA,MAAA,eAAA;AACA,OAAA,SAAA,MAAA,oBAAA;AAEA,OAAA,SAAA,MAAA,oBAAA;AAEA,IAAMA,MAAM,GAAG,CAAA,IAAA,EAAA,MAAA,CAAcC,MAAM,CAANA,MAAAA,CAAcC,SAAS,CAApD,MAA6BD,CAAd,CAAf;;AAEA,IAAME,SAAS,GAAG,SAAZA,SAAY,CAAA,IAAA,EAgBZ;AAAA,MAAA,WAAA;;AAAA,MAfJC,SAeI,GAAA,IAAA,CAfJA,SAeI;AAAA,MAdJC,KAcI,GAAA,IAAA,CAdJA,KAcI;AAAA,MAbJC,QAaI,GAAA,IAAA,CAbJA,QAaI;AAAA,MAZJC,KAYI,GAAA,IAAA,CAZJA,KAYI;AAAA,MAXJC,IAWI,GAAA,IAAA,CAXJA,IAWI;AAAA,MAVJC,SAUI,GAAA,IAAA,CAVJA,SAUI;AAAA,MATJC,KASI,GAAA,IAAA,CATJA,KASI;AAAA,MARJC,KAQI,GAAA,IAAA,CARJA,KAQI;AAAA,MAPJC,IAOI,GAAA,IAAA,CAPJA,IAOI;AAAA,MANJC,KAMI,GAAA,IAAA,CANJA,KAMI;AAAA,MALJC,IAKI,GAAA,IAAA,CALJA,IAKI;AAAA,MAJJC,UAII,GAAA,IAAA,CAJJA,UAII;AAAA,MAHJC,QAGI,GAAA,IAAA,CAHJA,QAGI;AAAA,MAFJC,KAEI,GAAA,IAAA,CAFJA,KAEI;AAAA,MADDC,KACC,GAAA,wBAAA,CAAA,IAAA,EAAA,CAAA,WAAA,EAAA,OAAA,EAAA,UAAA,EAAA,OAAA,EAAA,MAAA,EAAA,WAAA,EAAA,OAAA,EAAA,OAAA,EAAA,MAAA,EAAA,OAAA,EAAA,MAAA,EAAA,YAAA,EAAA,UAAA,EAAA,OAAA,CAAA,CAAA;;AACJ,MAAMC,GAAG,GAAGC,MAAZ,EAAA;AAEAC,EAAAA,SAAS,CAAC,YAAM;AACd,QAAA,KAAA,EAAW;AACTF,MAAAA,GAAG,CAAHA,OAAAA,CAAAA,KAAAA,GAAAA,KAAAA;AADF,KAAA,MAEO;AACLA,MAAAA,GAAG,CAAHA,OAAAA,CAAAA,KAAAA,GAAAA,EAAAA;AACD;AALM,GAAA,EAMN,CANHE,KAMG,CANM,CAATA;AAQA,SAAA,aACE,KAAA,CAAA,aAAA,CAAA,OAAA,EAAA,QAAA,CAAA;AACE,IAAA,KAAK,EAAEhB;AADT,GAAA,EAAA,KAAA,EAAA;AAGE,IAAA,SAAS,EAAEiB,UAAU,CAAA,MAAA,EAAA,SAAA,GAAA,WAAA,GAAA,EAAA,EAAA,eAAA,CAAA,WAAA,EAAA,MAAA,MAAA,CAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,eAAA,CAAA,WAAA,EAAA,MAAA,MAAA,CAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,eAAA,CAAA,WAAA,EAAA,UAAA,EAGP,CAAC,CAHM,QAAA,CAAA,EAAA,eAAA,CAAA,WAAA,EAAA,UAAA,EAAA,KAAA,CAAA,EAAA,eAAA,CAAA,WAAA,EAAA,UAAA,EAAA,KAAA,CAAA,EAAA,eAAA,CAAA,WAAA,EAAA,cAAA,EAAA,SAAA,CAAA,EAAA,WAAA;AAHvB,GAAA,CAAA,EAAA,aAYE,KAAA,CAAA,aAAA,CAAA,OAAA,EAAA;AAAO,IAAA,SAAS,EAAC;AAAjB,GAAA,EAAA,aACE,KAAA,CAAA,aAAA,CAAA,OAAA,EAAA,QAAA,CAAA,EAAA,EAAA,UAAA,EAAA;AAEE,IAAA,IAAI,EAFN,IAAA;AAGE,IAAA,IAAI,EAHN,MAAA;AAIE,IAAA,SAAS,EAJX,YAAA;AAKE,IAAA,QAAQ,EALV,QAAA;AAME,IAAA,GAAG,EAAEH;AANP,GAAA,CAAA,CADF,EAAA,aASE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,IAAA,SAAS,EAAC;AAAhB,GAAA,EACGL,IAAI,IAAA,aAAI,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,IAAA,SAAS,EAAC;AAAhB,GAAA,EADX,IACW,CADX,EAAA,aAEE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,IAAA,SAAS,EAAC;AAAhB,GAAA,EAXJ,KAWI,CAFF,CATF,EAaGE,QAAQ,IAAA,aAAI,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,IAAA,SAAS,EAAC;AAAhB,GAAA,EA1BnB,QA0BmB,CAbf,CAZF,CADF;AA3BF,CAAA;;AA2DAb,SAAS,CAATA,SAAAA,GAAAA,aAAAA,CAAAA,aAAAA,CAAAA,EAAAA,EACKoB,SAAS,CADdpB,SAAAA,CAAAA,EAAAA,EAAAA,EAAAA;AAEEC,EAAAA,SAAS,EAAEoB,SAAS,CAFtBrB,MAAAA;AAGEE,EAAAA,KAAK,EAAEmB,SAAS,CAATA,KAAAA,CAHTrB,EAGSqB,CAHTrB;AAIEG,EAAAA,QAAQ,EAAEkB,SAAS,CAJrBrB,IAAAA;AAKEI,EAAAA,KAAK,EAAEiB,SAAS,CAATA,KAAAA,CALTrB,MAKSqB,CALTrB;AAMEK,EAAAA,IAAI,EAAEgB,SAAS,CAATA,KAAAA,CAAgB,CAAA,OAAA,EAAA,QAAA,EANxBrB,OAMwB,CAAhBqB,CANRrB;AAOEa,EAAAA,QAAQ,EAAEQ,SAAS,CAPrBrB,MAAAA;AAQEsB,EAAAA,KAAK,EAAED,SAAS,CARlBrB,GAAAA;AASEM,EAAAA,SAAS,EAAEe,SAAS,CATtBrB,IAAAA;AAUEO,EAAAA,KAAK,EAAEc,SAAS,CAVlBrB,IAAAA;AAWEQ,EAAAA,KAAK,EAAEa,SAAS,CAXlBrB,IAAAA;;AAYE;;;AAGAS,EAAAA,IAAI,EAAEY,SAAS,CAfjBrB,MAAAA;AAgBEU,EAAAA,KAAK,EAAEW,SAAS,CAhBlBrB,MAAAA;AAiBEW,EAAAA,IAAI,EAAEU,SAAS,CAjBjBrB,OAAAA;AAkBEY,EAAAA,UAAU,EAAES,SAAS,CAATA,KAAAA,CAAAA,EAAAA;AAlBdrB,CAAAA,CAAAA;AAqBAA,SAAS,CAATA,YAAAA,GAAAA,aAAAA,CAAAA,aAAAA,CAAAA,EAAAA,EACKoB,SAAS,CADdpB,YAAAA,CAAAA,EAAAA,EAAAA,EAAAA;AAEEC,EAAAA,SAAS,EAFXD,SAAAA;AAGEE,EAAAA,KAAK,EAHPF,SAAAA;AAIEG,EAAAA,QAAQ,EAAE,SAAA,QAAA,GAAM,CAJlBH,CAAAA;AAKEI,EAAAA,KAAK,EALPJ,SAAAA;AAMEK,EAAAA,IAAI,EANNL,SAAAA;AAOEa,EAAAA,QAAQ,EAPVb,SAAAA;AAQEc,EAAAA,KAAK,EARPd,SAAAA;AASEM,EAAAA,SAAS,EATXN,SAAAA;AAUEO,EAAAA,KAAK,EAVPP,SAAAA;AAWEQ,EAAAA,KAAK,EAXPR,SAAAA;AAYES,EAAAA,IAAI,EAZNT,SAAAA;AAaEW,EAAAA,IAAI,EAbNX,SAAAA;AAcEU,EAAAA,KAAK,EAdPV,kBAAAA;AAeEY,EAAAA,UAAU,EAAE;AAfdZ,CAAAA,CAAAA;AAkBA,eAAA,SAAA","sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport Element from '../../element';\nimport modifiers from '../../../modifiers';\n\nimport CONSTANTS from '../../../constants';\n\nconst colors = [null].concat(Object.values(CONSTANTS.COLORS));\n\nconst InputFile = ({\n  className,\n  style,\n  onChange,\n  color,\n  size,\n  fullwidth,\n  right,\n  boxed,\n  name,\n  label,\n  icon,\n  inputProps,\n  filename,\n  files,\n  ...props\n}) => {\n  const ref = useRef();\n\n  useEffect(() => {\n    if (files) {\n      ref.current.files = files;\n    } else {\n      ref.current.value = '';\n    }\n  }, [files]);\n\n  return (\n    <Element\n      style={style}\n      {...props}\n      className={classnames('file', className, {\n        [`is-${size}`]: size,\n        [`is-${color}`]: color,\n        'has-name': !!filename,\n        'is-right': right,\n        'is-boxed': boxed,\n        'is-fullwidth': fullwidth,\n      })}\n    >\n      <label className=\"file-label\">\n        <input\n          {...inputProps}\n          name={name}\n          type=\"file\"\n          className=\"file-input\"\n          onChange={onChange}\n          ref={ref}\n        />\n        <span className=\"file-cta\">\n          {icon && <span className=\"file-icon\">{icon}</span>}\n          <span className=\"file-label\">{label}</span>\n        </span>\n        {filename && <span className=\"file-name\">{filename}</span>}\n      </label>\n    </Element>\n  );\n};\n\nInputFile.propTypes = {\n  ...modifiers.propTypes,\n  className: PropTypes.string,\n  style: PropTypes.shape({}),\n  onChange: PropTypes.func,\n  color: PropTypes.oneOf(colors),\n  size: PropTypes.oneOf(['small', 'medium', 'large']),\n  filename: PropTypes.string,\n  value: PropTypes.any,\n  fullwidth: PropTypes.bool,\n  right: PropTypes.bool,\n  boxed: PropTypes.bool,\n  /**\n   * The name of the input field Commonly used for [multi-input handling](https://reactjs.org/docs/forms.html#handling-multiple-inputs)\n   */\n  name: PropTypes.string,\n  label: PropTypes.string,\n  icon: PropTypes.element,\n  inputProps: PropTypes.shape({}),\n};\n\nInputFile.defaultProps = {\n  ...modifiers.defaultProps,\n  className: undefined,\n  style: undefined,\n  onChange: () => {},\n  color: undefined,\n  size: undefined,\n  filename: undefined,\n  files: undefined,\n  fullwidth: undefined,\n  right: undefined,\n  boxed: undefined,\n  name: undefined,\n  icon: undefined,\n  label: 'Choose a file...',\n  inputProps: {},\n};\n\nexport default InputFile;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"function ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport modifiers from '../../../modifiers';\nimport Element from '../../element';\nimport renderAsShape from '../../../modifiers/render-as';\n\nvar ButtonGroup = function ButtonGroup(_ref) {\n  var _classnames;\n\n  var children = _ref.children,\n      className = _ref.className,\n      hasAddons = _ref.hasAddons,\n      position = _ref.position,\n      size = _ref.size,\n      props = _objectWithoutProperties(_ref, [\"children\", \"className\", \"hasAddons\", \"position\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(Element, _extends({}, props, {\n    className: classnames('buttons', className, (_classnames = {\n      'has-addons': hasAddons\n    }, _defineProperty(_classnames, \"is-\".concat([position]), position), _defineProperty(_classnames, \"are-\".concat(size), size), _classnames))\n  }), children);\n};\n\nButtonGroup.propTypes = _objectSpread(_objectSpread({}, modifiers.propTypes), {}, {\n  /**\n   * Additional CSS classes to pass to Button.Group\n   */\n  className: PropTypes.string,\n\n  /**\n   * Whether the buttons should be displayed as \"addons\". If true, the buttons will stick together.\n   */\n  hasAddons: PropTypes.bool,\n\n  /**\n   * The size of *all* the buttons in the group.\n   */\n  size: PropTypes.string,\n\n  /**\n   * Position of the group. By default, it is left-aligned.\n   */\n  position: PropTypes.oneOf(['centered', 'right']),\n\n  /**\n   * The custom component that Button.Group should be rendered as.\n   */\n  renderAs: renderAsShape\n});\nButtonGroup.defaultProps = _objectSpread(_objectSpread({}, modifiers.defaultProps), {}, {\n  className: undefined,\n  hasAddons: undefined,\n  position: undefined,\n  size: undefined,\n  renderAs: 'div'\n});\nexport default ButtonGroup;","map":{"version":3,"sources":["../../../../src/components/button/components/button-group.js"],"names":["ButtonGroup","children","className","hasAddons","position","size","props","classnames","modifiers","PropTypes","renderAs","renderAsShape"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,SAAA,MAAA,YAAA;AACA,OAAA,UAAA,MAAA,YAAA;AACA,OAAA,SAAA,MAAA,oBAAA;AACA,OAAA,OAAA,MAAA,eAAA;AACA,OAAA,aAAA,MAAA,8BAAA;;AAEA,IAAMA,WAAW,GAAG,SAAdA,WAAc,CAAA,IAAA,EAAA;AAAA,MAAA,WAAA;;AAAA,MAClBC,QADkB,GAAA,IAAA,CAAA,QAAA;AAAA,MAElBC,SAFkB,GAAA,IAAA,CAAA,SAAA;AAAA,MAGlBC,SAHkB,GAAA,IAAA,CAAA,SAAA;AAAA,MAIlBC,QAJkB,GAAA,IAAA,CAAA,QAAA;AAAA,MAKlBC,IALkB,GAAA,IAAA,CAAA,IAAA;AAAA,MAMfC,KANe,GAAA,wBAAA,CAAA,IAAA,EAAA,CAAA,UAAA,EAAA,WAAA,EAAA,WAAA,EAAA,UAAA,EAAA,MAAA,CAAA,CAAA;;AAAA,SAAA,aAQlB,KAAA,CAAA,aAAA,CAAA,OAAA,EAAA,QAAA,CAAA,EAAA,EAAA,KAAA,EAAA;AAEE,IAAA,SAAS,EAAEC,UAAU,CAAA,SAAA,EAAA,SAAA,GAAA,WAAA,GAAA;AACnB,oBAAcJ;AADK,KAAA,EAAA,eAAA,CAAA,WAAA,EAAA,MAAA,MAAA,CAEZ,CAFY,QAEZ,CAFY,CAAA,EAAA,QAAA,CAAA,EAAA,eAAA,CAAA,WAAA,EAAA,OAAA,MAAA,CAAA,IAAA,CAAA,EAAA,IAAA,CAAA,EAAA,WAAA;AAFvB,GAAA,CAAA,EARkB,QAQlB,CARkB;AAApB,CAAA;;AAoBAH,WAAW,CAAXA,SAAAA,GAAAA,aAAAA,CAAAA,aAAAA,CAAAA,EAAAA,EACKQ,SAAS,CADdR,SAAAA,CAAAA,EAAAA,EAAAA,EAAAA;AAEE;;;AAGAE,EAAAA,SAAS,EAAEO,SAAS,CALtBT,MAAAA;;AAME;;;AAGAG,EAAAA,SAAS,EAAEM,SAAS,CATtBT,IAAAA;;AAUE;;;AAGAK,EAAAA,IAAI,EAAEI,SAAS,CAbjBT,MAAAA;;AAcE;;;AAGAI,EAAAA,QAAQ,EAAEK,SAAS,CAATA,KAAAA,CAAgB,CAAA,UAAA,EAjB5BT,OAiB4B,CAAhBS,CAjBZT;;AAkBE;;;AAGAU,EAAAA,QAAQ,EAAEC;AArBZX,CAAAA,CAAAA;AAwBAA,WAAW,CAAXA,YAAAA,GAAAA,aAAAA,CAAAA,aAAAA,CAAAA,EAAAA,EACKQ,SAAS,CADdR,YAAAA,CAAAA,EAAAA,EAAAA,EAAAA;AAEEE,EAAAA,SAAS,EAFXF,SAAAA;AAGEG,EAAAA,SAAS,EAHXH,SAAAA;AAIEI,EAAAA,QAAQ,EAJVJ,SAAAA;AAKEK,EAAAA,IAAI,EALNL,SAAAA;AAMEU,EAAAA,QAAQ,EAAE;AANZV,CAAAA,CAAAA;AASA,eAAA,WAAA","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport modifiers from '../../../modifiers';\nimport Element from '../../element';\nimport renderAsShape from '../../../modifiers/render-as';\n\nconst ButtonGroup = ({\n  children,\n  className,\n  hasAddons,\n  position,\n  size,\n  ...props\n}) => (\n  <Element\n    {...props}\n    className={classnames('buttons', className, {\n      'has-addons': hasAddons,\n      [`is-${[position]}`]: position,\n      [`are-${size}`]: size,\n    })}\n  >\n    {children}\n  </Element>\n);\n\nButtonGroup.propTypes = {\n  ...modifiers.propTypes,\n  /**\n   * Additional CSS classes to pass to Button.Group\n   */\n  className: PropTypes.string,\n  /**\n   * Whether the buttons should be displayed as \"addons\". If true, the buttons will stick together.\n   */\n  hasAddons: PropTypes.bool,\n  /**\n   * The size of *all* the buttons in the group.\n   */\n  size: PropTypes.string,\n  /**\n   * Position of the group. By default, it is left-aligned.\n   */\n  position: PropTypes.oneOf(['centered', 'right']),\n  /**\n   * The custom component that Button.Group should be rendered as.\n   */\n  renderAs: renderAsShape,\n};\n\nButtonGroup.defaultProps = {\n  ...modifiers.defaultProps,\n  className: undefined,\n  hasAddons: undefined,\n  position: undefined,\n  size: undefined,\n  renderAs: 'div',\n};\n\nexport default ButtonGroup;\n"]},"metadata":{},"sourceType":"module"}
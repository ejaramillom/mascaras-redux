{"ast":null,"code":"var _jsxFileName = \"/home/leon/Documentos/proyectos/mascara/client/src/components/Filter.component.js\";\nimport React, { useState, useEffect } from 'react';\nimport Button from 'react-bulma-components/lib/components/button';\nimport Tile from 'react-bulma-components/lib/components/tile';\nimport Heading from 'react-bulma-components/lib/components/heading';\nimport Image from 'react-bulma-components/lib/components/image';\nimport Tag from 'react-bulma-components/lib/components/tag';\nimport ExportCSV from './ExportCSV.component';\nimport { Field, Control, Label, Input, Textarea, Select, Checkbox, Radio, Help, InputFile } from 'react-bulma-components/lib/components/form';\nimport axios from \"axios\";\nimport '../App.css'; //---------------- Bottle filter\n\nexport const BottleFilter = props => {\n  const bottle = props.bottle;\n  const bottles = props.bottles;\n  const rod = props.rod;\n  const brush = props.brush;\n  const setBuildClick = props.setBuildClick;\n  const buildClick = props.buildClick;\n\n  const addBottle = async data => {\n    await axios.post(\"/bottle\", {\n      name: data.name,\n      drawing: data.drawing,\n      mold: data.mold,\n      depth: data.depth,\n      thread: data.thread\n    }).then(function (response) {\n      if (response.status === 200) {\n        alert(\"Bottle added to the list!\");\n        console.log(\"Succesfully added\");\n      } else {\n        const err = new Error(response.error);\n        console.log(err);\n        throw err;\n      }\n    }).catch(function (error) {\n      alert(error);\n    });\n  };\n\n  const addBottleClick = element => {\n    addBottle(element);\n    setBuildClick(!buildClick);\n  };\n\n  if (bottle && bottle.name) {\n    const filteredBottles = bottles.filter(element => {\n      return element.name.toLowerCase().indexOf(bottle.name.toLowerCase()) !== -1;\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ExportCSV, {\n      csvData: filteredBottles,\n      fileName: \"bottles\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }), filteredBottles.map(element => /*#__PURE__*/React.createElement(Tile, {\n      kind: \"ancestor\",\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Tile, {\n      kind: \"parent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Tile, {\n      renderAs: \"article\",\n      kind: \"child\",\n      notification: true,\n      color: \"light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Heading, {\n      size: 7,\n      renderAs: \"h6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    }, element.name, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 19\n      }\n    }, \" Drawing \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 19\n      }\n    }, \" \", element.drawing), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 19\n      }\n    }, \" Thread \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 19\n      }\n    }, \" \", element.thread), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 19\n      }\n    }, \" Depth \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 19\n      }\n    }, \" \", element.depth), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      color: \"info\",\n      onClick: () => {\n        addBottleClick(element);\n      },\n      size: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    }, \"Add Bottle\")))))));\n  } else if (rod && rod.thread && brush && brush.brushLength) {\n    const filteredBottles = bottles.filter(element => {\n      let gap = Number(element.depth) - (Number(rod.dimensions.length) + Number(brush.brushLength));\n\n      if (gap > 2 && gap < 6 && element.thread.toLowerCase().indexOf(rod.thread.toLowerCase()) !== -1) {\n        return element;\n      } else {\n        return \"\";\n      }\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ExportCSV, {\n      csvData: filteredBottles,\n      fileName: \"bottles\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 7\n      }\n    }), filteredBottles.map(element => /*#__PURE__*/React.createElement(Tile, {\n      kind: \"ancestor\",\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Tile, {\n      kind: \"parent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Tile, {\n      renderAs: \"article\",\n      kind: \"child\",\n      notification: true,\n      color: \"light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Heading, {\n      size: 7,\n      renderAs: \"h6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }\n    }, element.name, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 19\n      }\n    }, \" Drawing \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 19\n      }\n    }, \" \", element.drawing), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 19\n      }\n    }, \" Thread \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 19\n      }\n    }, \" \", element.thread), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 19\n      }\n    }, \" Depth \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 19\n      }\n    }, \" \", element.depth), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      color: \"info\",\n      onClick: () => {\n        addBottleClick(element);\n      },\n      size: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 19\n      }\n    }, \"Add Bottle\")))))));\n  } else if (rod && rod.thread) {\n    const filteredBottles = bottles.filter(element => {\n      return element.thread.toLowerCase().indexOf(rod.thread.toLowerCase()) !== -1;\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ExportCSV, {\n      csvData: filteredBottles,\n      fileName: \"bottles\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 7\n      }\n    }), filteredBottles.map(element => /*#__PURE__*/React.createElement(Tile, {\n      kind: \"ancestor\",\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Tile, {\n      kind: \"parent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Tile, {\n      renderAs: \"article\",\n      kind: \"child\",\n      notification: true,\n      color: \"light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Heading, {\n      size: 7,\n      renderAs: \"h6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }\n    }, element.name, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 19\n      }\n    }, \" Drawing \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 19\n      }\n    }, \" \", element.drawing), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 19\n      }\n    }, \" Thread \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 19\n      }\n    }, \" \", element.thread), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 19\n      }\n    }, \" Depth \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 19\n      }\n    }, \" \", element.depth), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      color: \"info\",\n      onClick: () => {\n        addBottleClick(element);\n      },\n      size: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 19\n      }\n    }, \"Add Bottle\")))))));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ExportCSV, {\n    csvData: bottles,\n    fileName: \"bottles\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Control, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    onChange: this.onChange,\n    name: \"email\",\n    type: \"bottle\",\n    placeholder: \"Bottle search\",\n    value: email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 5\n    }\n  }), bottles.map(element => /*#__PURE__*/React.createElement(Tile, {\n    kind: \"ancestor\",\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Tile, {\n    kind: \"parent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Tile, {\n    renderAs: \"article\",\n    kind: \"child\",\n    notification: true,\n    color: \"light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Heading, {\n    size: 7,\n    renderAs: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 15\n    }\n  }, element.name, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Tag, {\n    color: \"dark\",\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 17\n    }\n  }, \" Drawing \"), /*#__PURE__*/React.createElement(Tag, {\n    color: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 17\n    }\n  }, \" \", element.drawing), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Tag, {\n    color: \"dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 17\n    }\n  }, \" Thread \"), /*#__PURE__*/React.createElement(Tag, {\n    color: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 17\n    }\n  }, \" \", element.thread), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Tag, {\n    color: \"dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 17\n    }\n  }, \" Depth \"), /*#__PURE__*/React.createElement(Tag, {\n    color: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 17\n    }\n  }, \" \", element.depth), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    color: \"info\",\n    onClick: () => {\n      addBottleClick(element);\n    },\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 17\n    }\n  }, \"Add Bottle\")))))));\n}; //---------------- Bottle filter\n//---------------- Brush filter\n\nexport const BrushFilter = props => {\n  const brush = props.brush;\n  const brushes = props.brushes;\n  const claim = props.claim;\n  const rod = props.rod;\n  const bottle = props.bottle;\n  const setBuildClick = props.setBuildClick;\n  const buildClick = props.buildClick;\n\n  const addBrush = async data => {\n    await axios.post(\"/brush\", {\n      brush: data.brush,\n      original: data.original,\n      shaftLength: data.shaftLength,\n      shaftDiameter: data.shaftDiameter,\n      brushLength: data.brushLength,\n      brushDiameter: data.brushDiameter,\n      type: data.type\n    }).then(function (response) {\n      if (response.status === 200) {\n        alert(\"Brush added to the list!\");\n        console.log(\"Succesfully added\");\n      } else {\n        const err = new Error(response.error);\n        console.log(err);\n        throw err;\n      }\n    }).catch(function (error) {\n      alert(error);\n    });\n  };\n\n  const addBrushClick = element => {\n    addBrush(element);\n    setBuildClick(!buildClick);\n  };\n\n  if (brush && brush.brush) {\n    const filteredBrushes = brushes.filter(element => {\n      return element.brush.toLowerCase().indexOf(brush.brush.toLowerCase()) !== -1;\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ExportCSV, {\n      csvData: filteredBrushes,\n      fileName: \"brushes\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 7\n      }\n    }), filteredBrushes.map(element => /*#__PURE__*/React.createElement(Tile, {\n      kind: \"ancestor\",\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Tile, {\n      kind: \"parent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Tile, {\n      renderAs: \"article\",\n      kind: \"child\",\n      notification: true,\n      color: \"light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Heading, {\n      size: 7,\n      renderAs: \"h6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 17\n      }\n    }, element.brush, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Image, {\n      rounded: \"true\",\n      key: element.brush,\n      size: \"2by1\",\n      className: \"center\",\n      src: require(`../images/${element.brush}.jpg`),\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 19\n      }\n    }, \" Drawing \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 19\n      }\n    }, \" \", element.drawing), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 19\n      }\n    }, \" Type \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 19\n      }\n    }, \" \", element.type), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 19\n      }\n    }, \" Length \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 19\n      }\n    }, \" \", element.brushLength), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 19\n      }\n    }, \" Shaft \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 19\n      }\n    }, \" \", element.shaftDiameter), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 19\n      }\n    }, \" Brush \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 19\n      }\n    }, \" \", element.brushDiameter), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      color: \"info\",\n      size: \"small\",\n      onClick: () => {\n        addBrushClick(element);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 19\n      }\n    }, \"Add Brush\")))))));\n  } else if (claim) {\n    const filteredBrushes = brushes.filter(element => {\n      if (claim === \"definition\" && element.claim.definition === true) {\n        return element;\n      } else if (claim === \"volumizing\" && element.claim.volumizing === true) {\n        return element;\n      } else if (claim === \"lengthening\" && element.claim.lengthening === true) {\n        return element;\n      } else if (claim === \"curling\" && element.claim.curling === true) {\n        return element;\n      } else if (claim === \"plumping\" && element.claim.plumping === true) {\n        return element;\n      } else {\n        return \"\";\n      }\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ExportCSV, {\n      csvData: filteredBrushes,\n      fileName: \"brushes\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 7\n      }\n    }), filteredBrushes.map(element => /*#__PURE__*/React.createElement(Tile, {\n      kind: \"ancestor\",\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Tile, {\n      kind: \"parent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Tile, {\n      renderAs: \"article\",\n      kind: \"child\",\n      notification: true,\n      color: \"light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Heading, {\n      size: 7,\n      renderAs: \"h6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 17\n      }\n    }, element.brush, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Image, {\n      rounded: \"true\",\n      key: element.brush,\n      size: \"2by1\",\n      className: \"center\",\n      src: require(`../images/${element.brush}.jpg`),\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 19\n      }\n    }, \" Drawing \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 19\n      }\n    }, \" \", element.drawing), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 19\n      }\n    }, \" Type \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 19\n      }\n    }, \" \", element.type), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 19\n      }\n    }, \" Length \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 19\n      }\n    }, \" \", element.brushLength), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 19\n      }\n    }, \" Shaft \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 19\n      }\n    }, \" \", element.shaftDiameter), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 19\n      }\n    }, \" Brush \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 19\n      }\n    }, \" \", element.brushDiameter), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      color: \"info\",\n      size: \"small\",\n      onClick: () => {\n        addBrushClick(element);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 19\n      }\n    }, \"Add Brush\")))))));\n  } else if (rod && rod.name && bottle && bottle.name) {\n    const filteredBrushes = brushes.filter(element => {\n      let mascaraGap = Number(bottle.depth) - (Number(element.brushLength) + Number(rod.dimensions.length));\n\n      if (mascaraGap > 1 && mascaraGap < 6) {\n        return element;\n      } else {\n        return null;\n      }\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ExportCSV, {\n      csvData: filteredBrushes,\n      fileName: \"brushes\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 7\n      }\n    }), filteredBrushes.map(element => /*#__PURE__*/React.createElement(Tile, {\n      kind: \"ancestor\",\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Tile, {\n      kind: \"parent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Tile, {\n      renderAs: \"article\",\n      kind: \"child\",\n      notification: true,\n      color: \"light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Heading, {\n      size: 7,\n      renderAs: \"h6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 17\n      }\n    }, element.brush, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Image, {\n      rounded: \"true\",\n      key: element.brush,\n      size: \"2by1\",\n      className: \"center\",\n      src: require(`../images/${element.brush}.jpg`),\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 19\n      }\n    }, \" Drawing \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 19\n      }\n    }, \" \", element.drawing), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 19\n      }\n    }, \" Type \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 19\n      }\n    }, \" \", element.type), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 19\n      }\n    }, \" Length \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 19\n      }\n    }, \" \", element.brushLength), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 19\n      }\n    }, \" Shaft \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 19\n      }\n    }, \" \", element.shaftDiameter), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 19\n      }\n    }, \" Brush \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 19\n      }\n    }, \" \", element.brushDiameter), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      color: \"info\",\n      size: \"small\",\n      onClick: () => {\n        addBrushClick(element);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 19\n      }\n    }, \"Add Brush\")))))));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ExportCSV, {\n    csvData: brushes,\n    fileName: \"brushes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 5\n    }\n  }), brushes.map(element => /*#__PURE__*/React.createElement(Tile, {\n    kind: \"ancestor\",\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Tile, {\n    kind: \"parent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Tile, {\n    renderAs: \"article\",\n    kind: \"child\",\n    notification: true,\n    color: \"light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 474,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Heading, {\n    size: 7,\n    renderAs: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 15\n    }\n  }, element.brush, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Image, {\n    rounded: \"true\",\n    key: element.brush,\n    size: \"2by1\",\n    className: \"center\",\n    src: require(`../images/${element.brush}.jpg`),\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 479,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Tag, {\n    color: \"dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 17\n    }\n  }, \" Drawing \"), /*#__PURE__*/React.createElement(Tag, {\n    color: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 17\n    }\n  }, \" \", element.drawing), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 482,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Tag, {\n    color: \"dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 17\n    }\n  }, \" Type \"), /*#__PURE__*/React.createElement(Tag, {\n    color: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 484,\n      columnNumber: 17\n    }\n  }, \" \", element.type), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 485,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Tag, {\n    color: \"dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 486,\n      columnNumber: 17\n    }\n  }, \" Length \"), /*#__PURE__*/React.createElement(Tag, {\n    color: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 17\n    }\n  }, \" \", element.brushLength), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Tag, {\n    color: \"dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 489,\n      columnNumber: 17\n    }\n  }, \" Shaft \"), /*#__PURE__*/React.createElement(Tag, {\n    color: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 17\n    }\n  }, \" \", element.shaftDiameter), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 491,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Tag, {\n    color: \"dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 492,\n      columnNumber: 17\n    }\n  }, \" Brush \"), /*#__PURE__*/React.createElement(Tag, {\n    color: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 493,\n      columnNumber: 17\n    }\n  }, \" \", element.brushDiameter), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 495,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    color: \"info\",\n    size: \"small\",\n    onClick: () => {\n      addBrushClick(element);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 17\n    }\n  }, \"Add Brush\")))))));\n}; //---------------- Brush filter\n//---------------- Rod filter\n\nexport const RodFilter = props => {\n  const rod = props.rod;\n  const rods = props.rods;\n  const bottle = props.bottle;\n  const brush = props.brush;\n  const setBuildClick = props.setBuildClick;\n  const buildClick = props.buildClick;\n\n  const addRod = async data => {\n    await axios.post(\"/rod\", {\n      name: data.name,\n      drawing: data.drawing,\n      thread: data.thread,\n      dimensions: {\n        length: data.dimensions.length,\n        rodDiameter: data.dimensions.rodDiameter,\n        brushDiameter: data.dimensions.brushDiameter\n      }\n    }).then(function (response) {\n      if (response.status === 200) {\n        alert(\"Rod added to the list!\");\n        console.log(\"Succesfully added\");\n      } else {\n        const err = new Error(response.error);\n        console.log(err);\n        throw err;\n      }\n    }).catch(function (error) {\n      alert(error);\n    });\n  };\n\n  const addRodClick = element => {\n    addRod(element);\n    setBuildClick(!buildClick);\n  };\n\n  if (rod && rod.name) {\n    const filteredRods = rods.filter(element => {\n      return element.name.toLowerCase().indexOf(rod.name.toLowerCase()) !== -1;\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 564,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ExportCSV, {\n      csvData: filteredRods,\n      fileName: \"rods\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 565,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 566,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 567,\n        columnNumber: 7\n      }\n    }), filteredRods.map(element => /*#__PURE__*/React.createElement(Tile, {\n      kind: \"ancestor\",\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 569,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Tile, {\n      kind: \"parent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 570,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Tile, {\n      renderAs: \"article\",\n      kind: \"child\",\n      notification: true,\n      color: \"light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 571,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Heading, {\n      size: 7,\n      renderAs: \"h6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 572,\n        columnNumber: 17\n      }\n    }, element.name, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 573,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 574,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 575,\n        columnNumber: 19\n      }\n    }, \" Drawing \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 576,\n        columnNumber: 19\n      }\n    }, \" \", element.drawing), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 577,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 578,\n        columnNumber: 19\n      }\n    }, \" Thread \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 579,\n        columnNumber: 19\n      }\n    }, \" \", element.thread), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 580,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 581,\n        columnNumber: 19\n      }\n    }, \" Length \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 582,\n        columnNumber: 19\n      }\n    }, \" \", element.dimensions.length), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 583,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 584,\n        columnNumber: 19\n      }\n    }, \" Shaft \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 585,\n        columnNumber: 19\n      }\n    }, \" \", element.dimensions.brushDiameter), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 586,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 587,\n        columnNumber: 19\n      }\n    }, \" Rod \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 588,\n        columnNumber: 19\n      }\n    }, \" \", element.dimensions.rodDiameter), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 589,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 590,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      color: \"info\",\n      size: \"small\",\n      onClick: () => {\n        addRodClick(element);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 591,\n        columnNumber: 19\n      }\n    }, \"Add Rod\")))))));\n  } else if (bottle && bottle.thread && bottle.depth) {\n    const filteredRods = rods.filter(element => {\n      let depthDiff = Number(bottle.depth) - Number(element.dimensions.length);\n\n      if (element.thread && depthDiff > 0) {\n        return element.thread.toLowerCase().indexOf(bottle.thread.toLowerCase()) !== -1;\n      } else {\n        return \"\";\n      }\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 620,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ExportCSV, {\n      csvData: filteredRods,\n      fileName: \"rods\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 621,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 622,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 623,\n        columnNumber: 7\n      }\n    }), filteredRods.map(element => /*#__PURE__*/React.createElement(Tile, {\n      kind: \"ancestor\",\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 625,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Tile, {\n      kind: \"parent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 626,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Tile, {\n      renderAs: \"article\",\n      kind: \"child\",\n      notification: true,\n      color: \"light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 627,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Heading, {\n      size: 7,\n      renderAs: \"h6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 628,\n        columnNumber: 17\n      }\n    }, element.name, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 629,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 630,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 631,\n        columnNumber: 19\n      }\n    }, \" Drawing \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 632,\n        columnNumber: 19\n      }\n    }, \" \", element.drawing), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 633,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 634,\n        columnNumber: 19\n      }\n    }, \" Thread \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 635,\n        columnNumber: 19\n      }\n    }, \" \", element.thread), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 636,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 637,\n        columnNumber: 19\n      }\n    }, \" Length \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 638,\n        columnNumber: 19\n      }\n    }, \" \", element.dimensions.length), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 639,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 640,\n        columnNumber: 19\n      }\n    }, \" Shaft \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 641,\n        columnNumber: 19\n      }\n    }, \" \", element.dimensions.brushDiameter), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 642,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 643,\n        columnNumber: 19\n      }\n    }, \" Rod \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 644,\n        columnNumber: 19\n      }\n    }, \" \", element.dimensions.rodDiameter), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 645,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 646,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      color: \"info\",\n      size: \"small\",\n      onClick: () => {\n        addRodClick(element);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 647,\n        columnNumber: 19\n      }\n    }, \"Add Rod\")))))));\n  } else if (bottle && bottle.thread) {\n    const filteredRods = rods.filter(element => {\n      if (element.thread) {\n        return element.thread.toLowerCase().indexOf(bottle.thread.toLowerCase()) !== -1;\n      } else {\n        return \"\";\n      }\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 675,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ExportCSV, {\n      csvData: filteredRods,\n      fileName: \"rods\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 676,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 677,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 678,\n        columnNumber: 7\n      }\n    }), filteredRods.map(element => /*#__PURE__*/React.createElement(Tile, {\n      kind: \"ancestor\",\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 680,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Tile, {\n      kind: \"parent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 681,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Tile, {\n      renderAs: \"article\",\n      kind: \"child\",\n      notification: true,\n      color: \"light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 682,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Heading, {\n      size: 7,\n      renderAs: \"h6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 683,\n        columnNumber: 17\n      }\n    }, element.name, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 684,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 685,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 686,\n        columnNumber: 19\n      }\n    }, \" Drawing \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 687,\n        columnNumber: 19\n      }\n    }, \" \", element.drawing), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 688,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 689,\n        columnNumber: 19\n      }\n    }, \" Thread \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 690,\n        columnNumber: 19\n      }\n    }, \" \", element.thread), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 691,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 692,\n        columnNumber: 19\n      }\n    }, \" Length \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 693,\n        columnNumber: 19\n      }\n    }, \" \", element.dimensions.length), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 694,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 695,\n        columnNumber: 19\n      }\n    }, \" Shaft \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 696,\n        columnNumber: 19\n      }\n    }, \" \", element.dimensions.brushDiameter), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 697,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 698,\n        columnNumber: 19\n      }\n    }, \" Rod \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 699,\n        columnNumber: 19\n      }\n    }, \" \", element.dimensions.rodDiameter), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 700,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 701,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      color: \"info\",\n      size: \"small\",\n      onClick: () => {\n        addRodClick(element);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 702,\n        columnNumber: 19\n      }\n    }, \"Add Rod\")))))));\n  } else if (brush && brush.type) {\n    const filteredRods = rods.filter(element => {\n      let brushRodDiff = Number(element.dimensions.brushDiameter) - Number(brush.shaftDiameter);\n      let wipeDelta = Number(brush.brushDiameter) - Number(element.dimensions.rodDiameter);\n\n      if (brush.type === \"INYECTADO\" && wipeDelta > 0.5 && wipeDelta < 4.8) {\n        if (brushRodDiff > 0.05 && brushRodDiff < 0.15) {\n          return element;\n        } else {\n          return \"\";\n        }\n      }\n\n      if (brush.type === \"NYLON\" && wipeDelta > 0.8 && wipeDelta < 6.4) {\n        if (brushRodDiff > -0.05 && brushRodDiff < 0.1) {\n          return element;\n        } else {\n          return \"\";\n        }\n      }\n\n      if (brush.type === \"LIP GLOSS\" && wipeDelta > -2 && wipeDelta < 3) {\n        if (brushRodDiff > 0 && brushRodDiff < 0.2) {\n          return element;\n        } else {\n          return \"\";\n        }\n      }\n\n      if (brush.type === \"DELINEADOR\" && wipeDelta > -2 && wipeDelta < -1) {\n        if (brushRodDiff > -0.05 && brushRodDiff < 0.1) {\n          return element;\n        } else {\n          return \"\";\n        }\n      }\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 755,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ExportCSV, {\n      csvData: filteredRods,\n      fileName: \"rods\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 756,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 757,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 758,\n        columnNumber: 7\n      }\n    }), filteredRods.map(element => /*#__PURE__*/React.createElement(Tile, {\n      kind: \"ancestor\",\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 760,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Tile, {\n      kind: \"parent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 761,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Tile, {\n      renderAs: \"article\",\n      kind: \"child\",\n      notification: true,\n      color: \"light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 762,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Heading, {\n      size: 7,\n      renderAs: \"h6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 763,\n        columnNumber: 17\n      }\n    }, element.name, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 764,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 765,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 766,\n        columnNumber: 19\n      }\n    }, \" Drawing \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 767,\n        columnNumber: 19\n      }\n    }, \" \", element.drawing), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 768,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 769,\n        columnNumber: 19\n      }\n    }, \" Thread \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 770,\n        columnNumber: 19\n      }\n    }, \" \", element.thread), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 771,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 772,\n        columnNumber: 19\n      }\n    }, \" Length \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 773,\n        columnNumber: 19\n      }\n    }, \" \", element.dimensions.length), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 774,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 775,\n        columnNumber: 19\n      }\n    }, \" Shaft \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 776,\n        columnNumber: 19\n      }\n    }, \" \", element.dimensions.brushDiameter), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 777,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 778,\n        columnNumber: 19\n      }\n    }, \" Rod \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 779,\n        columnNumber: 19\n      }\n    }, \" \", element.dimensions.rodDiameter), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 780,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 781,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      color: \"info\",\n      size: \"small\",\n      onClick: () => {\n        addRodClick(element);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 782,\n        columnNumber: 19\n      }\n    }, \"Add Rod\")))))));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 803,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ExportCSV, {\n    csvData: rods,\n    fileName: \"rods\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 804,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 805,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 806,\n      columnNumber: 5\n    }\n  }), rods.map(element => /*#__PURE__*/React.createElement(Tile, {\n    kind: \"ancestor\",\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 808,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Tile, {\n    kind: \"parent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 809,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Tile, {\n    renderAs: \"article\",\n    kind: \"child\",\n    notification: true,\n    color: \"light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 810,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Heading, {\n    size: 7,\n    renderAs: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 811,\n      columnNumber: 15\n    }\n  }, element.name, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 812,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 813,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Tag, {\n    color: \"dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 814,\n      columnNumber: 17\n    }\n  }, \" Drawing \"), /*#__PURE__*/React.createElement(Tag, {\n    color: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 815,\n      columnNumber: 17\n    }\n  }, \" \", element.drawing), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 816,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Tag, {\n    color: \"dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 817,\n      columnNumber: 17\n    }\n  }, \" Thread \"), /*#__PURE__*/React.createElement(Tag, {\n    color: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 818,\n      columnNumber: 17\n    }\n  }, \" \", element.thread), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 819,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Tag, {\n    color: \"dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 820,\n      columnNumber: 17\n    }\n  }, \" Length \"), /*#__PURE__*/React.createElement(Tag, {\n    color: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 821,\n      columnNumber: 17\n    }\n  }, \" \", element.dimensions.length), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 822,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Tag, {\n    color: \"dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 823,\n      columnNumber: 17\n    }\n  }, \" Shaft \"), /*#__PURE__*/React.createElement(Tag, {\n    color: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 824,\n      columnNumber: 17\n    }\n  }, \" \", element.dimensions.brushDiameter), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 825,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Tag, {\n    color: \"dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 826,\n      columnNumber: 17\n    }\n  }, \" Rod \"), /*#__PURE__*/React.createElement(Tag, {\n    color: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 827,\n      columnNumber: 17\n    }\n  }, \" \", element.dimensions.rodDiameter), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 828,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 829,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    color: \"info\",\n    size: \"small\",\n    onClick: () => {\n      addRodClick(element);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 830,\n      columnNumber: 17\n    }\n  }, \"Add Rod\")))))));\n}; //---------------- Rod filter\n//---------------- Wiper filter\n\nexport const WiperFilter = props => {\n  const wiper = props.wiper;\n  const wipers = props.wipers;\n  const setBuildClick = props.setBuildClick;\n  const buildClick = props.buildClick;\n\n  const addWiper = async data => {\n    await axios.post(\"/wiper\", {\n      name: data.name,\n      drawing: data.drawing,\n      mold: data.mold\n    }).then(function (response) {\n      if (response.status === 200) {\n        alert(\"Wiper added to the list!\");\n        console.log(\"Wiper succesfully added\");\n      } else {\n        const err = new Error(response.error);\n        console.log(err);\n        throw err;\n      }\n    }).catch(function (error) {\n      alert(error);\n    });\n  };\n\n  const addWiperClick = element => {\n    addWiper(element);\n    setBuildClick(!buildClick);\n  };\n\n  if (wiper && wiper.name) {\n    const filteredWipers = wipers.filter(element => {\n      return element.name.toLowerCase().indexOf(wiper.name.toLowerCase()) !== -1;\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 893,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ExportCSV, {\n      csvData: filteredWipers,\n      fileName: \"wipers\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 894,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 895,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 896,\n        columnNumber: 7\n      }\n    }), filteredWipers.map(element => /*#__PURE__*/React.createElement(Tile, {\n      kind: \"ancestor\",\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 898,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Tile, {\n      kind: \"parent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 899,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Tile, {\n      renderAs: \"article\",\n      kind: \"child\",\n      notification: true,\n      color: \"light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 900,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Heading, {\n      size: 7,\n      renderAs: \"h6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 901,\n        columnNumber: 15\n      }\n    }, element.name, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 902,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 903,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 904,\n        columnNumber: 17\n      }\n    }, \" Drawing \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 905,\n        columnNumber: 17\n      }\n    }, \" \", element.drawing), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 906,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 907,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      color: \"info\",\n      size: \"small\",\n      onClick: () => {\n        addWiperClick(element);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 908,\n        columnNumber: 17\n      }\n    }, \"Add Wiper\")))))));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 928,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ExportCSV, {\n    csvData: wipers,\n    fileName: \"wipers\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 929,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 930,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 931,\n      columnNumber: 5\n    }\n  }), wipers.map(element => /*#__PURE__*/React.createElement(Tile, {\n    kind: \"ancestor\",\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 933,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Tile, {\n    kind: \"parent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 934,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Tile, {\n    renderAs: \"article\",\n    kind: \"child\",\n    notification: true,\n    color: \"light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 935,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Heading, {\n    size: 7,\n    renderAs: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 936,\n      columnNumber: 15\n    }\n  }, element.name, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 937,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 938,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Tag, {\n    color: \"dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 939,\n      columnNumber: 17\n    }\n  }, \" Drawing \"), /*#__PURE__*/React.createElement(Tag, {\n    color: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 940,\n      columnNumber: 17\n    }\n  }, \" \", element.drawing), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 941,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 942,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    color: \"info\",\n    size: \"small\",\n    onClick: () => {\n      addWiperClick(element);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 943,\n      columnNumber: 17\n    }\n  }, \"Add Wiper\")))))));\n}; //---------------- Wiper filter\n//---------------- Filter component\n\nconst Filter = () => {\n  //---------------- hooks\n  const [bottle, setBottle] = useState([]);\n  const [bottles, setBottles] = useState([]);\n  const [rod, setRod] = useState([]);\n  const [rods, setRods] = useState([]);\n  const [wiper, setWiper] = useState([]);\n  const [wipers, setWipers] = useState([]);\n  const [brush, setBrush] = useState([]);\n  const [brushes, setBrushes] = useState([]);\n  const [claim, setClaim] = useState(\"\");\n  const [build, setBuild] = useState([]);\n  const [buildClick, setBuildClick] = useState(false); //---------------- hooks end\n  //---------------- useEffect\n\n  useEffect(() => {\n    const fetchBuild = async () => {\n      const {\n        data\n      } = await axios.get(\"/build\").catch(function (error) {\n        console.log(error);\n      });\n      setBuild(data);\n\n      if (data[0] && data[0].bottle) {\n        setBottle(data[0].bottle);\n      } else {\n        setBottle([]);\n      }\n\n      if (data[0] && data[0].rod) {\n        setRod(data[0].rod);\n      } else {\n        setRod([]);\n      }\n\n      if (data[0] && data[0].brush) {\n        setBrush(data[0].brush);\n      } else {\n        setBrush([]);\n      }\n\n      if (data[0] && data[0].wiper) {\n        setWiper(data[0].wiper);\n      } else {\n        setWiper([]);\n      }\n    };\n\n    const fetchBottles = async () => {\n      const {\n        data\n      } = await axios.get(\"/bottle\").catch(function (error) {\n        console.log(error);\n      });\n      setBottles(data);\n    };\n\n    const fetchBrushes = async () => {\n      const {\n        data\n      } = await axios.get(\"/brush\").catch(function (error) {\n        console.log(error);\n      });\n      setBrushes(data);\n    };\n\n    const fetchRods = async () => {\n      const {\n        data\n      } = await axios.get(\"/rod\").catch(function (error) {\n        console.log(error);\n      });\n      setRods(data);\n    };\n\n    const fetchWipers = async () => {\n      const {\n        data\n      } = await axios.get(\"/wiper\").catch(function (error) {\n        console.log(error);\n      });\n      setWipers(data);\n    };\n\n    fetchBuild();\n    fetchBottles();\n    fetchBrushes();\n    fetchRods();\n    fetchWipers();\n\n    if (!build[0]) {\n      setWiper([]);\n      setRod([]);\n      setBrush([]);\n      setBottle([]);\n    } // no borrar esta linea\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [buildClick]); //---------------- useEffect\n  //---------------- middlewares that must be moved and imported\n\n  const deleteBuild = async () => {\n    await axios.post(\"/delete\").then(function (response) {\n      if (response.status === 200) {\n        console.log(\"Succesfully deleted\");\n        setBottle([]);\n        setRod([]);\n        setWiper([]);\n        setBrush([]);\n        alert(\"Build deleted!\");\n      } else {\n        const err = new Error(response.error);\n        console.log(err);\n        throw err;\n      }\n    }).catch(function (error) {\n      alert(error);\n    });\n  };\n\n  const removeBuildClick = () => {\n    deleteBuild([]);\n    setBuildClick(!buildClick);\n  }; //---------------- middlewares that must be moved and imported end\n  //---------------- render\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1098,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Tile, {\n    kind: \"ancestor\",\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1099,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Tile, {\n    kind: \"parent\",\n    className: \"space\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1100,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Tile, {\n    renderAs: \"article\",\n    kind: \"child\",\n    notification: true,\n    className: \"is-white border verticalPad\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1101,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button.Group, {\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1102,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    className: \"is-danger is-light\",\n    size: \"small\",\n    onClick: () => {\n      setClaim(\"\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1103,\n      columnNumber: 13\n    }\n  }, \"No claim\"), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    className: \"is-link\",\n    size: \"small\",\n    onClick: () => {\n      setClaim(\"definition\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1113,\n      columnNumber: 13\n    }\n  }, \"Definition\"), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    className: \"is-link\",\n    size: \"small\",\n    onClick: () => {\n      setClaim(\"volumizing\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1123,\n      columnNumber: 13\n    }\n  }, \"Volumizing\"), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    className: \"is-link\",\n    size: \"small\",\n    onClick: () => {\n      setClaim(\"lengthening\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1133,\n      columnNumber: 13\n    }\n  }, \"Lengthening\"), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    className: \"is-link\",\n    size: \"small\",\n    onClick: () => {\n      setClaim(\"plumping\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1143,\n      columnNumber: 13\n    }\n  }, \"Plumping\"), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    className: \"is-link\",\n    size: \"small\",\n    onClick: () => {\n      setClaim(\"curling\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1153,\n      columnNumber: 13\n    }\n  }, \"Curling\")), claim ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1165,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Tag, {\n    color: \"dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1166,\n      columnNumber: 17\n    }\n  }, \" \", claim, \" \")) : \"\"), /*#__PURE__*/React.createElement(Tile, {\n    renderAs: \"article\",\n    kind: \"child\",\n    notification: true,\n    className: \"is-white border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1170,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ExportCSV, {\n    csvData: build,\n    fileName: \"build\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1171,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    className: \"is-danger is-light\",\n    size: \"small\",\n    onClick: () => {\n      removeBuildClick();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1172,\n      columnNumber: 13\n    }\n  }, \"Delete build!\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1182,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1183,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Tag.Group, {\n    className: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1184,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Tag, {\n    color: \"dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1185,\n      columnNumber: 15\n    }\n  }, \" Bottle \"), /*#__PURE__*/React.createElement(Tag, {\n    color: \"light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1186,\n      columnNumber: 15\n    }\n  }, \" \", bottle.name), /*#__PURE__*/React.createElement(Tag, {\n    color: \"dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1187,\n      columnNumber: 15\n    }\n  }, \" Brush \"), /*#__PURE__*/React.createElement(Tag, {\n    color: \"light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1188,\n      columnNumber: 15\n    }\n  }, \" \", brush.brush), /*#__PURE__*/React.createElement(Tag, {\n    color: \"dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1189,\n      columnNumber: 15\n    }\n  }, \" Rod \"), /*#__PURE__*/React.createElement(Tag, {\n    color: \"light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1190,\n      columnNumber: 15\n    }\n  }, \" \", rod.name), /*#__PURE__*/React.createElement(Tag, {\n    color: \"dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1191,\n      columnNumber: 15\n    }\n  }, \" Wiper \"), /*#__PURE__*/React.createElement(Tag, {\n    color: \"light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1192,\n      columnNumber: 15\n    }\n  }, \" \", wiper.name))))), /*#__PURE__*/React.createElement(Tile, {\n    kind: \"ancestor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1198,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Tile, {\n    kind: \"parent\",\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1199,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Tile, {\n    renderAs: \"article\",\n    kind: \"child\",\n    notification: true,\n    color: \"white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1200,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(BottleFilter, {\n    rod: rod,\n    brush: brush,\n    bottle: bottle,\n    bottles: bottles,\n    setBuildClick: setBuildClick,\n    buildClick: buildClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1201,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Tile, {\n    renderAs: \"article\",\n    kind: \"child\",\n    notification: true,\n    color: \"white\",\n    className: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1203,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(BrushFilter, {\n    rod: rod,\n    bottle: bottle,\n    setBuildClick: setBuildClick,\n    buildClick: buildClick,\n    brush: brush,\n    brushes: brushes,\n    claim: claim,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1204,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Tile, {\n    renderAs: \"article\",\n    kind: \"child\",\n    notification: true,\n    color: \"white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1206,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(RodFilter, {\n    rod: rod,\n    rods: rods,\n    bottle: bottle,\n    setBuildClick: setBuildClick,\n    buildClick: buildClick,\n    brush: brush,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1207,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Tile, {\n    renderAs: \"article\",\n    kind: \"child\",\n    notification: true,\n    color: \"white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1209,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(WiperFilter, {\n    rod: rod,\n    rods: rods,\n    bottle: bottle,\n    setBuildClick: setBuildClick,\n    buildClick: buildClick,\n    brush: brush,\n    wiper: wiper,\n    wipers: wipers,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1210,\n      columnNumber: 13\n    }\n  })))));\n}; //--------------- render\n\n\nexport default Filter; //---------------- Filter component","map":{"version":3,"sources":["/home/leon/Documentos/proyectos/mascara/client/src/components/Filter.component.js"],"names":["React","useState","useEffect","Button","Tile","Heading","Image","Tag","ExportCSV","Field","Control","Label","Input","Textarea","Select","Checkbox","Radio","Help","InputFile","axios","BottleFilter","props","bottle","bottles","rod","brush","setBuildClick","buildClick","addBottle","data","post","name","drawing","mold","depth","thread","then","response","status","alert","console","log","err","Error","error","catch","addBottleClick","element","filteredBottles","filter","toLowerCase","indexOf","map","brushLength","gap","Number","dimensions","length","onChange","email","BrushFilter","brushes","claim","addBrush","original","shaftLength","shaftDiameter","brushDiameter","type","addBrushClick","filteredBrushes","require","definition","volumizing","lengthening","curling","plumping","mascaraGap","RodFilter","rods","addRod","rodDiameter","addRodClick","filteredRods","depthDiff","brushRodDiff","wipeDelta","WiperFilter","wiper","wipers","addWiper","addWiperClick","filteredWipers","Filter","setBottle","setBottles","setRod","setRods","setWiper","setWipers","setBrush","setBrushes","setClaim","build","setBuild","fetchBuild","get","fetchBottles","fetchBrushes","fetchRods","fetchWipers","deleteBuild","removeBuildClick"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport Button from 'react-bulma-components/lib/components/button';\nimport Tile from 'react-bulma-components/lib/components/tile';\nimport Heading from 'react-bulma-components/lib/components/heading';\nimport Image from 'react-bulma-components/lib/components/image';\nimport Tag from 'react-bulma-components/lib/components/tag';\nimport ExportCSV from './ExportCSV.component';\nimport {\n  Field,\n  Control,\n  Label,\n  Input,\n  Textarea,\n  Select,\n  Checkbox,\n  Radio,\n  Help,\n  InputFile\n} from 'react-bulma-components/lib/components/form';\nimport axios from \"axios\";\nimport '../App.css';\n\n//---------------- Bottle filter\n\nexport const BottleFilter = (props) => {\n  const bottle = props.bottle;\n  const bottles = props.bottles;\n  const rod = props.rod;\n  const brush = props.brush;\n  const setBuildClick = props.setBuildClick;\n  const buildClick = props.buildClick;\n\n  const addBottle = async (data) => {\n    await axios.post(\"/bottle\", {\n      name: data.name,\n      drawing: data.drawing,\n      mold: data.mold,\n      depth: data.depth,\n      thread: data.thread\n    })\n    .then(function (response) {\n      if (response.status === 200) {\n        alert(\"Bottle added to the list!\");\n        console.log(\"Succesfully added\");\n      } else {\n        const err = new Error(response.error);\n        console.log(err);\n        throw err;\n      }\n    })\n    .catch(function (error) {\n      alert(error);\n    });\n  };\n\n  const addBottleClick = (element) => {\n    addBottle(element);\n    setBuildClick(!buildClick);\n  };\n\n  if (bottle && bottle.name){\n    const filteredBottles = bottles.filter( element => {\n      return element.name.toLowerCase().indexOf(bottle.name.toLowerCase()) !== -1;\n    });\n\n    return (\n      <div>\n        <ExportCSV csvData={filteredBottles} fileName=\"bottles\" />\n        <br />\n        <br />\n        {filteredBottles.map((element) => (\n          <Tile kind=\"ancestor\" className=\"App\">\n            <Tile kind=\"parent\">\n              <Tile renderAs=\"article\" kind=\"child\" notification color=\"light\">\n                <Heading size={7} renderAs=\"h6\">{element.name}\n                  <br/>\n                  <br/>\n                  <Tag color=\"dark\" className=\"App\"> Drawing </Tag>\n                  <Tag color=\"info\"> {element.drawing}</Tag>\n                  <br/>\n                  <Tag color=\"dark\"> Thread </Tag>\n                  <Tag color=\"info\"> {element.thread}</Tag>\n                <br/>\n                  <Tag color=\"dark\"> Depth </Tag>\n                  <Tag color=\"info\"> {element.depth}</Tag>\n                <br/>\n                <br/>\n                <Button\n                  type=\"submit\"\n                  color=\"info\"\n                  onClick={() => {\n                    addBottleClick(element);\n                  }}\n                  size=\"small\"\n                >\n                  Add Bottle\n                </Button>\n                </Heading>\n              </Tile>\n            </Tile>\n          </Tile>\n        ))}\n      </div>\n    );\n  } else if (rod && rod.thread && brush && brush.brushLength){\n    const filteredBottles = bottles.filter( element => {\n      let gap = (Number(element.depth) - (Number(rod.dimensions.length) + Number(brush.brushLength)) );\n      if (gap > 2 && gap < 6 && (element.thread.toLowerCase().indexOf(rod.thread.toLowerCase()) !== -1) ){\n        return element;\n      } else {\n        return \"\";\n      }\n    });\n\n    return (\n      <div>\n      <ExportCSV csvData={filteredBottles} fileName=\"bottles\" />\n      <br />\n      <br />\n        {filteredBottles.map((element) => (\n          <Tile kind=\"ancestor\" className=\"App\">\n            <Tile kind=\"parent\">\n              <Tile renderAs=\"article\" kind=\"child\" notification color=\"light\">\n                <Heading size={7} renderAs=\"h6\">{element.name}\n                  <br/>\n                  <br/>\n                  <Tag color=\"dark\" className=\"App\"> Drawing </Tag>\n                  <Tag color=\"info\"> {element.drawing}</Tag>\n                  <br/>\n                  <Tag color=\"dark\"> Thread </Tag>\n                  <Tag color=\"info\"> {element.thread}</Tag>\n                  <br/>\n                  <Tag color=\"dark\"> Depth </Tag>\n                  <Tag color=\"info\"> {element.depth}</Tag>\n                  <br/>\n                  <br/>\n                  <Button\n                    type=\"submit\"\n                    color=\"info\"\n                    onClick={() => {\n                      addBottleClick(element);\n                    }}\n                    size=\"small\"\n                  >\n                    Add Bottle\n                  </Button>\n                </Heading>\n              </Tile>\n            </Tile>\n          </Tile>\n        ))}\n      </div>\n    );\n\n  } else if (rod && rod.thread){\n    const filteredBottles = bottles.filter( element => {\n      return element.thread.toLowerCase().indexOf(rod.thread.toLowerCase()) !== -1;\n    });\n\n    return (\n      <div>\n      <ExportCSV csvData={filteredBottles} fileName=\"bottles\" />\n      <br />\n      <br />\n        {filteredBottles.map((element) => (\n          <Tile kind=\"ancestor\" className=\"App\">\n            <Tile kind=\"parent\">\n              <Tile renderAs=\"article\" kind=\"child\" notification color=\"light\">\n                <Heading size={7} renderAs=\"h6\">{element.name}\n                  <br/>\n                  <br/>\n                  <Tag color=\"dark\" className=\"App\"> Drawing </Tag>\n                  <Tag color=\"info\"> {element.drawing}</Tag>\n                  <br/>\n                  <Tag color=\"dark\"> Thread </Tag>\n                  <Tag color=\"info\"> {element.thread}</Tag>\n                  <br/>\n                  <Tag color=\"dark\"> Depth </Tag>\n                  <Tag color=\"info\"> {element.depth}</Tag>\n                  <br/>\n                  <br/>\n                  <Button\n                    type=\"submit\"\n                    color=\"info\"\n                    onClick={() => {\n                      addBottleClick(element);\n                    }}\n                    size=\"small\"\n                  >\n                    Add Bottle\n                  </Button>\n                </Heading>\n              </Tile>\n            </Tile>\n          </Tile>\n        ))}\n      </div>\n    );\n  }\n\n  return (\n    <div>\n    <ExportCSV csvData={bottles} fileName=\"bottles\" />\n    <Control>\n      <Input onChange={this.onChange} name=\"email\" type=\"bottle\" placeholder=\"Bottle search\" value={email} />\n    </Control>\n    <br />\n    <br />\n      {bottles.map((element) => (\n        <Tile kind=\"ancestor\" className=\"App\">\n          <Tile kind=\"parent\">\n            <Tile renderAs=\"article\" kind=\"child\" notification color=\"light\">\n              <Heading size={7} renderAs=\"h6\">{element.name}\n                <br/>\n                <br/>\n                <Tag color=\"dark\" className=\"App\"> Drawing </Tag>\n                <Tag color=\"info\"> {element.drawing}</Tag>\n                <br/>\n                <Tag color=\"dark\"> Thread </Tag>\n                <Tag color=\"info\"> {element.thread}</Tag>\n                <br/>\n                <Tag color=\"dark\"> Depth </Tag>\n                <Tag color=\"info\"> {element.depth}</Tag>\n                <br/>\n                <br/>\n                <Button\n                  type=\"submit\"\n                  color=\"info\"\n                  onClick={() => {\n                    addBottleClick(element);\n                  }}\n                  size=\"small\"\n                >\n                  Add Bottle\n                </Button>\n              </Heading>\n            </Tile>\n          </Tile>\n        </Tile>\n      ))}\n    </div>\n  );\n};\n\n//---------------- Bottle filter\n\n//---------------- Brush filter\n\nexport const BrushFilter = (props) => {\n  const brush = props.brush;\n  const brushes = props.brushes;\n  const claim = props.claim;\n  const rod = props.rod;\n  const bottle = props.bottle;\n  const setBuildClick = props.setBuildClick;\n  const buildClick = props.buildClick;\n\n  const addBrush = async (data) => {\n    await axios.post(\"/brush\", {\n        brush: data.brush,\n        original: data.original,\n        shaftLength: data.shaftLength,\n        shaftDiameter: data.shaftDiameter,\n        brushLength: data.brushLength,\n        brushDiameter: data.brushDiameter,\n        type: data.type\n      })\n      .then(function (response) {\n        if (response.status === 200) {\n          alert(\"Brush added to the list!\");\n          console.log(\"Succesfully added\");\n        } else {\n          const err = new Error(response.error);\n          console.log(err);\n          throw err;\n        }\n      })\n      .catch(function (error) {\n        alert(error);\n      });\n  };\n\n  const addBrushClick = (element) => {\n    addBrush(element);\n    setBuildClick(!buildClick);\n  };\n\n   if (brush && brush.brush){\n    const filteredBrushes = brushes.filter( element => {\n      return element.brush.toLowerCase().indexOf(brush.brush.toLowerCase()) !== -1;\n    });\n\n    return (\n      <div>\n      <ExportCSV csvData={filteredBrushes} fileName=\"brushes\" />\n      <br />\n      <br />\n        {filteredBrushes.map((element) => (\n          <Tile kind=\"ancestor\" className=\"App\">\n            <Tile kind=\"parent\">\n              <Tile renderAs=\"article\" kind=\"child\" notification color=\"light\">\n                <Heading size={7} renderAs=\"h6\" >{element.brush}\n                  <br/>\n                  <br/>\n                  <Image rounded=\"true\" key={element.brush} size=\"2by1\" className=\"center\" src={require(`../images/${element.brush}.jpg`)} alt=\"\" />\n                  <br/>\n                  <Tag color=\"dark\"> Drawing </Tag>\n                  <Tag color=\"info\"> {element.drawing}</Tag>\n                  <br/>\n                  <Tag color=\"dark\"> Type </Tag>\n                  <Tag color=\"info\"> {element.type}</Tag>\n                  <br/>\n                  <Tag color=\"dark\"> Length </Tag>\n                  <Tag color=\"info\"> {element.brushLength}</Tag>\n                  <br/>\n                  <Tag color=\"dark\"> Shaft </Tag>\n                  <Tag color=\"info\"> {element.shaftDiameter}</Tag>\n                  <br/>\n                  <Tag color=\"dark\"> Brush </Tag>\n                  <Tag color=\"info\"> {element.brushDiameter}</Tag>\n                  <br/>\n                  <br/>\n                  <Button\n                    type=\"submit\"\n                    color=\"info\"\n                    size=\"small\"\n                    onClick={() => {\n                      addBrushClick(element);\n                    }}\n                  >\n                    Add Brush\n                  </Button>\n                </Heading>\n              </Tile>\n            </Tile>\n          </Tile>\n        ))}\n      </div>\n    );\n\n  } else if (claim){\n    const filteredBrushes = brushes.filter( element => {\n      if (claim === \"definition\" && element.claim.definition === true) {\n        return element;\n      } else if (claim === \"volumizing\" && element.claim.volumizing === true)  {\n        return element;\n      } else if (claim === \"lengthening\" && element.claim.lengthening === true) {\n        return element;\n      } else if (claim === \"curling\" && element.claim.curling === true) {\n        return element;\n      } else if (claim === \"plumping\" && element.claim.plumping === true) {\n        return element;\n      } else {\n        return \"\";\n      }\n    });\n\n    return (\n      <div>\n      <ExportCSV csvData={filteredBrushes} fileName=\"brushes\" />\n      <br />\n      <br />\n        {filteredBrushes.map((element) => (\n          <Tile kind=\"ancestor\" className=\"App\">\n            <Tile kind=\"parent\">\n              <Tile renderAs=\"article\" kind=\"child\" notification color=\"light\">\n                <Heading size={7} renderAs=\"h6\" >{element.brush}\n                  <br/>\n                  <br/>\n                  <Image rounded=\"true\" key={element.brush} size=\"2by1\" className=\"center\" src={require(`../images/${element.brush}.jpg`)} alt=\"\" />\n                  <br/>\n                  <Tag color=\"dark\"> Drawing </Tag>\n                  <Tag color=\"info\"> {element.drawing}</Tag>\n                  <br/>\n                  <Tag color=\"dark\"> Type </Tag>\n                  <Tag color=\"info\"> {element.type}</Tag>\n                  <br/>\n                  <Tag color=\"dark\"> Length </Tag>\n                  <Tag color=\"info\"> {element.brushLength}</Tag>\n                  <br/>\n                  <Tag color=\"dark\"> Shaft </Tag>\n                  <Tag color=\"info\"> {element.shaftDiameter}</Tag>\n                  <br/>\n                  <Tag color=\"dark\"> Brush </Tag>\n                  <Tag color=\"info\"> {element.brushDiameter}</Tag>\n                  <br/>\n                  <br/>\n                  <Button\n                    type=\"submit\"\n                    color=\"info\"\n                    size=\"small\"\n                    onClick={() => {\n                      addBrushClick(element);\n                    }}\n                  >\n                    Add Brush\n                  </Button>\n                </Heading>\n              </Tile>\n            </Tile>\n          </Tile>\n        ))}\n      </div>\n    );\n\n  } else if (rod && rod.name && bottle && bottle.name){\n    const filteredBrushes = brushes.filter( element => {\n      let mascaraGap =  (Number(bottle.depth) - (Number(element.brushLength) + Number(rod.dimensions.length)));\n      if (mascaraGap > 1 && mascaraGap < 6) {\n        return element;\n      } else {\n        return null ;\n      }\n    });\n\n    return (\n      <div>\n      <ExportCSV csvData={filteredBrushes} fileName=\"brushes\" />\n      <br />\n      <br />\n        {filteredBrushes.map((element) => (\n          <Tile kind=\"ancestor\" className=\"App\">\n            <Tile kind=\"parent\">\n              <Tile renderAs=\"article\" kind=\"child\" notification color=\"light\">\n                <Heading size={7} renderAs=\"h6\" >{element.brush}\n                  <br/>\n                  <br/>\n                  <Image rounded=\"true\" key={element.brush} size=\"2by1\" className=\"center\" src={require(`../images/${element.brush}.jpg`)} alt=\"\" />\n                  <br/>\n                  <Tag color=\"dark\"> Drawing </Tag>\n                  <Tag color=\"info\"> {element.drawing}</Tag>\n                  <br/>\n                  <Tag color=\"dark\"> Type </Tag>\n                  <Tag color=\"info\"> {element.type}</Tag>\n                  <br/>\n                  <Tag color=\"dark\"> Length </Tag>\n                  <Tag color=\"info\"> {element.brushLength}</Tag>\n                  <br/>\n                  <Tag color=\"dark\"> Shaft </Tag>\n                  <Tag color=\"info\"> {element.shaftDiameter}</Tag>\n                  <br/>\n                  <Tag color=\"dark\"> Brush </Tag>\n                  <Tag color=\"info\"> {element.brushDiameter}</Tag>\n                  <br/>\n                  <br/>\n                  <Button\n                    type=\"submit\"\n                    color=\"info\"\n                    size=\"small\"\n                    onClick={() => {\n                      addBrushClick(element);\n                    }}\n                  >\n                    Add Brush\n                  </Button>\n                </Heading>\n              </Tile>\n            </Tile>\n          </Tile>\n        ))}\n      </div>\n    );\n\n  }\n\n  return (\n    <div>\n    <ExportCSV csvData={brushes} fileName=\"brushes\" />\n    <br />\n    <br />\n      {brushes.map((element) => (\n        <Tile kind=\"ancestor\" className=\"App\">\n          <Tile kind=\"parent\">\n            <Tile renderAs=\"article\" kind=\"child\" notification color=\"light\">\n              <Heading size={7} renderAs=\"h6\" >{element.brush}\n                <br/>\n                <br/>\n                <Image rounded=\"true\" key={element.brush} size=\"2by1\" className=\"center\" src={require(`../images/${element.brush}.jpg`)} alt=\"\" />\n                <br/>\n                <Tag color=\"dark\"> Drawing </Tag>\n                <Tag color=\"info\"> {element.drawing}</Tag>\n                <br/>\n                <Tag color=\"dark\"> Type </Tag>\n                <Tag color=\"info\"> {element.type}</Tag>\n                <br/>\n                <Tag color=\"dark\"> Length </Tag>\n                <Tag color=\"info\"> {element.brushLength}</Tag>\n                <br/>\n                <Tag color=\"dark\"> Shaft </Tag>\n                <Tag color=\"info\"> {element.shaftDiameter}</Tag>\n                <br/>\n                <Tag color=\"dark\"> Brush </Tag>\n                <Tag color=\"info\"> {element.brushDiameter}</Tag>\n                <br/>\n                <br/>\n                <Button\n                  type=\"submit\"\n                  color=\"info\"\n                  size=\"small\"\n                  onClick={() => {\n                    addBrushClick(element);\n                  }}\n                >\n                  Add Brush\n                </Button>\n              </Heading>\n            </Tile>\n          </Tile>\n        </Tile>\n      ))}\n    </div>\n  );\n};\n\n//---------------- Brush filter\n\n//---------------- Rod filter\n\nexport const RodFilter = (props) => {\n  const rod = props.rod;\n  const rods = props.rods;\n  const bottle = props.bottle;\n  const brush = props.brush;\n  const setBuildClick = props.setBuildClick;\n  const buildClick = props.buildClick;\n\n  const addRod = async (data) => {\n    await axios.post(\"/rod\", {\n        name: data.name,\n        drawing: data.drawing,\n        thread: data.thread,\n        dimensions: {\n          length: data.dimensions.length,\n          rodDiameter: data.dimensions.rodDiameter,\n          brushDiameter: data.dimensions.brushDiameter,\n        }\n      })\n      .then(function (response) {\n        if (response.status === 200) {\n          alert(\"Rod added to the list!\");\n          console.log(\"Succesfully added\");\n        } else {\n          const err = new Error(response.error);\n          console.log(err);\n          throw err;\n        }\n      })\n      .catch(function (error) {\n        alert(error);\n      });\n  };\n\n  const addRodClick = (element) => {\n    addRod(element);\n    setBuildClick(!buildClick);\n  };\n\n  if (rod && rod.name){\n    const filteredRods = rods.filter( element => {\n      return element.name.toLowerCase().indexOf(rod.name.toLowerCase()) !== -1;\n    });\n\n    return (\n      <div>\n      <ExportCSV csvData={filteredRods} fileName=\"rods\" />\n      <br />\n      <br />\n        {filteredRods.map((element) => (\n          <Tile kind=\"ancestor\" className=\"App\">\n            <Tile kind=\"parent\">\n              <Tile renderAs=\"article\" kind=\"child\" notification color=\"light\">\n                <Heading size={7} renderAs=\"h6\" >{element.name}\n                  <br/>\n                  <br/>\n                  <Tag color=\"dark\"> Drawing </Tag>\n                  <Tag color=\"info\"> {element.drawing}</Tag>\n                  <br/>\n                  <Tag color=\"dark\"> Thread </Tag>\n                  <Tag color=\"info\"> {element.thread}</Tag>\n                  <br/>\n                  <Tag color=\"dark\"> Length </Tag>\n                  <Tag color=\"info\"> {element.dimensions.length}</Tag>\n                  <br/>\n                  <Tag color=\"dark\"> Shaft </Tag>\n                  <Tag color=\"info\"> {element.dimensions.brushDiameter}</Tag>\n                  <br/>\n                  <Tag color=\"dark\"> Rod </Tag>\n                  <Tag color=\"info\"> {element.dimensions.rodDiameter}</Tag>\n                  <br/>\n                  <br/>\n                  <Button\n                    type=\"submit\"\n                    color=\"info\"\n                    size=\"small\"\n                    onClick={() => {\n                      addRodClick(element);\n                    }}\n                  >\n                    Add Rod\n                  </Button>\n                </Heading>\n              </Tile>\n            </Tile>\n          </Tile>\n        ))}\n      </div>\n    );\n\n  } else if (bottle && bottle.thread && bottle.depth){\n    const filteredRods = rods.filter( element => {\n      let depthDiff = (Number(bottle.depth) - Number(element.dimensions.length));\n      if (element.thread && (depthDiff > 0)) {\n        return element.thread.toLowerCase().indexOf(bottle.thread.toLowerCase()) !== -1;\n      } else {\n        return \"\";\n      }\n    });\n\n    return (\n      <div>\n      <ExportCSV csvData={filteredRods} fileName=\"rods\" />\n      <br />\n      <br />\n        {filteredRods.map((element) => (\n          <Tile kind=\"ancestor\" className=\"App\">\n            <Tile kind=\"parent\">\n              <Tile renderAs=\"article\" kind=\"child\" notification color=\"light\">\n                <Heading size={7} renderAs=\"h6\" >{element.name}\n                  <br/>\n                  <br/>\n                  <Tag color=\"dark\"> Drawing </Tag>\n                  <Tag color=\"info\"> {element.drawing}</Tag>\n                  <br/>\n                  <Tag color=\"dark\"> Thread </Tag>\n                  <Tag color=\"info\"> {element.thread}</Tag>\n                  <br/>\n                  <Tag color=\"dark\"> Length </Tag>\n                  <Tag color=\"info\"> {element.dimensions.length}</Tag>\n                  <br/>\n                  <Tag color=\"dark\"> Shaft </Tag>\n                  <Tag color=\"info\"> {element.dimensions.brushDiameter}</Tag>\n                  <br/>\n                  <Tag color=\"dark\"> Rod </Tag>\n                  <Tag color=\"info\"> {element.dimensions.rodDiameter}</Tag>\n                  <br/>\n                  <br/>\n                  <Button\n                    type=\"submit\"\n                    color=\"info\"\n                    size=\"small\"\n                    onClick={() => {\n                      addRodClick(element);\n                    }}\n                  >\n                    Add Rod\n                  </Button>\n                </Heading>\n              </Tile>\n            </Tile>\n          </Tile>\n        ))}\n      </div>\n  );\n\n  } else if (bottle && bottle.thread){\n    const filteredRods = rods.filter( element => {\n      if (element.thread) {\n        return element.thread.toLowerCase().indexOf(bottle.thread.toLowerCase()) !== -1;\n      } else {\n        return \"\";\n      }\n    });\n\n    return (\n      <div>\n      <ExportCSV csvData={filteredRods} fileName=\"rods\" />\n      <br />\n      <br />\n        {filteredRods.map((element) => (\n          <Tile kind=\"ancestor\" className=\"App\">\n            <Tile kind=\"parent\">\n              <Tile renderAs=\"article\" kind=\"child\" notification color=\"light\">\n                <Heading size={7} renderAs=\"h6\" >{element.name}\n                  <br/>\n                  <br/>\n                  <Tag color=\"dark\"> Drawing </Tag>\n                  <Tag color=\"info\"> {element.drawing}</Tag>\n                  <br/>\n                  <Tag color=\"dark\"> Thread </Tag>\n                  <Tag color=\"info\"> {element.thread}</Tag>\n                  <br/>\n                  <Tag color=\"dark\"> Length </Tag>\n                  <Tag color=\"info\"> {element.dimensions.length}</Tag>\n                  <br/>\n                  <Tag color=\"dark\"> Shaft </Tag>\n                  <Tag color=\"info\"> {element.dimensions.brushDiameter}</Tag>\n                  <br/>\n                  <Tag color=\"dark\"> Rod </Tag>\n                  <Tag color=\"info\"> {element.dimensions.rodDiameter}</Tag>\n                  <br/>\n                  <br/>\n                  <Button\n                    type=\"submit\"\n                    color=\"info\"\n                    size=\"small\"\n                    onClick={() => {\n                      addRodClick(element);\n                    }}\n                  >\n                    Add Rod\n                  </Button>\n                </Heading>\n              </Tile>\n            </Tile>\n          </Tile>\n        ))}\n      </div>\n  );\n\n  } else if (brush && brush.type){\n    const filteredRods = rods.filter( element => {\n      let brushRodDiff =  Number(element.dimensions.brushDiameter) - Number(brush.shaftDiameter);\n      let wipeDelta =  Number(brush.brushDiameter) - Number(element.dimensions.rodDiameter) ;\n      if (brush.type === \"INYECTADO\" && wipeDelta > 0.5 && wipeDelta < 4.8) {\n        if (brushRodDiff > 0.05 && brushRodDiff < 0.15){\n          return element;\n        } else {\n          return \"\";\n        }\n      }\n      if (brush.type === \"NYLON\" && wipeDelta > 0.8 && wipeDelta < 6.4) {\n        if (brushRodDiff > -0.05 && brushRodDiff < 0.1){\n          return element;\n        } else {\n          return \"\";\n        }\n      }\n      if (brush.type === \"LIP GLOSS\" && wipeDelta > -2 && wipeDelta < 3) {\n        if (brushRodDiff > 0 && brushRodDiff < 0.2){\n          return element;\n        } else {\n          return \"\";\n        }\n      }\n      if (brush.type === \"DELINEADOR\" && wipeDelta > -2 && wipeDelta < -1) {\n        if (brushRodDiff > -0.05 && brushRodDiff < 0.1){\n          return element;\n        } else {\n          return \"\";\n        }\n      }\n    });\n\n    return (\n      <div>\n      <ExportCSV csvData={filteredRods} fileName=\"rods\" />\n      <br />\n      <br />\n        {filteredRods.map((element) => (\n          <Tile kind=\"ancestor\" className=\"App\">\n            <Tile kind=\"parent\">\n              <Tile renderAs=\"article\" kind=\"child\" notification color=\"light\">\n                <Heading size={7} renderAs=\"h6\" >{element.name}\n                  <br/>\n                  <br/>\n                  <Tag color=\"dark\"> Drawing </Tag>\n                  <Tag color=\"info\"> {element.drawing}</Tag>\n                  <br/>\n                  <Tag color=\"dark\"> Thread </Tag>\n                  <Tag color=\"info\"> {element.thread}</Tag>\n                  <br/>\n                  <Tag color=\"dark\"> Length </Tag>\n                  <Tag color=\"info\"> {element.dimensions.length}</Tag>\n                  <br/>\n                  <Tag color=\"dark\"> Shaft </Tag>\n                  <Tag color=\"info\"> {element.dimensions.brushDiameter}</Tag>\n                  <br/>\n                  <Tag color=\"dark\"> Rod </Tag>\n                  <Tag color=\"info\"> {element.dimensions.rodDiameter}</Tag>\n                  <br/>\n                  <br/>\n                  <Button\n                    type=\"submit\"\n                    color=\"info\"\n                    size=\"small\"\n                    onClick={() => {\n                      addRodClick(element);\n                    }}\n                  >\n                    Add Rod\n                  </Button>\n                </Heading>\n              </Tile>\n            </Tile>\n          </Tile>\n        ))}\n      </div>\n  );\n\n  }\n\n  return (\n    <div>\n    <ExportCSV csvData={rods} fileName=\"rods\" />\n    <br />\n    <br />\n      {rods.map((element) => (\n        <Tile kind=\"ancestor\" className=\"App\">\n          <Tile kind=\"parent\">\n            <Tile renderAs=\"article\" kind=\"child\" notification color=\"light\">\n              <Heading size={7} renderAs=\"h6\" >{element.name}\n                <br/>\n                <br/>\n                <Tag color=\"dark\"> Drawing </Tag>\n                <Tag color=\"info\"> {element.drawing}</Tag>\n                <br/>\n                <Tag color=\"dark\"> Thread </Tag>\n                <Tag color=\"info\"> {element.thread}</Tag>\n                <br/>\n                <Tag color=\"dark\"> Length </Tag>\n                <Tag color=\"info\"> {element.dimensions.length}</Tag>\n                <br/>\n                <Tag color=\"dark\"> Shaft </Tag>\n                <Tag color=\"info\"> {element.dimensions.brushDiameter}</Tag>\n                <br/>\n                <Tag color=\"dark\"> Rod </Tag>\n                <Tag color=\"info\"> {element.dimensions.rodDiameter}</Tag>\n                <br/>\n                <br/>\n                <Button\n                  type=\"submit\"\n                  color=\"info\"\n                  size=\"small\"\n                  onClick={() => {\n                    addRodClick(element);\n                  }}\n                >\n                  Add Rod\n                </Button>\n              </Heading>\n            </Tile>\n          </Tile>\n        </Tile>\n      ))}\n    </div>\n\n  );\n\n};\n\n//---------------- Rod filter\n\n//---------------- Wiper filter\n\nexport const WiperFilter = (props) => {\n  const wiper = props.wiper;\n  const wipers = props.wipers;\n  const setBuildClick = props.setBuildClick;\n  const buildClick = props.buildClick;\n\n  const addWiper = async (data) => {\n    await axios.post(\"/wiper\", {\n        name: data.name,\n        drawing: data.drawing,\n        mold: data.mold,\n      })\n      .then(function (response) {\n        if (response.status === 200) {\n          alert(\"Wiper added to the list!\");\n          console.log(\"Wiper succesfully added\");\n        } else {\n          const err = new Error(response.error);\n          console.log(err);\n          throw err;\n        }\n      })\n      .catch(function (error) {\n        alert(error);\n      });\n  };\n\n  const addWiperClick = (element) => {\n    addWiper(element);\n    setBuildClick(!buildClick);\n  };\n\n   if (wiper && wiper.name){\n    const filteredWipers = wipers.filter( element => {\n      return element.name.toLowerCase().indexOf(wiper.name.toLowerCase()) !== -1;\n    });\n\n    return (\n      <div>\n      <ExportCSV csvData={filteredWipers} fileName=\"wipers\" />\n      <br />\n      <br />\n        {filteredWipers.map((element) => (\n          <Tile kind=\"ancestor\" className=\"App\">\n            <Tile kind=\"parent\">\n              <Tile renderAs=\"article\" kind=\"child\" notification color=\"light\">\n              <Heading size={7} renderAs=\"h6\" >{element.name}\n                <br/>\n                <br/>\n                <Tag color=\"dark\"> Drawing </Tag>\n                <Tag color=\"info\"> {element.drawing}</Tag>\n                <br/>\n                <br/>\n                <Button\n                  type=\"submit\"\n                  color=\"info\"\n                  size=\"small\"\n                  onClick={() => {\n                    addWiperClick(element);\n                  }}\n                >\n                  Add Wiper\n                </Button>\n              </Heading>\n              </Tile>\n            </Tile>\n          </Tile>\n        ))}\n      </div>\n    );\n  }\n\n  return (\n    <div>\n    <ExportCSV csvData={wipers} fileName=\"wipers\" />\n    <br />\n    <br />\n      {wipers.map((element) => (\n        <Tile kind=\"ancestor\" className=\"App\">\n          <Tile kind=\"parent\">\n            <Tile renderAs=\"article\" kind=\"child\" notification color=\"light\">\n              <Heading size={7} renderAs=\"h6\" >{element.name}\n                <br/>\n                <br/>\n                <Tag color=\"dark\"> Drawing </Tag>\n                <Tag color=\"info\"> {element.drawing}</Tag>\n                <br/>\n                <br/>\n                <Button\n                  type=\"submit\"\n                  color=\"info\"\n                  size=\"small\"\n                  onClick={() => {\n                    addWiperClick(element);\n                  }}\n                >\n                  Add Wiper\n                </Button>\n              </Heading>\n            </Tile>\n          </Tile>\n        </Tile>\n      ))}\n    </div>\n  );\n};\n\n//---------------- Wiper filter\n\n//---------------- Filter component\n\nconst Filter = () => {\n\n//---------------- hooks\n\n  const [bottle, setBottle] = useState([]);\n  const [bottles, setBottles] = useState([]);\n  const [rod, setRod] = useState([]);\n  const [rods, setRods] = useState([]);\n  const [wiper, setWiper] = useState([]);\n  const [wipers, setWipers] = useState([]);\n  const [brush, setBrush] = useState([]);\n  const [brushes, setBrushes] = useState([]);\n  const [claim, setClaim] = useState(\"\");\n  const [build, setBuild] = useState([]);\n  const [buildClick, setBuildClick] = useState(false);\n\n//---------------- hooks end\n\n//---------------- useEffect\n\n  useEffect(() => {\n    const fetchBuild = async () => {\n      const {data} = await axios.get(\"/build\")\n      .catch(function (error) {\n        console.log(error)\n      });\n      setBuild(data);\n      if (data[0] && data[0].bottle) {\n        setBottle(data[0].bottle);\n      } else {\n        setBottle([])\n      }\n      if (data[0] && data[0].rod) {\n        setRod(data[0].rod);\n      } else {\n        setRod([])\n      }\n      if (data[0] && data[0].brush) {\n        setBrush(data[0].brush);\n      } else {\n        setBrush([])\n      }\n      if (data[0] && data[0].wiper) {\n        setWiper(data[0].wiper);\n      } else {\n        setWiper([])\n      }\n    }\n\n    const fetchBottles = async () => {\n      const {data} = await axios.get(\"/bottle\")\n      .catch(function (error) {\n        console.log(error)\n      });\n      setBottles(data);\n    }\n\n    const fetchBrushes = async () => {\n      const {data} = await axios.get(\"/brush\")\n      .catch(function (error) {\n        console.log(error)\n      });\n      setBrushes(data);\n    }\n\n    const fetchRods = async () => {\n      const {data} = await axios.get(\"/rod\")\n      .catch(function (error) {\n        console.log(error)\n      });\n      setRods(data);\n    }\n\n    const fetchWipers = async () => {\n      const {data} = await axios.get(\"/wiper\")\n      .catch(function (error) {\n        console.log(error)\n      });\n      setWipers(data);\n    }\n\n    fetchBuild();\n    fetchBottles();\n    fetchBrushes();\n    fetchRods();\n    fetchWipers();\n\n    if (!build[0]) {\n      setWiper([]);\n      setRod([]);\n      setBrush([]);\n      setBottle([]);\n    }\n\n// no borrar esta linea\n// eslint-disable-next-line react-hooks/exhaustive-deps\n}, [buildClick]);\n\n//---------------- useEffect\n\n//---------------- middlewares that must be moved and imported\n\n  const deleteBuild = async () => {\n    await axios.post(\"/delete\")\n    .then(function (response) {\n      if (response.status === 200) {\n        console.log(\"Succesfully deleted\");\n        setBottle([]);\n        setRod([]);\n        setWiper([]);\n        setBrush([]);\n        alert(\"Build deleted!\");\n      } else {\n        const err = new Error(response.error);\n        console.log(err);\n        throw err;\n      }\n    })\n    .catch(function (error) {\n      alert(error);\n    });\n  };\n\n  const removeBuildClick = () => {\n    deleteBuild([]);\n    setBuildClick(!buildClick);\n  };\n\n//---------------- middlewares that must be moved and imported end\n\n//---------------- render\n  return (\n    <div>\n      <Tile kind=\"ancestor\" className=\"App\">\n        <Tile kind=\"parent\" className=\"space\">\n          <Tile renderAs=\"article\" kind=\"child\" notification className=\"is-white border verticalPad\">\n          <Button.Group size=\"small\">\n            <Button\n              type=\"submit\"\n              className=\"is-danger is-light\"\n              size=\"small\"\n              onClick={() => {\n                setClaim(\"\");\n              }}\n            >\n              No claim\n            </Button>\n            <Button\n              type=\"submit\"\n              className=\"is-link\"\n              size=\"small\"\n              onClick={() => {\n                setClaim(\"definition\");\n              }}\n            >\n              Definition\n            </Button>\n            <Button\n              type=\"submit\"\n              className=\"is-link\"\n              size=\"small\"\n              onClick={() => {\n                setClaim(\"volumizing\");\n              }}\n            >\n              Volumizing\n            </Button>\n            <Button\n              type=\"submit\"\n              className=\"is-link\"\n              size=\"small\"\n              onClick={() => {\n                setClaim(\"lengthening\");\n              }}\n            >\n              Lengthening\n            </Button>\n            <Button\n              type=\"submit\"\n              className=\"is-link\"\n              size=\"small\"\n              onClick={() => {\n                setClaim(\"plumping\");\n              }}\n            >\n              Plumping\n            </Button>\n            <Button\n              type=\"submit\"\n              className=\"is-link\"\n              size=\"small\"\n              onClick={() => {\n                setClaim(\"curling\");\n              }}\n            >\n              Curling\n            </Button>\n          </Button.Group>\n            {claim ?\n              <div>\n                <Tag color=\"dark\"> { claim } </Tag>\n              </div>\n              : \"\" }\n          </Tile>\n          <Tile renderAs=\"article\" kind=\"child\" notification className=\"is-white border\">\n            <ExportCSV csvData={build} fileName=\"build\"/>\n            <Button\n              type=\"submit\"\n              className=\"is-danger is-light\"\n              size=\"small\"\n              onClick={() => {\n                removeBuildClick();\n              }}\n            >\n              Delete build!\n            </Button>\n            <br/>\n            <br/>\n            <Tag.Group className=\"center\">\n              <Tag color=\"dark\"> Bottle </Tag>\n              <Tag color=\"light\"> {bottle.name}</Tag>\n              <Tag color=\"dark\"> Brush </Tag>\n              <Tag color=\"light\"> {brush.brush}</Tag>\n              <Tag color=\"dark\"> Rod </Tag>\n              <Tag color=\"light\"> {rod.name}</Tag>\n              <Tag color=\"dark\"> Wiper </Tag>\n              <Tag color=\"light\"> {wiper.name}</Tag>\n            </Tag.Group>\n          </Tile>\n        </Tile>\n      </Tile>\n\n      <Tile kind=\"ancestor\">\n        <Tile kind=\"parent\" className=\"App\">\n          <Tile renderAs=\"article\" kind=\"child\" notification color=\"white\">\n            <BottleFilter rod={rod} brush={brush} bottle={bottle} bottles={bottles} setBuildClick={setBuildClick} buildClick={buildClick}></BottleFilter>\n          </Tile>\n          <Tile renderAs=\"article\" kind=\"child\" notification color=\"white\" className=\"center\">\n            <BrushFilter rod={rod} bottle={bottle} setBuildClick={setBuildClick} buildClick={buildClick} brush={brush} brushes={brushes} claim={claim}></BrushFilter>\n          </Tile>\n          <Tile renderAs=\"article\" kind=\"child\" notification color=\"white\">\n            <RodFilter rod={rod} rods={rods} bottle={bottle} setBuildClick={setBuildClick} buildClick={buildClick} brush={brush}></RodFilter>\n          </Tile>\n          <Tile renderAs=\"article\" kind=\"child\" notification color=\"white\">\n            <WiperFilter rod={rod} rods={rods} bottle={bottle} setBuildClick={setBuildClick} buildClick={buildClick} brush={brush} wiper={wiper} wipers={wipers}></WiperFilter>\n          </Tile>\n          {/* <Tile renderAs=\"article\" kind=\"child\" notification>\n            <WiperFilter></WiperFilter>\n          </Tile> */}\n        </Tile>\n      </Tile>\n\n      {/* verifying assembly tiles*/}\n\n      {/* Delete and reset*/}\n    </div>\n  );\n}\n\n//--------------- render\n\nexport default Filter;\n\n//---------------- Filter component\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _memoizerific = _interopRequireDefault(require(\"memoizerific\"));\n\nvar _tsDedent = _interopRequireDefault(require(\"ts-dedent\"));\n\nvar _stable = _interopRequireDefault(require(\"stable\"));\n\nvar _mapValues = _interopRequireDefault(require(\"lodash/mapValues\"));\n\nvar _pick = _interopRequireDefault(require(\"lodash/pick\"));\n\nvar _store = _interopRequireDefault(require(\"store2\"));\n\nvar _coreEvents = _interopRequireDefault(require(\"@storybook/core-events\"));\n\nvar _clientLogger = require(\"@storybook/client-logger\");\n\nvar _hooks = require(\"./hooks\");\n\nvar _storySort = require(\"./storySort\");\n\nvar _parameters = require(\"./parameters\");\n\nvar _ensureArgTypes = require(\"./ensureArgTypes\");\n\nvar _inferArgTypes = require(\"./inferArgTypes\");\n\nvar _inferControls = require(\"./inferControls\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n        Story with id \", \" already exists in the store!\\n\\n        Perhaps you added the same story twice, or you have a name collision?\\n        Story ids need to be unique -- ensure you aren't using the same names modulo url-sanitization.\\n      \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nvar STORAGE_KEY = '@storybook/preview/store';\n\nvar isStoryDocsOnly = function isStoryDocsOnly(parameters) {\n  return parameters && parameters.docsOnly;\n};\n\nvar includeStory = function includeStory(story) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n    includeDocsOnly: false\n  };\n\n  if (options.includeDocsOnly) {\n    return true;\n  }\n\n  return !isStoryDocsOnly(story.parameters);\n};\n\nvar checkGlobals = function checkGlobals(parameters) {\n  var globals = parameters.globals,\n      globalTypes = parameters.globalTypes;\n\n  if (globals || globalTypes) {\n    _clientLogger.logger.error('Global args/argTypes can only be set globally', JSON.stringify({\n      globals: globals,\n      globalTypes: globalTypes\n    }));\n  }\n};\n\nvar checkStorySort = function checkStorySort(parameters) {\n  var options = parameters.options;\n  if (options === null || options === void 0 ? void 0 : options.storySort) _clientLogger.logger.error('The storySort option parameter can only be set globally');\n};\n\nvar toExtracted = function toExtracted(obj) {\n  return Object.entries(obj).reduce(function (acc, _ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        key = _ref2[0],\n        value = _ref2[1];\n\n    if (typeof value === 'function') {\n      return acc;\n    } // NOTE: We're serializing argTypes twice, at the top-level and also in parameters.\n    // We currently rely on useParameters in the manager, so strip out the top-level argTypes\n    // instead for performance.\n\n\n    if (['hooks', 'argTypes'].includes(key)) {\n      return acc;\n    }\n\n    if (Array.isArray(value)) {\n      return Object.assign(acc, _defineProperty({}, key, value.slice().sort()));\n    }\n\n    return Object.assign(acc, _defineProperty({}, key, value));\n  }, {});\n};\n\nvar StoryStore = /*#__PURE__*/function () {\n  // Keyed on kind name\n  // Keyed on storyId\n  function StoryStore(params) {\n    var _this = this,\n        _store$session$get;\n\n    _classCallCheck(this, StoryStore);\n\n    this._error = void 0;\n    this._channel = void 0;\n    this._configuring = void 0;\n    this._globals = void 0;\n    this._globalMetadata = void 0;\n    this._kinds = void 0;\n    this._stories = void 0;\n    this._argTypesEnhancers = void 0;\n    this._selectionSpecifier = void 0;\n    this._selection = void 0;\n\n    this.remove = function (id) {\n      var _ref3 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n          _ref3$allowUnsafe = _ref3.allowUnsafe,\n          allowUnsafe = _ref3$allowUnsafe === void 0 ? false : _ref3$allowUnsafe;\n\n      if (!_this._configuring && !allowUnsafe) throw new Error('Cannot remove a story when not configuring, see https://github.com/storybookjs/storybook/blob/next/MIGRATION.md#story-store-immutable-outside-of-configuration');\n      var _stories = _this._stories;\n      var story = _stories[id];\n      delete _stories[id];\n      if (story) story.hooks.clean();\n    };\n\n    this.fromId = function (id) {\n      try {\n        var data = _this._stories[id];\n\n        if (!data || !data.getDecorated) {\n          return null;\n        }\n\n        return _this.mergeAdditionalDataToStory(data);\n      } catch (e) {\n        _clientLogger.logger.warn('failed to get story:', _this._stories);\n\n        _clientLogger.logger.error(e);\n\n        return null;\n      }\n    };\n\n    this.setError = function (err) {\n      _this._error = err;\n    };\n\n    this.getError = function () {\n      return _this._error;\n    };\n\n    this.getSelection = function () {\n      return _this._selection;\n    };\n\n    this.getDataForManager = function () {\n      return {\n        v: 2,\n        globalParameters: _this._globalMetadata.parameters,\n        globals: _this._globals,\n        error: _this.getError(),\n        kindParameters: (0, _mapValues[\"default\"])(_this._kinds, function (metadata) {\n          return metadata.parameters;\n        }),\n        stories: _this.extract({\n          includeDocsOnly: true,\n          normalizeParameters: true\n        })\n      };\n    };\n\n    this.getStoriesJsonData = function () {\n      var value = _this.getDataForManager();\n\n      var allowed = ['fileName', 'docsOnly', 'framework', '__id', '__isArgsStory'];\n      return {\n        v: 2,\n        globalParameters: (0, _pick[\"default\"])(value.globalParameters, allowed),\n        kindParameters: (0, _mapValues[\"default\"])(value.kindParameters, function (v) {\n          return (0, _pick[\"default\"])(v, allowed);\n        }),\n        stories: (0, _mapValues[\"default\"])(value.stories, function (v) {\n          return Object.assign(Object.assign({}, (0, _pick[\"default\"])(v, ['id', 'name', 'kind', 'story'])), {}, {\n            parameters: (0, _pick[\"default\"])(v.parameters, allowed)\n          });\n        })\n      };\n    };\n\n    this.pushToManager = function () {\n      if (_this._channel) {\n        // send to the parent frame.\n        _this._channel.emit(_coreEvents[\"default\"].SET_STORIES, _this.getDataForManager());\n      }\n    };\n\n    this.getStoriesForKind = function (kind) {\n      return _this.raw().filter(function (story) {\n        return story.kind === kind;\n      });\n    }; // Assume we are configuring until we hear otherwise\n\n\n    this._configuring = true; // We store global args in session storage. Note that when we finish\n    // configuring below we will ensure we only use values here that make sense\n\n    this._globals = ((_store$session$get = _store[\"default\"].session.get(STORAGE_KEY)) === null || _store$session$get === void 0 ? void 0 : _store$session$get.globals) || {};\n    this._globalMetadata = {\n      parameters: {},\n      decorators: []\n    };\n    this._kinds = {};\n    this._stories = {};\n    this._argTypesEnhancers = [_ensureArgTypes.ensureArgTypes];\n    this._error = undefined;\n    this._channel = params.channel;\n    this.setupListeners();\n  }\n\n  _createClass(StoryStore, [{\n    key: \"setupListeners\",\n    value: function setupListeners() {\n      var _this2 = this; // Channel can be null in StoryShots\n\n\n      if (!this._channel) return;\n\n      this._channel.on(_coreEvents[\"default\"].SET_CURRENT_STORY, function (_ref4) {\n        var storyId = _ref4.storyId,\n            viewMode = _ref4.viewMode;\n        return _this2.setSelection({\n          storyId: storyId,\n          viewMode: viewMode\n        });\n      });\n\n      this._channel.on(_coreEvents[\"default\"].UPDATE_STORY_ARGS, function (_ref5) {\n        var storyId = _ref5.storyId,\n            updatedArgs = _ref5.updatedArgs;\n        return _this2.updateStoryArgs(storyId, updatedArgs);\n      });\n\n      this._channel.on(_coreEvents[\"default\"].RESET_STORY_ARGS, function (_ref6) {\n        var storyId = _ref6.storyId,\n            argNames = _ref6.argNames;\n        return _this2.resetStoryArgs(storyId, argNames);\n      });\n\n      this._channel.on(_coreEvents[\"default\"].UPDATE_GLOBALS, function (_ref7) {\n        var globals = _ref7.globals;\n        return _this2.updateGlobals(globals);\n      });\n    }\n  }, {\n    key: \"startConfiguring\",\n    value: function startConfiguring() {\n      this._configuring = true;\n    }\n  }, {\n    key: \"storeGlobals\",\n    value: function storeGlobals() {\n      // Store the global args on the session\n      _store[\"default\"].session.set(STORAGE_KEY, {\n        globals: this._globals\n      });\n    }\n  }, {\n    key: \"finishConfiguring\",\n    value: function finishConfiguring() {\n      this._configuring = false;\n      var _this$_globalMetadata = this._globalMetadata.parameters,\n          _this$_globalMetadata2 = _this$_globalMetadata.globals,\n          initialGlobals = _this$_globalMetadata2 === void 0 ? {} : _this$_globalMetadata2,\n          _this$_globalMetadata3 = _this$_globalMetadata.globalTypes,\n          globalTypes = _this$_globalMetadata3 === void 0 ? {} : _this$_globalMetadata3;\n      var defaultGlobals = Object.entries(globalTypes).reduce(function (acc, _ref8) {\n        var _ref9 = _slicedToArray(_ref8, 2),\n            arg = _ref9[0],\n            defaultValue = _ref9[1].defaultValue;\n\n        if (defaultValue) acc[arg] = defaultValue;\n        return acc;\n      }, {});\n      var allowedGlobals = new Set([].concat(_toConsumableArray(Object.keys(initialGlobals)), _toConsumableArray(Object.keys(globalTypes)))); // To deal with HMR & persistence, we consider the previous value of global args, and:\n      //   1. Remove any keys that are not in the new parameter\n      //   2. Preference any keys that were already set\n      //   3. Use any new keys from the new parameter\n\n      this._globals = Object.entries(this._globals || {}).reduce(function (acc, _ref10) {\n        var _ref11 = _slicedToArray(_ref10, 2),\n            key = _ref11[0],\n            previousValue = _ref11[1];\n\n        if (allowedGlobals.has(key)) acc[key] = previousValue;\n        return acc;\n      }, Object.assign(Object.assign({}, defaultGlobals), initialGlobals));\n      this.storeGlobals(); // Set the current selection based on the current selection specifier, if selection is not yet set\n\n      var stories = this.sortedStories();\n      var foundStory;\n\n      if (this._selectionSpecifier && !this._selection) {\n        var _this$_selectionSpeci = this._selectionSpecifier,\n            storySpecifier = _this$_selectionSpeci.storySpecifier,\n            viewMode = _this$_selectionSpeci.viewMode;\n\n        if (storySpecifier === '*') {\n          // '*' means select the first story. If there is none, we have no selection.\n          var _stories2 = _slicedToArray(stories, 1);\n\n          foundStory = _stories2[0];\n        } else if (typeof storySpecifier === 'string') {\n          // Find the story with the exact id that matches the specifier (see #11571)\n          foundStory = Object.values(stories).find(function (s) {\n            return s.id === storySpecifier;\n          });\n\n          if (!foundStory) {\n            // Fallback to the first story that starts with the specifier\n            foundStory = Object.values(stories).find(function (s) {\n              return s.id.startsWith(storySpecifier);\n            });\n          }\n        } else {\n          // Try and find a story matching the name/kind, setting no selection if they don't exist.\n          var name = storySpecifier.name,\n              kind = storySpecifier.kind;\n          foundStory = this.getRawStory(kind, name);\n        }\n\n        if (foundStory) {\n          this.setSelection({\n            storyId: foundStory.id,\n            viewMode: viewMode\n          });\n\n          this._channel.emit(_coreEvents[\"default\"].STORY_SPECIFIED, {\n            storyId: foundStory.id,\n            viewMode: viewMode\n          });\n        }\n      } // If we didn't find a story matching the specifier, we always want to emit CURRENT_STORY_WAS_SET anyway\n      // in order to tell the StoryRenderer to render something (a \"missing story\" view)\n\n\n      if (!foundStory && this._channel) {\n        this._channel.emit(_coreEvents[\"default\"].CURRENT_STORY_WAS_SET, this._selection);\n      }\n\n      this.pushToManager();\n    }\n  }, {\n    key: \"addGlobalMetadata\",\n    value: function addGlobalMetadata(_ref12) {\n      var _this3 = this;\n\n      var parameters = _ref12.parameters,\n          decorators = _ref12.decorators;\n\n      if (parameters) {\n        var args = parameters.args,\n            argTypes = parameters.argTypes;\n        if (args || argTypes) _clientLogger.logger.warn('Found args/argTypes in global parameters.', JSON.stringify({\n          args: args,\n          argTypes: argTypes\n        }));\n      }\n\n      var globalParameters = this._globalMetadata.parameters;\n      this._globalMetadata.parameters = (0, _parameters.combineParameters)(globalParameters, parameters);\n      decorators.forEach(function (decorator) {\n        if (_this3._globalMetadata.decorators.includes(decorator)) {\n          _clientLogger.logger.warn('You tried to add a duplicate decorator, this is not expected', decorator);\n        } else {\n          _this3._globalMetadata.decorators.push(decorator);\n        }\n      });\n    }\n  }, {\n    key: \"clearGlobalDecorators\",\n    value: function clearGlobalDecorators() {\n      this._globalMetadata.decorators = [];\n    }\n  }, {\n    key: \"ensureKind\",\n    value: function ensureKind(kind) {\n      if (!this._kinds[kind]) {\n        this._kinds[kind] = {\n          order: Object.keys(this._kinds).length,\n          parameters: {},\n          decorators: []\n        };\n      }\n    }\n  }, {\n    key: \"addKindMetadata\",\n    value: function addKindMetadata(kind, _ref13) {\n      var _this$_kinds$kind$dec;\n\n      var parameters = _ref13.parameters,\n          decorators = _ref13.decorators;\n      this.ensureKind(kind);\n\n      if (parameters) {\n        checkGlobals(parameters);\n        checkStorySort(parameters);\n      }\n\n      this._kinds[kind].parameters = (0, _parameters.combineParameters)(this._kinds[kind].parameters, parameters);\n\n      (_this$_kinds$kind$dec = this._kinds[kind].decorators).push.apply(_this$_kinds$kind$dec, _toConsumableArray(decorators));\n    }\n  }, {\n    key: \"addArgTypesEnhancer\",\n    value: function addArgTypesEnhancer(argTypesEnhancer) {\n      if (Object.keys(this._stories).length > 0) throw new Error('Cannot add a parameter enhancer to the store after a story has been added.');\n\n      this._argTypesEnhancers.push(argTypesEnhancer);\n    } // Combine the global, kind & story parameters of a story\n\n  }, {\n    key: \"combineStoryParameters\",\n    value: function combineStoryParameters(parameters, kind) {\n      return (0, _parameters.combineParameters)(this._globalMetadata.parameters, this._kinds[kind].parameters, parameters);\n    }\n  }, {\n    key: \"addStory\",\n    value: function addStory(_ref14, _ref15) {\n      var _this4 = this;\n\n      var id = _ref14.id,\n          kind = _ref14.kind,\n          name = _ref14.name,\n          original = _ref14.storyFn,\n          _ref14$parameters = _ref14.parameters,\n          storyParameters = _ref14$parameters === void 0 ? {} : _ref14$parameters,\n          _ref14$decorators = _ref14.decorators,\n          storyDecorators = _ref14$decorators === void 0 ? [] : _ref14$decorators;\n      var applyDecorators = _ref15.applyDecorators,\n          _ref15$allowUnsafe = _ref15.allowUnsafe,\n          allowUnsafe = _ref15$allowUnsafe === void 0 ? false : _ref15$allowUnsafe;\n      if (!this._configuring && !allowUnsafe) throw new Error('Cannot add a story when not configuring, see https://github.com/storybookjs/storybook/blob/next/MIGRATION.md#story-store-immutable-outside-of-configuration');\n\n      if (storyParameters) {\n        checkGlobals(storyParameters);\n        checkStorySort(storyParameters);\n      }\n\n      var _stories = this._stories;\n\n      if (_stories[id]) {\n        _clientLogger.logger.warn((0, _tsDedent[\"default\"])(_templateObject(), id));\n      }\n\n      var identification = {\n        id: id,\n        kind: kind,\n        name: name,\n        story: name // legacy\n\n      }; // immutable original storyFn\n\n      var getOriginal = function getOriginal() {\n        return original;\n      };\n\n      this.ensureKind(kind);\n      var kindMetadata = this._kinds[kind];\n      var decorators = [].concat(_toConsumableArray(storyDecorators), _toConsumableArray(kindMetadata.decorators), _toConsumableArray(this._globalMetadata.decorators));\n\n      var finalStoryFn = function finalStoryFn(context) {\n        var _context$parameters$p = context.parameters.passArgsFirst,\n            passArgsFirst = _context$parameters$p === void 0 ? true : _context$parameters$p;\n        return passArgsFirst ? original(context.args, context) : original(context);\n      }; // lazily decorate the story when it's loaded\n\n\n      var getDecorated = (0, _memoizerific[\"default\"])(1)(function () {\n        return applyDecorators(finalStoryFn, decorators);\n      });\n      var hooks = new _hooks.HooksContext(); // We need the combined parameters now in order to calculate argTypes, but we won't keep them\n\n      var combinedParameters = this.combineStoryParameters(storyParameters, kind); // We are going to make various UI changes in both the manager and the preview\n      // based on whether it's an \"args story\", i.e. whether the story accepts a first\n      // argument which is an `Args` object. Here we store it as a parameter on every story\n      // for convenience, but we preface it with `__` to denote that it's an internal API\n      // and that users probably shouldn't look at it.\n\n      var _combinedParameters$p = combinedParameters.passArgsFirst,\n          passArgsFirst = _combinedParameters$p === void 0 ? true : _combinedParameters$p;\n\n      var __isArgsStory = passArgsFirst && original.length > 0; // run at the end\n\n\n      this._argTypesEnhancers.push(_inferArgTypes.inferArgTypes);\n\n      this._argTypesEnhancers.push(_inferControls.inferControls);\n\n      var _this$_argTypesEnhanc = this._argTypesEnhancers.reduce(function (accumulatedParameters, enhancer) {\n        return Object.assign(Object.assign({}, accumulatedParameters), {}, {\n          argTypes: enhancer(Object.assign(Object.assign({}, identification), {}, {\n            storyFn: original,\n            parameters: accumulatedParameters,\n            args: {},\n            argTypes: {},\n            globals: {}\n          }))\n        });\n      }, Object.assign({\n        __isArgsStory: __isArgsStory\n      }, combinedParameters)),\n          _this$_argTypesEnhanc2 = _this$_argTypesEnhanc.argTypes,\n          argTypes = _this$_argTypesEnhanc2 === void 0 ? {} : _this$_argTypesEnhanc2;\n\n      var storyParametersWithArgTypes = Object.assign(Object.assign({}, storyParameters), {}, {\n        argTypes: argTypes,\n        __isArgsStory: __isArgsStory\n      });\n\n      var storyFn = function storyFn(runtimeContext) {\n        return getDecorated()(Object.assign(Object.assign(Object.assign({}, identification), runtimeContext), {}, {\n          // Calculate \"combined\" parameters at render time (NOTE: for perf we could just use combinedParameters from above?)\n          parameters: _this4.combineStoryParameters(storyParametersWithArgTypes, kind),\n          hooks: hooks,\n          args: _stories[id].args,\n          argTypes: argTypes,\n          globals: _this4._globals\n        }));\n      }; // Pull out parameters.args.$ || .argTypes.$.defaultValue into initialArgs\n\n\n      var passedArgs = combinedParameters.args;\n      var defaultArgs = Object.entries(argTypes).reduce(function (acc, _ref16) {\n        var _ref17 = _slicedToArray(_ref16, 2),\n            arg = _ref17[0],\n            defaultValue = _ref17[1].defaultValue;\n\n        if (defaultValue) acc[arg] = defaultValue;\n        return acc;\n      }, {});\n      var initialArgs = Object.assign(Object.assign({}, defaultArgs), passedArgs);\n      _stories[id] = Object.assign(Object.assign({}, identification), {}, {\n        hooks: hooks,\n        getDecorated: getDecorated,\n        getOriginal: getOriginal,\n        storyFn: storyFn,\n        parameters: storyParametersWithArgTypes,\n        args: initialArgs,\n        argTypes: argTypes,\n        initialArgs: initialArgs\n      });\n    }\n  }, {\n    key: \"removeStoryKind\",\n    value: function removeStoryKind(kind) {\n      var _ref18 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n          _ref18$allowUnsafe = _ref18.allowUnsafe,\n          allowUnsafe = _ref18$allowUnsafe === void 0 ? false : _ref18$allowUnsafe;\n\n      if (!this._configuring && !allowUnsafe) throw new Error('Cannot remove a kind when not configuring, see https://github.com/storybookjs/storybook/blob/next/MIGRATION.md#story-store-immutable-outside-of-configuration');\n      if (!this._kinds[kind]) return;\n      this._kinds[kind].parameters = {};\n      this._kinds[kind].decorators = [];\n      this.cleanHooksForKind(kind);\n      this._stories = Object.entries(this._stories).reduce(function (acc, _ref19) {\n        var _ref20 = _slicedToArray(_ref19, 2),\n            id = _ref20[0],\n            story = _ref20[1];\n\n        if (story.kind !== kind) acc[id] = story;\n        return acc;\n      }, {});\n    }\n  }, {\n    key: \"updateGlobals\",\n    value: function updateGlobals(newGlobals) {\n      this._globals = Object.assign(Object.assign({}, this._globals), newGlobals);\n      this.storeGlobals();\n\n      this._channel.emit(_coreEvents[\"default\"].GLOBALS_UPDATED, {\n        globals: this._globals\n      });\n    }\n  }, {\n    key: \"updateStoryArgs\",\n    value: function updateStoryArgs(id, newArgs) {\n      if (!this._stories[id]) throw new Error(\"No story for id \".concat(id));\n      var args = this._stories[id].args;\n      this._stories[id].args = Object.assign(Object.assign({}, args), newArgs);\n\n      this._channel.emit(_coreEvents[\"default\"].STORY_ARGS_UPDATED, {\n        storyId: id,\n        args: this._stories[id].args\n      });\n    }\n  }, {\n    key: \"resetStoryArgs\",\n    value: function resetStoryArgs(id, argNames) {\n      var _this5 = this;\n\n      if (!this._stories[id]) throw new Error(\"No story for id \".concat(id));\n      var _this$_stories$id = this._stories[id],\n          args = _this$_stories$id.args,\n          initialArgs = _this$_stories$id.initialArgs;\n      this._stories[id].args = Object.assign({}, args); // Make a copy to avoid problems\n\n      (argNames || Object.keys(args)).forEach(function (name) {\n        // We overwrite like this to ensure we can reset to falsey values\n        _this5._stories[id].args[name] = initialArgs[name];\n      });\n\n      this._channel.emit(_coreEvents[\"default\"].STORY_ARGS_UPDATED, {\n        storyId: id,\n        args: this._stories[id].args\n      });\n    }\n  }, {\n    key: \"raw\",\n    value: function raw(options) {\n      var _this6 = this;\n\n      return Object.values(this._stories).filter(function (i) {\n        return !!i.getDecorated;\n      }).filter(function (i) {\n        return includeStory(i, options);\n      }).map(function (i) {\n        return _this6.mergeAdditionalDataToStory(i);\n      });\n    }\n  }, {\n    key: \"sortedStories\",\n    value: function sortedStories() {\n      var _this$_globalMetadata4,\n          _this$_globalMetadata5,\n          _this7 = this; // NOTE: when kinds are HMR'ed they get temporarily removed from the `_stories` array\n      // and thus lose order. However `_kinds[x].order` preservers the original load order\n\n\n      var kindOrder = (0, _mapValues[\"default\"])(this._kinds, function (_ref21) {\n        var order = _ref21.order;\n        return order;\n      });\n      var storySortParameter = (_this$_globalMetadata4 = this._globalMetadata.parameters) === null || _this$_globalMetadata4 === void 0 ? void 0 : (_this$_globalMetadata5 = _this$_globalMetadata4.options) === null || _this$_globalMetadata5 === void 0 ? void 0 : _this$_globalMetadata5.storySort;\n      var storyEntries = Object.entries(this._stories); // Add the kind parameters and global parameters to each entry\n\n      var stories = storyEntries.map(function (_ref22) {\n        var _ref23 = _slicedToArray(_ref22, 2),\n            id = _ref23[0],\n            story = _ref23[1];\n\n        return [id, story, _this7._kinds[story.kind].parameters, _this7._globalMetadata.parameters];\n      });\n\n      if (storySortParameter) {\n        var sortFn;\n\n        if (typeof storySortParameter === 'function') {\n          sortFn = storySortParameter;\n        } else {\n          sortFn = (0, _storySort.storySort)(storySortParameter);\n        }\n\n        _stable[\"default\"].inplace(stories, sortFn);\n      } else {\n        _stable[\"default\"].inplace(stories, function (s1, s2) {\n          return kindOrder[s1[1].kind] - kindOrder[s2[1].kind];\n        });\n      }\n\n      return stories.map(function (_ref24) {\n        var _ref25 = _slicedToArray(_ref24, 2),\n            id = _ref25[0],\n            s = _ref25[1];\n\n        return s;\n      });\n    }\n  }, {\n    key: \"extract\",\n    value: function extract() {\n      var _this8 = this;\n\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var stories = this.sortedStories(); // removes function values from all stories so they are safe to transport over the channel\n\n      return stories.reduce(function (acc, story) {\n        if (!includeStory(story, options)) return acc;\n        var extracted = toExtracted(story);\n        if (options.normalizeParameters) return Object.assign(acc, _defineProperty({}, story.id, extracted));\n        var _ref26 = extracted,\n            parameters = _ref26.parameters,\n            kind = _ref26.kind;\n        return Object.assign(acc, _defineProperty({}, story.id, Object.assign(extracted, {\n          parameters: _this8.combineStoryParameters(parameters, kind)\n        })));\n      }, {});\n    }\n  }, {\n    key: \"clearError\",\n    value: function clearError() {\n      this._error = null;\n    }\n  }, {\n    key: \"setSelectionSpecifier\",\n    value: function setSelectionSpecifier(selectionSpecifier) {\n      this._selectionSpecifier = selectionSpecifier;\n    }\n  }, {\n    key: \"setSelection\",\n    value: function setSelection(selection) {\n      this._selection = selection;\n\n      if (this._channel) {\n        this._channel.emit(_coreEvents[\"default\"].CURRENT_STORY_WAS_SET, this._selection);\n      }\n    }\n  }, {\n    key: \"getStoryKinds\",\n    value: function getStoryKinds() {\n      return Array.from(new Set(this.raw().map(function (s) {\n        return s.kind;\n      })));\n    }\n  }, {\n    key: \"getRawStory\",\n    value: function getRawStory(kind, name) {\n      return this.getStoriesForKind(kind).find(function (s) {\n        return s.name === name;\n      });\n    }\n  }, {\n    key: \"cleanHooks\",\n    value: function cleanHooks(id) {\n      if (this._stories[id]) {\n        this._stories[id].hooks.clean();\n      }\n    }\n  }, {\n    key: \"cleanHooksForKind\",\n    value: function cleanHooksForKind(kind) {\n      var _this9 = this;\n\n      this.getStoriesForKind(kind).map(function (story) {\n        return _this9.cleanHooks(story.id);\n      });\n    } // This API is a re-implementation of Storybook's original getStorybook() API.\n    // As such it may not behave *exactly* the same, but aims to. Some notes:\n    //  - It is *NOT* sorted by the user's sort function, but remains sorted in \"insertion order\"\n    //  - It does not include docs-only stories\n\n  }, {\n    key: \"getStorybook\",\n    value: function getStorybook() {\n      var _this10 = this;\n\n      return Object.values(this.raw().reduce(function (kinds, story) {\n        if (!includeStory(story)) return kinds;\n        var kind = story.kind,\n            name = story.name,\n            storyFn = story.storyFn,\n            fileName = story.parameters.fileName; // eslint-disable-next-line no-param-reassign\n\n        if (!kinds[kind]) kinds[kind] = {\n          kind: kind,\n          fileName: fileName,\n          stories: []\n        };\n        kinds[kind].stories.push({\n          name: name,\n          render: storyFn\n        });\n        return kinds;\n      }, {})).sort(function (s1, s2) {\n        return _this10._kinds[s1.kind].order - _this10._kinds[s2.kind].order;\n      });\n    }\n  }, {\n    key: \"mergeAdditionalDataToStory\",\n    value: function mergeAdditionalDataToStory(story) {\n      return Object.assign(Object.assign({}, story), {}, {\n        parameters: this.combineStoryParameters(story.parameters, story.kind),\n        globals: this._globals\n      });\n    }\n  }]);\n\n  return StoryStore;\n}();\n\nexports[\"default\"] = StoryStore;","map":{"version":3,"sources":["/home/daniel/Desktop/Estudio/Proyectos/mascaraSimex/mascara/client/node_modules/@storybook/client-api/dist/story_store.js"],"names":["Object","defineProperty","exports","value","_memoizerific","_interopRequireDefault","require","_tsDedent","_stable","_mapValues","_pick","_store","_coreEvents","_clientLogger","_hooks","_storySort","_parameters","_ensureArgTypes","_inferArgTypes","_inferControls","obj","__esModule","_templateObject","data","_taggedTemplateLiteral","strings","raw","slice","freeze","defineProperties","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","TypeError","iter","Symbol","iterator","Array","from","isArray","_arrayLikeToArray","_classCallCheck","instance","Constructor","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","_createClass","protoProps","staticProps","prototype","_defineProperty","_slicedToArray","_arrayWithHoles","_iterableToArrayLimit","_nonIterableRest","o","minLen","n","toString","call","constructor","name","test","len","arr2","_arr","_n","_d","_e","undefined","_i","_s","next","done","push","err","STORAGE_KEY","isStoryDocsOnly","parameters","docsOnly","includeStory","story","options","arguments","includeDocsOnly","checkGlobals","globals","globalTypes","logger","error","JSON","stringify","checkStorySort","storySort","toExtracted","entries","reduce","acc","_ref","_ref2","includes","assign","sort","StoryStore","params","_this","_store$session$get","_error","_channel","_configuring","_globals","_globalMetadata","_kinds","_stories","_argTypesEnhancers","_selectionSpecifier","_selection","remove","id","_ref3","_ref3$allowUnsafe","allowUnsafe","Error","hooks","clean","fromId","getDecorated","mergeAdditionalDataToStory","e","warn","setError","getError","getSelection","getDataForManager","v","globalParameters","kindParameters","metadata","stories","extract","normalizeParameters","getStoriesJsonData","allowed","pushToManager","emit","SET_STORIES","getStoriesForKind","kind","filter","session","get","decorators","ensureArgTypes","channel","setupListeners","_this2","on","SET_CURRENT_STORY","_ref4","storyId","viewMode","setSelection","UPDATE_STORY_ARGS","_ref5","updatedArgs","updateStoryArgs","RESET_STORY_ARGS","_ref6","argNames","resetStoryArgs","UPDATE_GLOBALS","_ref7","updateGlobals","startConfiguring","storeGlobals","set","finishConfiguring","_this$_globalMetadata","_this$_globalMetadata2","initialGlobals","_this$_globalMetadata3","defaultGlobals","_ref8","_ref9","arg","defaultValue","allowedGlobals","Set","concat","keys","_ref10","_ref11","previousValue","has","sortedStories","foundStory","_this$_selectionSpeci","storySpecifier","_stories2","values","find","s","startsWith","getRawStory","STORY_SPECIFIED","CURRENT_STORY_WAS_SET","addGlobalMetadata","_ref12","_this3","args","argTypes","combineParameters","forEach","decorator","clearGlobalDecorators","ensureKind","order","addKindMetadata","_ref13","_this$_kinds$kind$dec","apply","addArgTypesEnhancer","argTypesEnhancer","combineStoryParameters","addStory","_ref14","_ref15","_this4","original","storyFn","_ref14$parameters","storyParameters","_ref14$decorators","storyDecorators","applyDecorators","_ref15$allowUnsafe","identification","getOriginal","kindMetadata","finalStoryFn","context","_context$parameters$p","passArgsFirst","HooksContext","combinedParameters","_combinedParameters$p","__isArgsStory","inferArgTypes","inferControls","_this$_argTypesEnhanc","accumulatedParameters","enhancer","_this$_argTypesEnhanc2","storyParametersWithArgTypes","runtimeContext","passedArgs","defaultArgs","_ref16","_ref17","initialArgs","removeStoryKind","_ref18","_ref18$allowUnsafe","cleanHooksForKind","_ref19","_ref20","newGlobals","GLOBALS_UPDATED","newArgs","STORY_ARGS_UPDATED","_this5","_this$_stories$id","_this6","map","_this$_globalMetadata4","_this$_globalMetadata5","_this7","kindOrder","_ref21","storySortParameter","storyEntries","_ref22","_ref23","sortFn","inplace","s1","s2","_ref24","_ref25","_this8","extracted","_ref26","clearError","setSelectionSpecifier","selectionSpecifier","selection","getStoryKinds","cleanHooks","_this9","getStorybook","_this10","kinds","fileName","render"],"mappings":"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","sourcesContent":["\"use strict\";\n\nrequire(\"core-js/modules/es.symbol\");\n\nrequire(\"core-js/modules/es.symbol.description\");\n\nrequire(\"core-js/modules/es.symbol.iterator\");\n\nrequire(\"core-js/modules/es.array.concat\");\n\nrequire(\"core-js/modules/es.array.filter\");\n\nrequire(\"core-js/modules/es.array.find\");\n\nrequire(\"core-js/modules/es.array.for-each\");\n\nrequire(\"core-js/modules/es.array.from\");\n\nrequire(\"core-js/modules/es.array.includes\");\n\nrequire(\"core-js/modules/es.array.is-array\");\n\nrequire(\"core-js/modules/es.array.iterator\");\n\nrequire(\"core-js/modules/es.array.map\");\n\nrequire(\"core-js/modules/es.array.reduce\");\n\nrequire(\"core-js/modules/es.array.slice\");\n\nrequire(\"core-js/modules/es.array.sort\");\n\nrequire(\"core-js/modules/es.date.to-string\");\n\nrequire(\"core-js/modules/es.function.name\");\n\nrequire(\"core-js/modules/es.object.assign\");\n\nrequire(\"core-js/modules/es.object.define-properties\");\n\nrequire(\"core-js/modules/es.object.define-property\");\n\nrequire(\"core-js/modules/es.object.entries\");\n\nrequire(\"core-js/modules/es.object.freeze\");\n\nrequire(\"core-js/modules/es.object.keys\");\n\nrequire(\"core-js/modules/es.object.to-string\");\n\nrequire(\"core-js/modules/es.object.values\");\n\nrequire(\"core-js/modules/es.regexp.to-string\");\n\nrequire(\"core-js/modules/es.set\");\n\nrequire(\"core-js/modules/es.string.includes\");\n\nrequire(\"core-js/modules/es.string.iterator\");\n\nrequire(\"core-js/modules/es.string.starts-with\");\n\nrequire(\"core-js/modules/web.dom-collections.for-each\");\n\nrequire(\"core-js/modules/web.dom-collections.iterator\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _memoizerific = _interopRequireDefault(require(\"memoizerific\"));\n\nvar _tsDedent = _interopRequireDefault(require(\"ts-dedent\"));\n\nvar _stable = _interopRequireDefault(require(\"stable\"));\n\nvar _mapValues = _interopRequireDefault(require(\"lodash/mapValues\"));\n\nvar _pick = _interopRequireDefault(require(\"lodash/pick\"));\n\nvar _store = _interopRequireDefault(require(\"store2\"));\n\nvar _coreEvents = _interopRequireDefault(require(\"@storybook/core-events\"));\n\nvar _clientLogger = require(\"@storybook/client-logger\");\n\nvar _hooks = require(\"./hooks\");\n\nvar _storySort = require(\"./storySort\");\n\nvar _parameters = require(\"./parameters\");\n\nvar _ensureArgTypes = require(\"./ensureArgTypes\");\n\nvar _inferArgTypes = require(\"./inferArgTypes\");\n\nvar _inferControls = require(\"./inferControls\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n        Story with id \", \" already exists in the store!\\n\\n        Perhaps you added the same story twice, or you have a name collision?\\n        Story ids need to be unique -- ensure you aren't using the same names modulo url-sanitization.\\n      \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nvar STORAGE_KEY = '@storybook/preview/store';\n\nvar isStoryDocsOnly = function isStoryDocsOnly(parameters) {\n  return parameters && parameters.docsOnly;\n};\n\nvar includeStory = function includeStory(story) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n    includeDocsOnly: false\n  };\n\n  if (options.includeDocsOnly) {\n    return true;\n  }\n\n  return !isStoryDocsOnly(story.parameters);\n};\n\nvar checkGlobals = function checkGlobals(parameters) {\n  var globals = parameters.globals,\n      globalTypes = parameters.globalTypes;\n\n  if (globals || globalTypes) {\n    _clientLogger.logger.error('Global args/argTypes can only be set globally', JSON.stringify({\n      globals: globals,\n      globalTypes: globalTypes\n    }));\n  }\n};\n\nvar checkStorySort = function checkStorySort(parameters) {\n  var options = parameters.options;\n  if (options === null || options === void 0 ? void 0 : options.storySort) _clientLogger.logger.error('The storySort option parameter can only be set globally');\n};\n\nvar toExtracted = function toExtracted(obj) {\n  return Object.entries(obj).reduce(function (acc, _ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        key = _ref2[0],\n        value = _ref2[1];\n\n    if (typeof value === 'function') {\n      return acc;\n    } // NOTE: We're serializing argTypes twice, at the top-level and also in parameters.\n    // We currently rely on useParameters in the manager, so strip out the top-level argTypes\n    // instead for performance.\n\n\n    if (['hooks', 'argTypes'].includes(key)) {\n      return acc;\n    }\n\n    if (Array.isArray(value)) {\n      return Object.assign(acc, _defineProperty({}, key, value.slice().sort()));\n    }\n\n    return Object.assign(acc, _defineProperty({}, key, value));\n  }, {});\n};\n\nvar StoryStore = /*#__PURE__*/function () {\n  // Keyed on kind name\n  // Keyed on storyId\n  function StoryStore(params) {\n    var _this = this,\n        _store$session$get;\n\n    _classCallCheck(this, StoryStore);\n\n    this._error = void 0;\n    this._channel = void 0;\n    this._configuring = void 0;\n    this._globals = void 0;\n    this._globalMetadata = void 0;\n    this._kinds = void 0;\n    this._stories = void 0;\n    this._argTypesEnhancers = void 0;\n    this._selectionSpecifier = void 0;\n    this._selection = void 0;\n\n    this.remove = function (id) {\n      var _ref3 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n          _ref3$allowUnsafe = _ref3.allowUnsafe,\n          allowUnsafe = _ref3$allowUnsafe === void 0 ? false : _ref3$allowUnsafe;\n\n      if (!_this._configuring && !allowUnsafe) throw new Error('Cannot remove a story when not configuring, see https://github.com/storybookjs/storybook/blob/next/MIGRATION.md#story-store-immutable-outside-of-configuration');\n      var _stories = _this._stories;\n      var story = _stories[id];\n      delete _stories[id];\n      if (story) story.hooks.clean();\n    };\n\n    this.fromId = function (id) {\n      try {\n        var data = _this._stories[id];\n\n        if (!data || !data.getDecorated) {\n          return null;\n        }\n\n        return _this.mergeAdditionalDataToStory(data);\n      } catch (e) {\n        _clientLogger.logger.warn('failed to get story:', _this._stories);\n\n        _clientLogger.logger.error(e);\n\n        return null;\n      }\n    };\n\n    this.setError = function (err) {\n      _this._error = err;\n    };\n\n    this.getError = function () {\n      return _this._error;\n    };\n\n    this.getSelection = function () {\n      return _this._selection;\n    };\n\n    this.getDataForManager = function () {\n      return {\n        v: 2,\n        globalParameters: _this._globalMetadata.parameters,\n        globals: _this._globals,\n        error: _this.getError(),\n        kindParameters: (0, _mapValues[\"default\"])(_this._kinds, function (metadata) {\n          return metadata.parameters;\n        }),\n        stories: _this.extract({\n          includeDocsOnly: true,\n          normalizeParameters: true\n        })\n      };\n    };\n\n    this.getStoriesJsonData = function () {\n      var value = _this.getDataForManager();\n\n      var allowed = ['fileName', 'docsOnly', 'framework', '__id', '__isArgsStory'];\n      return {\n        v: 2,\n        globalParameters: (0, _pick[\"default\"])(value.globalParameters, allowed),\n        kindParameters: (0, _mapValues[\"default\"])(value.kindParameters, function (v) {\n          return (0, _pick[\"default\"])(v, allowed);\n        }),\n        stories: (0, _mapValues[\"default\"])(value.stories, function (v) {\n          return Object.assign(Object.assign({}, (0, _pick[\"default\"])(v, ['id', 'name', 'kind', 'story'])), {}, {\n            parameters: (0, _pick[\"default\"])(v.parameters, allowed)\n          });\n        })\n      };\n    };\n\n    this.pushToManager = function () {\n      if (_this._channel) {\n        // send to the parent frame.\n        _this._channel.emit(_coreEvents[\"default\"].SET_STORIES, _this.getDataForManager());\n      }\n    };\n\n    this.getStoriesForKind = function (kind) {\n      return _this.raw().filter(function (story) {\n        return story.kind === kind;\n      });\n    };\n\n    // Assume we are configuring until we hear otherwise\n    this._configuring = true; // We store global args in session storage. Note that when we finish\n    // configuring below we will ensure we only use values here that make sense\n\n    this._globals = ((_store$session$get = _store[\"default\"].session.get(STORAGE_KEY)) === null || _store$session$get === void 0 ? void 0 : _store$session$get.globals) || {};\n    this._globalMetadata = {\n      parameters: {},\n      decorators: []\n    };\n    this._kinds = {};\n    this._stories = {};\n    this._argTypesEnhancers = [_ensureArgTypes.ensureArgTypes];\n    this._error = undefined;\n    this._channel = params.channel;\n    this.setupListeners();\n  }\n\n  _createClass(StoryStore, [{\n    key: \"setupListeners\",\n    value: function setupListeners() {\n      var _this2 = this;\n\n      // Channel can be null in StoryShots\n      if (!this._channel) return;\n\n      this._channel.on(_coreEvents[\"default\"].SET_CURRENT_STORY, function (_ref4) {\n        var storyId = _ref4.storyId,\n            viewMode = _ref4.viewMode;\n        return _this2.setSelection({\n          storyId: storyId,\n          viewMode: viewMode\n        });\n      });\n\n      this._channel.on(_coreEvents[\"default\"].UPDATE_STORY_ARGS, function (_ref5) {\n        var storyId = _ref5.storyId,\n            updatedArgs = _ref5.updatedArgs;\n        return _this2.updateStoryArgs(storyId, updatedArgs);\n      });\n\n      this._channel.on(_coreEvents[\"default\"].RESET_STORY_ARGS, function (_ref6) {\n        var storyId = _ref6.storyId,\n            argNames = _ref6.argNames;\n        return _this2.resetStoryArgs(storyId, argNames);\n      });\n\n      this._channel.on(_coreEvents[\"default\"].UPDATE_GLOBALS, function (_ref7) {\n        var globals = _ref7.globals;\n        return _this2.updateGlobals(globals);\n      });\n    }\n  }, {\n    key: \"startConfiguring\",\n    value: function startConfiguring() {\n      this._configuring = true;\n    }\n  }, {\n    key: \"storeGlobals\",\n    value: function storeGlobals() {\n      // Store the global args on the session\n      _store[\"default\"].session.set(STORAGE_KEY, {\n        globals: this._globals\n      });\n    }\n  }, {\n    key: \"finishConfiguring\",\n    value: function finishConfiguring() {\n      this._configuring = false;\n      var _this$_globalMetadata = this._globalMetadata.parameters,\n          _this$_globalMetadata2 = _this$_globalMetadata.globals,\n          initialGlobals = _this$_globalMetadata2 === void 0 ? {} : _this$_globalMetadata2,\n          _this$_globalMetadata3 = _this$_globalMetadata.globalTypes,\n          globalTypes = _this$_globalMetadata3 === void 0 ? {} : _this$_globalMetadata3;\n      var defaultGlobals = Object.entries(globalTypes).reduce(function (acc, _ref8) {\n        var _ref9 = _slicedToArray(_ref8, 2),\n            arg = _ref9[0],\n            defaultValue = _ref9[1].defaultValue;\n\n        if (defaultValue) acc[arg] = defaultValue;\n        return acc;\n      }, {});\n      var allowedGlobals = new Set([].concat(_toConsumableArray(Object.keys(initialGlobals)), _toConsumableArray(Object.keys(globalTypes)))); // To deal with HMR & persistence, we consider the previous value of global args, and:\n      //   1. Remove any keys that are not in the new parameter\n      //   2. Preference any keys that were already set\n      //   3. Use any new keys from the new parameter\n\n      this._globals = Object.entries(this._globals || {}).reduce(function (acc, _ref10) {\n        var _ref11 = _slicedToArray(_ref10, 2),\n            key = _ref11[0],\n            previousValue = _ref11[1];\n\n        if (allowedGlobals.has(key)) acc[key] = previousValue;\n        return acc;\n      }, Object.assign(Object.assign({}, defaultGlobals), initialGlobals));\n      this.storeGlobals(); // Set the current selection based on the current selection specifier, if selection is not yet set\n\n      var stories = this.sortedStories();\n      var foundStory;\n\n      if (this._selectionSpecifier && !this._selection) {\n        var _this$_selectionSpeci = this._selectionSpecifier,\n            storySpecifier = _this$_selectionSpeci.storySpecifier,\n            viewMode = _this$_selectionSpeci.viewMode;\n\n        if (storySpecifier === '*') {\n          // '*' means select the first story. If there is none, we have no selection.\n          var _stories2 = _slicedToArray(stories, 1);\n\n          foundStory = _stories2[0];\n        } else if (typeof storySpecifier === 'string') {\n          // Find the story with the exact id that matches the specifier (see #11571)\n          foundStory = Object.values(stories).find(function (s) {\n            return s.id === storySpecifier;\n          });\n\n          if (!foundStory) {\n            // Fallback to the first story that starts with the specifier\n            foundStory = Object.values(stories).find(function (s) {\n              return s.id.startsWith(storySpecifier);\n            });\n          }\n        } else {\n          // Try and find a story matching the name/kind, setting no selection if they don't exist.\n          var name = storySpecifier.name,\n              kind = storySpecifier.kind;\n          foundStory = this.getRawStory(kind, name);\n        }\n\n        if (foundStory) {\n          this.setSelection({\n            storyId: foundStory.id,\n            viewMode: viewMode\n          });\n\n          this._channel.emit(_coreEvents[\"default\"].STORY_SPECIFIED, {\n            storyId: foundStory.id,\n            viewMode: viewMode\n          });\n        }\n      } // If we didn't find a story matching the specifier, we always want to emit CURRENT_STORY_WAS_SET anyway\n      // in order to tell the StoryRenderer to render something (a \"missing story\" view)\n\n\n      if (!foundStory && this._channel) {\n        this._channel.emit(_coreEvents[\"default\"].CURRENT_STORY_WAS_SET, this._selection);\n      }\n\n      this.pushToManager();\n    }\n  }, {\n    key: \"addGlobalMetadata\",\n    value: function addGlobalMetadata(_ref12) {\n      var _this3 = this;\n\n      var parameters = _ref12.parameters,\n          decorators = _ref12.decorators;\n\n      if (parameters) {\n        var args = parameters.args,\n            argTypes = parameters.argTypes;\n        if (args || argTypes) _clientLogger.logger.warn('Found args/argTypes in global parameters.', JSON.stringify({\n          args: args,\n          argTypes: argTypes\n        }));\n      }\n\n      var globalParameters = this._globalMetadata.parameters;\n      this._globalMetadata.parameters = (0, _parameters.combineParameters)(globalParameters, parameters);\n      decorators.forEach(function (decorator) {\n        if (_this3._globalMetadata.decorators.includes(decorator)) {\n          _clientLogger.logger.warn('You tried to add a duplicate decorator, this is not expected', decorator);\n        } else {\n          _this3._globalMetadata.decorators.push(decorator);\n        }\n      });\n    }\n  }, {\n    key: \"clearGlobalDecorators\",\n    value: function clearGlobalDecorators() {\n      this._globalMetadata.decorators = [];\n    }\n  }, {\n    key: \"ensureKind\",\n    value: function ensureKind(kind) {\n      if (!this._kinds[kind]) {\n        this._kinds[kind] = {\n          order: Object.keys(this._kinds).length,\n          parameters: {},\n          decorators: []\n        };\n      }\n    }\n  }, {\n    key: \"addKindMetadata\",\n    value: function addKindMetadata(kind, _ref13) {\n      var _this$_kinds$kind$dec;\n\n      var parameters = _ref13.parameters,\n          decorators = _ref13.decorators;\n      this.ensureKind(kind);\n\n      if (parameters) {\n        checkGlobals(parameters);\n        checkStorySort(parameters);\n      }\n\n      this._kinds[kind].parameters = (0, _parameters.combineParameters)(this._kinds[kind].parameters, parameters);\n\n      (_this$_kinds$kind$dec = this._kinds[kind].decorators).push.apply(_this$_kinds$kind$dec, _toConsumableArray(decorators));\n    }\n  }, {\n    key: \"addArgTypesEnhancer\",\n    value: function addArgTypesEnhancer(argTypesEnhancer) {\n      if (Object.keys(this._stories).length > 0) throw new Error('Cannot add a parameter enhancer to the store after a story has been added.');\n\n      this._argTypesEnhancers.push(argTypesEnhancer);\n    } // Combine the global, kind & story parameters of a story\n\n  }, {\n    key: \"combineStoryParameters\",\n    value: function combineStoryParameters(parameters, kind) {\n      return (0, _parameters.combineParameters)(this._globalMetadata.parameters, this._kinds[kind].parameters, parameters);\n    }\n  }, {\n    key: \"addStory\",\n    value: function addStory(_ref14, _ref15) {\n      var _this4 = this;\n\n      var id = _ref14.id,\n          kind = _ref14.kind,\n          name = _ref14.name,\n          original = _ref14.storyFn,\n          _ref14$parameters = _ref14.parameters,\n          storyParameters = _ref14$parameters === void 0 ? {} : _ref14$parameters,\n          _ref14$decorators = _ref14.decorators,\n          storyDecorators = _ref14$decorators === void 0 ? [] : _ref14$decorators;\n      var applyDecorators = _ref15.applyDecorators,\n          _ref15$allowUnsafe = _ref15.allowUnsafe,\n          allowUnsafe = _ref15$allowUnsafe === void 0 ? false : _ref15$allowUnsafe;\n      if (!this._configuring && !allowUnsafe) throw new Error('Cannot add a story when not configuring, see https://github.com/storybookjs/storybook/blob/next/MIGRATION.md#story-store-immutable-outside-of-configuration');\n\n      if (storyParameters) {\n        checkGlobals(storyParameters);\n        checkStorySort(storyParameters);\n      }\n\n      var _stories = this._stories;\n\n      if (_stories[id]) {\n        _clientLogger.logger.warn((0, _tsDedent[\"default\"])(_templateObject(), id));\n      }\n\n      var identification = {\n        id: id,\n        kind: kind,\n        name: name,\n        story: name // legacy\n\n      }; // immutable original storyFn\n\n      var getOriginal = function getOriginal() {\n        return original;\n      };\n\n      this.ensureKind(kind);\n      var kindMetadata = this._kinds[kind];\n      var decorators = [].concat(_toConsumableArray(storyDecorators), _toConsumableArray(kindMetadata.decorators), _toConsumableArray(this._globalMetadata.decorators));\n\n      var finalStoryFn = function finalStoryFn(context) {\n        var _context$parameters$p = context.parameters.passArgsFirst,\n            passArgsFirst = _context$parameters$p === void 0 ? true : _context$parameters$p;\n        return passArgsFirst ? original(context.args, context) : original(context);\n      }; // lazily decorate the story when it's loaded\n\n\n      var getDecorated = (0, _memoizerific[\"default\"])(1)(function () {\n        return applyDecorators(finalStoryFn, decorators);\n      });\n      var hooks = new _hooks.HooksContext(); // We need the combined parameters now in order to calculate argTypes, but we won't keep them\n\n      var combinedParameters = this.combineStoryParameters(storyParameters, kind); // We are going to make various UI changes in both the manager and the preview\n      // based on whether it's an \"args story\", i.e. whether the story accepts a first\n      // argument which is an `Args` object. Here we store it as a parameter on every story\n      // for convenience, but we preface it with `__` to denote that it's an internal API\n      // and that users probably shouldn't look at it.\n\n      var _combinedParameters$p = combinedParameters.passArgsFirst,\n          passArgsFirst = _combinedParameters$p === void 0 ? true : _combinedParameters$p;\n\n      var __isArgsStory = passArgsFirst && original.length > 0; // run at the end\n\n\n      this._argTypesEnhancers.push(_inferArgTypes.inferArgTypes);\n\n      this._argTypesEnhancers.push(_inferControls.inferControls);\n\n      var _this$_argTypesEnhanc = this._argTypesEnhancers.reduce(function (accumulatedParameters, enhancer) {\n        return Object.assign(Object.assign({}, accumulatedParameters), {}, {\n          argTypes: enhancer(Object.assign(Object.assign({}, identification), {}, {\n            storyFn: original,\n            parameters: accumulatedParameters,\n            args: {},\n            argTypes: {},\n            globals: {}\n          }))\n        });\n      }, Object.assign({\n        __isArgsStory: __isArgsStory\n      }, combinedParameters)),\n          _this$_argTypesEnhanc2 = _this$_argTypesEnhanc.argTypes,\n          argTypes = _this$_argTypesEnhanc2 === void 0 ? {} : _this$_argTypesEnhanc2;\n\n      var storyParametersWithArgTypes = Object.assign(Object.assign({}, storyParameters), {}, {\n        argTypes: argTypes,\n        __isArgsStory: __isArgsStory\n      });\n\n      var storyFn = function storyFn(runtimeContext) {\n        return getDecorated()(Object.assign(Object.assign(Object.assign({}, identification), runtimeContext), {}, {\n          // Calculate \"combined\" parameters at render time (NOTE: for perf we could just use combinedParameters from above?)\n          parameters: _this4.combineStoryParameters(storyParametersWithArgTypes, kind),\n          hooks: hooks,\n          args: _stories[id].args,\n          argTypes: argTypes,\n          globals: _this4._globals\n        }));\n      }; // Pull out parameters.args.$ || .argTypes.$.defaultValue into initialArgs\n\n\n      var passedArgs = combinedParameters.args;\n      var defaultArgs = Object.entries(argTypes).reduce(function (acc, _ref16) {\n        var _ref17 = _slicedToArray(_ref16, 2),\n            arg = _ref17[0],\n            defaultValue = _ref17[1].defaultValue;\n\n        if (defaultValue) acc[arg] = defaultValue;\n        return acc;\n      }, {});\n      var initialArgs = Object.assign(Object.assign({}, defaultArgs), passedArgs);\n      _stories[id] = Object.assign(Object.assign({}, identification), {}, {\n        hooks: hooks,\n        getDecorated: getDecorated,\n        getOriginal: getOriginal,\n        storyFn: storyFn,\n        parameters: storyParametersWithArgTypes,\n        args: initialArgs,\n        argTypes: argTypes,\n        initialArgs: initialArgs\n      });\n    }\n  }, {\n    key: \"removeStoryKind\",\n    value: function removeStoryKind(kind) {\n      var _ref18 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n          _ref18$allowUnsafe = _ref18.allowUnsafe,\n          allowUnsafe = _ref18$allowUnsafe === void 0 ? false : _ref18$allowUnsafe;\n\n      if (!this._configuring && !allowUnsafe) throw new Error('Cannot remove a kind when not configuring, see https://github.com/storybookjs/storybook/blob/next/MIGRATION.md#story-store-immutable-outside-of-configuration');\n      if (!this._kinds[kind]) return;\n      this._kinds[kind].parameters = {};\n      this._kinds[kind].decorators = [];\n      this.cleanHooksForKind(kind);\n      this._stories = Object.entries(this._stories).reduce(function (acc, _ref19) {\n        var _ref20 = _slicedToArray(_ref19, 2),\n            id = _ref20[0],\n            story = _ref20[1];\n\n        if (story.kind !== kind) acc[id] = story;\n        return acc;\n      }, {});\n    }\n  }, {\n    key: \"updateGlobals\",\n    value: function updateGlobals(newGlobals) {\n      this._globals = Object.assign(Object.assign({}, this._globals), newGlobals);\n      this.storeGlobals();\n\n      this._channel.emit(_coreEvents[\"default\"].GLOBALS_UPDATED, {\n        globals: this._globals\n      });\n    }\n  }, {\n    key: \"updateStoryArgs\",\n    value: function updateStoryArgs(id, newArgs) {\n      if (!this._stories[id]) throw new Error(\"No story for id \".concat(id));\n      var args = this._stories[id].args;\n      this._stories[id].args = Object.assign(Object.assign({}, args), newArgs);\n\n      this._channel.emit(_coreEvents[\"default\"].STORY_ARGS_UPDATED, {\n        storyId: id,\n        args: this._stories[id].args\n      });\n    }\n  }, {\n    key: \"resetStoryArgs\",\n    value: function resetStoryArgs(id, argNames) {\n      var _this5 = this;\n\n      if (!this._stories[id]) throw new Error(\"No story for id \".concat(id));\n      var _this$_stories$id = this._stories[id],\n          args = _this$_stories$id.args,\n          initialArgs = _this$_stories$id.initialArgs;\n      this._stories[id].args = Object.assign({}, args); // Make a copy to avoid problems\n\n      (argNames || Object.keys(args)).forEach(function (name) {\n        // We overwrite like this to ensure we can reset to falsey values\n        _this5._stories[id].args[name] = initialArgs[name];\n      });\n\n      this._channel.emit(_coreEvents[\"default\"].STORY_ARGS_UPDATED, {\n        storyId: id,\n        args: this._stories[id].args\n      });\n    }\n  }, {\n    key: \"raw\",\n    value: function raw(options) {\n      var _this6 = this;\n\n      return Object.values(this._stories).filter(function (i) {\n        return !!i.getDecorated;\n      }).filter(function (i) {\n        return includeStory(i, options);\n      }).map(function (i) {\n        return _this6.mergeAdditionalDataToStory(i);\n      });\n    }\n  }, {\n    key: \"sortedStories\",\n    value: function sortedStories() {\n      var _this$_globalMetadata4,\n          _this$_globalMetadata5,\n          _this7 = this;\n\n      // NOTE: when kinds are HMR'ed they get temporarily removed from the `_stories` array\n      // and thus lose order. However `_kinds[x].order` preservers the original load order\n      var kindOrder = (0, _mapValues[\"default\"])(this._kinds, function (_ref21) {\n        var order = _ref21.order;\n        return order;\n      });\n      var storySortParameter = (_this$_globalMetadata4 = this._globalMetadata.parameters) === null || _this$_globalMetadata4 === void 0 ? void 0 : (_this$_globalMetadata5 = _this$_globalMetadata4.options) === null || _this$_globalMetadata5 === void 0 ? void 0 : _this$_globalMetadata5.storySort;\n      var storyEntries = Object.entries(this._stories); // Add the kind parameters and global parameters to each entry\n\n      var stories = storyEntries.map(function (_ref22) {\n        var _ref23 = _slicedToArray(_ref22, 2),\n            id = _ref23[0],\n            story = _ref23[1];\n\n        return [id, story, _this7._kinds[story.kind].parameters, _this7._globalMetadata.parameters];\n      });\n\n      if (storySortParameter) {\n        var sortFn;\n\n        if (typeof storySortParameter === 'function') {\n          sortFn = storySortParameter;\n        } else {\n          sortFn = (0, _storySort.storySort)(storySortParameter);\n        }\n\n        _stable[\"default\"].inplace(stories, sortFn);\n      } else {\n        _stable[\"default\"].inplace(stories, function (s1, s2) {\n          return kindOrder[s1[1].kind] - kindOrder[s2[1].kind];\n        });\n      }\n\n      return stories.map(function (_ref24) {\n        var _ref25 = _slicedToArray(_ref24, 2),\n            id = _ref25[0],\n            s = _ref25[1];\n\n        return s;\n      });\n    }\n  }, {\n    key: \"extract\",\n    value: function extract() {\n      var _this8 = this;\n\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var stories = this.sortedStories(); // removes function values from all stories so they are safe to transport over the channel\n\n      return stories.reduce(function (acc, story) {\n        if (!includeStory(story, options)) return acc;\n        var extracted = toExtracted(story);\n        if (options.normalizeParameters) return Object.assign(acc, _defineProperty({}, story.id, extracted));\n        var _ref26 = extracted,\n            parameters = _ref26.parameters,\n            kind = _ref26.kind;\n        return Object.assign(acc, _defineProperty({}, story.id, Object.assign(extracted, {\n          parameters: _this8.combineStoryParameters(parameters, kind)\n        })));\n      }, {});\n    }\n  }, {\n    key: \"clearError\",\n    value: function clearError() {\n      this._error = null;\n    }\n  }, {\n    key: \"setSelectionSpecifier\",\n    value: function setSelectionSpecifier(selectionSpecifier) {\n      this._selectionSpecifier = selectionSpecifier;\n    }\n  }, {\n    key: \"setSelection\",\n    value: function setSelection(selection) {\n      this._selection = selection;\n\n      if (this._channel) {\n        this._channel.emit(_coreEvents[\"default\"].CURRENT_STORY_WAS_SET, this._selection);\n      }\n    }\n  }, {\n    key: \"getStoryKinds\",\n    value: function getStoryKinds() {\n      return Array.from(new Set(this.raw().map(function (s) {\n        return s.kind;\n      })));\n    }\n  }, {\n    key: \"getRawStory\",\n    value: function getRawStory(kind, name) {\n      return this.getStoriesForKind(kind).find(function (s) {\n        return s.name === name;\n      });\n    }\n  }, {\n    key: \"cleanHooks\",\n    value: function cleanHooks(id) {\n      if (this._stories[id]) {\n        this._stories[id].hooks.clean();\n      }\n    }\n  }, {\n    key: \"cleanHooksForKind\",\n    value: function cleanHooksForKind(kind) {\n      var _this9 = this;\n\n      this.getStoriesForKind(kind).map(function (story) {\n        return _this9.cleanHooks(story.id);\n      });\n    } // This API is a re-implementation of Storybook's original getStorybook() API.\n    // As such it may not behave *exactly* the same, but aims to. Some notes:\n    //  - It is *NOT* sorted by the user's sort function, but remains sorted in \"insertion order\"\n    //  - It does not include docs-only stories\n\n  }, {\n    key: \"getStorybook\",\n    value: function getStorybook() {\n      var _this10 = this;\n\n      return Object.values(this.raw().reduce(function (kinds, story) {\n        if (!includeStory(story)) return kinds;\n        var kind = story.kind,\n            name = story.name,\n            storyFn = story.storyFn,\n            fileName = story.parameters.fileName; // eslint-disable-next-line no-param-reassign\n\n        if (!kinds[kind]) kinds[kind] = {\n          kind: kind,\n          fileName: fileName,\n          stories: []\n        };\n        kinds[kind].stories.push({\n          name: name,\n          render: storyFn\n        });\n        return kinds;\n      }, {})).sort(function (s1, s2) {\n        return _this10._kinds[s1.kind].order - _this10._kinds[s2.kind].order;\n      });\n    }\n  }, {\n    key: \"mergeAdditionalDataToStory\",\n    value: function mergeAdditionalDataToStory(story) {\n      return Object.assign(Object.assign({}, story), {}, {\n        parameters: this.combineStoryParameters(story.parameters, story.kind),\n        globals: this._globals\n      });\n    }\n  }]);\n\n  return StoryStore;\n}();\n\nexports[\"default\"] = StoryStore;"]},"metadata":{},"sourceType":"script"}
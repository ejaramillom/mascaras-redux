{"ast":null,"code":"function ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport modifiers from '../../../modifiers';\nimport Element from '../../element';\n\nvar NavbarDivider = function NavbarDivider(_ref) {\n  var className = _ref.className,\n      props = _objectWithoutProperties(_ref, [\"className\"]);\n\n  return /*#__PURE__*/React.createElement(Element, _extends({}, props, {\n    className: classnames('navbar-divider', className)\n  }));\n};\n\nNavbarDivider.propTypes = _objectSpread(_objectSpread({}, modifiers.propTypes), {}, {\n  style: PropTypes.shape({}),\n  className: PropTypes.string\n});\nNavbarDivider.defaultProps = _objectSpread(_objectSpread({}, modifiers.defaultProps), {}, {\n  style: undefined,\n  className: undefined\n});\nexport default NavbarDivider;","map":{"version":3,"sources":["../../../../src/components/navbar/components/divider.js"],"names":["NavbarDivider","className","props","classnames","modifiers","style","PropTypes","string","undefined"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,SAAA,MAAA,YAAA;AACA,OAAA,UAAA,MAAA,YAAA;AACA,OAAA,SAAA,MAAA,oBAAA;AACA,OAAA,OAAA,MAAA,eAAA;;AAEA,IAAMA,aAAa,GAAG,SAAhBA,aAAgB,CAAA,IAAA,EAAA;AAAA,MAAGC,SAAH,GAAA,IAAA,CAAA,SAAA;AAAA,MAAiBC,KAAjB,GAAA,wBAAA,CAAA,IAAA,EAAA,CAAA,WAAA,CAAA,CAAA;;AAAA,SAAA,aACpB,KAAA,CAAA,aAAA,CAAA,OAAA,EAAA,QAAA,CAAA,EAAA,EAAA,KAAA,EAAA;AAAoB,IAAA,SAAS,EAAEC,UAAU,CAAA,gBAAA,EAAA,SAAA;AAAzC,GAAA,CAAA,CADoB;AAAtB,CAAA;;AAIAH,aAAa,CAAbA,SAAAA,GAAAA,aAAAA,CAAAA,aAAAA,CAAAA,EAAAA,EACKI,SAAS,CADdJ,SAAAA,CAAAA,EAAAA,EAAAA,EAAAA;AAEEK,EAAAA,KAAK,EAAEC,SAAS,CAATA,KAAAA,CAFTN,EAESM,CAFTN;AAGEC,EAAAA,SAAS,EAAEK,SAAS,CAACC;AAHvBP,CAAAA,CAAAA;AAMAA,aAAa,CAAbA,YAAAA,GAAAA,aAAAA,CAAAA,aAAAA,CAAAA,EAAAA,EACKI,SAAS,CADdJ,YAAAA,CAAAA,EAAAA,EAAAA,EAAAA;AAEEK,EAAAA,KAAK,EAFPL,SAAAA;AAGEC,EAAAA,SAAS,EAAEO;AAHbR,CAAAA,CAAAA;AAMA,eAAA,aAAA","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport modifiers from '../../../modifiers';\nimport Element from '../../element';\n\nconst NavbarDivider = ({ className, ...props }) => (\n  <Element {...props} className={classnames('navbar-divider', className)} />\n);\n\nNavbarDivider.propTypes = {\n  ...modifiers.propTypes,\n  style: PropTypes.shape({}),\n  className: PropTypes.string,\n};\n\nNavbarDivider.defaultProps = {\n  ...modifiers.defaultProps,\n  style: undefined,\n  className: undefined,\n};\n\nexport default NavbarDivider;\n"]},"metadata":{},"sourceType":"module"}
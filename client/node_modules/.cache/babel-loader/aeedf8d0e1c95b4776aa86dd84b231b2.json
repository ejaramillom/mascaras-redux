{"ast":null,"code":"import PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nvar camelToKebab = function camelToKebab(camel) {\n  return camel.replace(/[A-Z]/g, function (cap) {\n    return \"-\".concat(cap.toLowerCase());\n  });\n};\n\nvar flexboxHelperPropTypes = {\n  flexDirection: PropTypes.oneOf(['row', 'row-reverse', 'column', 'column-reverse']),\n  flexWrap: PropTypes.oneOf(['nowrap', 'wrap', 'wrap-reverse']),\n  justifyContent: PropTypes.oneOf(['flex-start', 'flex-end', 'center', 'space-around', 'space-between', 'space-evenly', 'start', 'end', 'left', 'right']),\n  alignContent: PropTypes.oneOf(['flex-start', 'flex-end', 'center', 'space-around', 'space-between', 'space-evenly', 'stretch', 'start', 'end', 'baseline']),\n  alignItems: PropTypes.oneOf(['auto', 'flex-start', 'flex-end', 'center', 'baseline', 'stretch']),\n  flexGrow: PropTypes.oneOf([0, 1, 2, 3, 4, 5])\n};\nvar flexboxHelperNames = Object.keys(flexboxHelperPropTypes);\nexport default {\n  propTypes: flexboxHelperPropTypes,\n  defaultProps: flexboxHelperNames.reduce(function (defaults, flexboxHelperName) {\n    defaults[flexboxHelperName] = undefined;\n    return defaults;\n  }, {}),\n  classnames: function classnames(props) {\n    return classNames(flexboxHelperNames.reduce(function (classes, flexboxHelper) {\n      var propValue = props[flexboxHelper];\n      classes[\"is-\".concat(camelToKebab(flexboxHelper), \"-\").concat(propValue)] = propValue;\n      return classes;\n    }, {}));\n  },\n  clean: function clean(props) {\n    return Object.keys(props).reduce(function (cleanedProps, propName) {\n      if (!flexboxHelperNames.includes(propName)) {\n        cleanedProps[propName] = props[propName];\n      }\n\n      return cleanedProps;\n    }, {});\n  }\n};","map":{"version":3,"sources":["../../src/modifiers/flexbox.js"],"names":["camelToKebab","cap","flexboxHelperPropTypes","flexDirection","PropTypes","flexWrap","justifyContent","alignContent","alignItems","flexGrow","flexboxHelperNames","Object","propTypes","defaultProps","defaults","classnames","classNames","propValue","props","classes","clean","cleanedProps"],"mappings":"AAAA,OAAA,SAAA,MAAA,YAAA;AACA,OAAA,UAAA,MAAA,YAAA;;AAEA,IAAMA,YAAY,GAAG,SAAfA,YAAe,CAAA,KAAA,EAAA;AAAA,SACnB,KAAK,CAAL,OAAA,CAAA,QAAA,EAAwB,UAAA,GAAA,EAAA;AAAA,WAAA,IAAA,MAAA,CAAaC,GAAG,CAAhB,WAAaA,EAAb,CAAA;AADL,GACnB,CADmB;AAArB,CAAA;;AAGA,IAAMC,sBAAsB,GAAG;AAC7BC,EAAAA,aAAa,EAAEC,SAAS,CAATA,KAAAA,CAAgB,CAAA,KAAA,EAAA,aAAA,EAAA,QAAA,EADF,gBACE,CAAhBA,CADc;AAO7BC,EAAAA,QAAQ,EAAED,SAAS,CAATA,KAAAA,CAAgB,CAAA,QAAA,EAAA,MAAA,EAPG,cAOH,CAAhBA,CAPmB;AAQ7BE,EAAAA,cAAc,EAAEF,SAAS,CAATA,KAAAA,CAAgB,CAAA,YAAA,EAAA,UAAA,EAAA,QAAA,EAAA,cAAA,EAAA,eAAA,EAAA,cAAA,EAAA,OAAA,EAAA,KAAA,EAAA,MAAA,EARH,OAQG,CAAhBA,CARa;AAoB7BG,EAAAA,YAAY,EAAEH,SAAS,CAATA,KAAAA,CAAgB,CAAA,YAAA,EAAA,UAAA,EAAA,QAAA,EAAA,cAAA,EAAA,eAAA,EAAA,cAAA,EAAA,SAAA,EAAA,OAAA,EAAA,KAAA,EApBD,UAoBC,CAAhBA,CApBe;AAgC7BI,EAAAA,UAAU,EAAEJ,SAAS,CAATA,KAAAA,CAAgB,CAAA,MAAA,EAAA,YAAA,EAAA,UAAA,EAAA,QAAA,EAAA,UAAA,EAhCC,SAgCD,CAAhBA,CAhCiB;AAwC7BK,EAAAA,QAAQ,EAAEL,SAAS,CAATA,KAAAA,CAAgB,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAhBA,CAAgB,CAAhBA;AAxCmB,CAA/B;AA2CA,IAAMM,kBAAkB,GAAGC,MAAM,CAANA,IAAAA,CAA3B,sBAA2BA,CAA3B;AAEA,eAAe;AACbC,EAAAA,SAAS,EADI,sBAAA;AAEbC,EAAAA,YAAY,EAAE,kBAAkB,CAAlB,MAAA,CAA0B,UAAA,QAAA,EAAA,iBAAA,EAAiC;AACvEC,IAAAA,QAAQ,CAARA,iBAAQ,CAARA,GAAAA,SAAAA;AACA,WAAA,QAAA;AAFY,GAAA,EAFD,EAEC,CAFD;AAMbC,EAAAA,UAAU,EAAE,SAAA,UAAA,CAAA,KAAA,EAAA;AAAA,WACVC,UAAU,CACR,kBAAkB,CAAlB,MAAA,CAA0B,UAAA,OAAA,EAAA,aAAA,EAA4B;AACpD,UAAMC,SAAS,GAAGC,KAAK,CAAvB,aAAuB,CAAvB;AACAC,MAAAA,OAAO,CAAA,MAAA,MAAA,CAAOnB,YAAY,CAAnB,aAAmB,CAAnB,EAAA,GAAA,EAAA,MAAA,CAAPmB,SAAO,CAAA,CAAPA,GAAAA,SAAAA;AACA,aAAA,OAAA;AAHF,KAAA,EAFQ,EAER,CADQ,CADA;AANC,GAAA;AAcbC,EAAAA,KAAK,EAAE,SAAA,KAAA,CAAA,KAAA,EAAA;AAAA,WACL,MAAM,CAAN,IAAA,CAAA,KAAA,EAAA,MAAA,CAA0B,UAAA,YAAA,EAAA,QAAA,EAA4B;AACpD,UAAI,CAACV,kBAAkB,CAAlBA,QAAAA,CAAL,QAAKA,CAAL,EAA4C;AAC1CW,QAAAA,YAAY,CAAZA,QAAY,CAAZA,GAAyBH,KAAK,CAA9BG,QAA8B,CAA9BA;AACD;;AACD,aAAA,YAAA;AAJF,KAAA,EADK,EACL,CADK;AAAA;AAdM,CAAf","sourcesContent":["import PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nconst camelToKebab = (camel) =>\n  camel.replace(/[A-Z]/g, (cap) => `-${cap.toLowerCase()}`);\n\nconst flexboxHelperPropTypes = {\n  flexDirection: PropTypes.oneOf([\n    'row',\n    'row-reverse',\n    'column',\n    'column-reverse',\n  ]),\n  flexWrap: PropTypes.oneOf(['nowrap', 'wrap', 'wrap-reverse']),\n  justifyContent: PropTypes.oneOf([\n    'flex-start',\n    'flex-end',\n    'center',\n    'space-around',\n    'space-between',\n    'space-evenly',\n    'start',\n    'end',\n    'left',\n    'right',\n  ]),\n  alignContent: PropTypes.oneOf([\n    'flex-start',\n    'flex-end',\n    'center',\n    'space-around',\n    'space-between',\n    'space-evenly',\n    'stretch',\n    'start',\n    'end',\n    'baseline',\n  ]),\n  alignItems: PropTypes.oneOf([\n    'auto',\n    'flex-start',\n    'flex-end',\n    'center',\n    'baseline',\n    'stretch',\n  ]),\n  flexGrow: PropTypes.oneOf([0, 1, 2, 3, 4, 5]),\n};\n\nconst flexboxHelperNames = Object.keys(flexboxHelperPropTypes);\n\nexport default {\n  propTypes: flexboxHelperPropTypes,\n  defaultProps: flexboxHelperNames.reduce((defaults, flexboxHelperName) => {\n    defaults[flexboxHelperName] = undefined;\n    return defaults;\n  }, {}),\n  classnames: (props) =>\n    classNames(\n      flexboxHelperNames.reduce((classes, flexboxHelper) => {\n        const propValue = props[flexboxHelper];\n        classes[`is-${camelToKebab(flexboxHelper)}-${propValue}`] = propValue;\n        return classes;\n      }, {}),\n    ),\n  clean: (props) =>\n    Object.keys(props).reduce((cleanedProps, propName) => {\n      if (!flexboxHelperNames.includes(propName)) {\n        cleanedProps[propName] = props[propName];\n      }\n      return cleanedProps;\n    }, {}),\n};\n"]},"metadata":{},"sourceType":"module"}
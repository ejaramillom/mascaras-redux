{"ast":null,"code":"var _jsxFileName = \"/home/leon/Documentos/proyectos/react/mascaras/client/src/components/List.component.js\";\nimport React from 'react';\nimport '../App.css';\nimport { getBottles, getBrushes, getRods, getWipers, getCaps } from \"../middlewares/services\";\nimport { useQuery } from \"react-query\";\nimport Box from 'react-bulma-components/lib/components/box';\nimport Media from 'react-bulma-components/lib/components/media';\nimport Image from 'react-bulma-components/lib/components/image';\nimport Content from 'react-bulma-components/lib/components/content';\nexport const Bottle = () => {\n  const {\n    isLoading,\n    error,\n    data\n  } = useQuery(\"bottles\", getBottles);\n  if (isLoading) return \"Loading...\";\n\n  if (error) {\n    return \"Oops! \" + error.message;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"App-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, data.map(element => /*#__PURE__*/React.createElement(\"li\", {\n    key: element.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, element.name))));\n};\nexport const Brush = () => {\n  const {\n    isLoading,\n    error,\n    data\n  } = useQuery(\"brushes\", getBrushes);\n  if (isLoading) return \"Loading...\";\n\n  if (error) {\n    return \"Oops! \" + error.message;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"App-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, data.map(element => /*#__PURE__*/React.createElement(\"li\", {\n    key: element.brush,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, element.brush))));\n};\nexport const Rod = () => {\n  const {\n    isLoading,\n    error,\n    data\n  } = useQuery(\"rods\", getRods);\n  if (isLoading) return \"Loading... \";\n\n  if (error) {\n    return \"Oops! \" + error.message;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"App-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, data.map(element => /*#__PURE__*/React.createElement(\"li\", {\n    key: element.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, element.name))));\n};\nexport const Wiper = () => {\n  const {\n    isLoading,\n    error,\n    data\n  } = useQuery(\"wipers\", getWipers);\n  console.log(data);\n  if (isLoading) return \"Loading...\";\n\n  if (error) {\n    return \"Oops! \" + error.message;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"App-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, data.map(element => /*#__PURE__*/React.createElement(\"li\", {\n    key: element.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, element.name))));\n};\nexport const Cap = () => {\n  const {\n    isLoading,\n    error,\n    data\n  } = useQuery(\"caps\", getCaps);\n  console.log(data);\n  if (isLoading) return \"Loading...\";\n\n  if (error) {\n    return \"Oops! \" + error.message;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"App-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, data.map(element => /*#__PURE__*/React.createElement(\"li\", {\n    key: element.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, element.name))));\n};","map":{"version":3,"sources":["/home/leon/Documentos/proyectos/react/mascaras/client/src/components/List.component.js"],"names":["React","getBottles","getBrushes","getRods","getWipers","getCaps","useQuery","Box","Media","Image","Content","Bottle","isLoading","error","data","message","map","element","name","Brush","brush","Rod","Wiper","console","log","Cap"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../App.css';\nimport { getBottles, getBrushes, getRods, getWipers, getCaps } from \"../middlewares/services\";\nimport { useQuery } from \"react-query\";\nimport Box from 'react-bulma-components/lib/components/box';\nimport Media from 'react-bulma-components/lib/components/media';\nimport Image from 'react-bulma-components/lib/components/image';\nimport Content from 'react-bulma-components/lib/components/content';\n\nexport const Bottle = () => {\n  const { isLoading, error, data } = useQuery(\"bottles\", getBottles);\n  if (isLoading) return \"Loading...\";\n  if (error) {\n    return \"Oops! \" + error.message;\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n      { data.map( element =>\n        <li key = { element.name }>{ element.name }</li>\n      )}\n      </header>\n    </div>\n  );\n}\n\nexport const Brush = () => {\n  const { isLoading, error, data } = useQuery(\"brushes\", getBrushes);\n  if (isLoading) return \"Loading...\";\n  if (error) {\n    return \"Oops! \" + error.message;\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n      { data.map( element =>\n        <li key = { element.brush }>{ element.brush }</li>\n      )}\n      </header>\n    </div>\n  );\n}\n\nexport const Rod = () => {\n  const { isLoading, error, data } = useQuery(\"rods\", getRods);\n  if (isLoading) return \"Loading... \";\n  if (error) {\n    return \"Oops! \" + error.message;\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n      { data.map( element =>\n        <li key = { element.name }>{ element.name }</li>\n      )}\n      </header>\n    </div>\n  );\n}\n\nexport const Wiper = () => {\n  const { isLoading, error, data } = useQuery(\"wipers\", getWipers);\n  console.log(data);\n  if (isLoading) return \"Loading...\";\n  if (error) {\n    return \"Oops! \" + error.message;\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n      { data.map( element =>\n        <li key = { element.name }>{ element.name }</li>\n      )}\n      </header>\n    </div>\n  );\n}\n\nexport const Cap = () => {\n  const { isLoading, error, data } = useQuery(\"caps\", getCaps);\n  console.log(data);\n  if (isLoading) return \"Loading...\";\n  if (error) {\n    return \"Oops! \" + error.message;\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n      { data.map( element =>\n        <li key = { element.name }>{ element.name }</li>\n      )}\n      </header>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
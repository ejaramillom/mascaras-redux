{"ast":null,"code":"import axios from \"axios\";\nimport { useQuery } from \"react-query\";\nexport const getBottles = () => {\n  return fetch(\"/bottle\").then(response => response.json());\n};\nexport const getBrushes = () => {\n  return fetch(\"/brush\").then(response => response.json());\n};\nexport const getCaps = () => {\n  return fetch(\"/cap\").then(response => response.json());\n};\nexport const getRods = () => {\n  return fetch(\"/rod\").then(response => response.json());\n};\nexport const getWipers = () => {\n  return fetch(\"/wiper\").then(response => response.json());\n};\nexport const getBuild = async () => {\n  const {\n    data\n  } = await axios.get(\"/build\");\n  return data;\n};\nexport const MascaraBuild = async () => {\n  const {\n    isLoading,\n    error,\n    data\n  } = useQuery(\"build\", getBuild);\n  if (isLoading) return \"Loading...\";\n  if (error) return \"Oops! \";\n  return data;\n};","map":{"version":3,"sources":["/home/leon/Documentos/proyectos/react/mascaras/client/src/middlewares/services.js"],"names":["axios","useQuery","getBottles","fetch","then","response","json","getBrushes","getCaps","getRods","getWipers","getBuild","data","get","MascaraBuild","isLoading","error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,aAAzB;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAM;AAC9B,SAAOC,KAAK,CAAC,SAAD,CAAL,CACNC,IADM,CACDC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADX,CAAP;AAED,CAHM;AAIP,OAAO,MAAMC,UAAU,GAAG,MAAM;AAC9B,SAAOJ,KAAK,CAAC,QAAD,CAAL,CACNC,IADM,CACDC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADX,CAAP;AAED,CAHM;AAIP,OAAO,MAAME,OAAO,GAAG,MAAM;AAC3B,SAAOL,KAAK,CAAC,MAAD,CAAL,CACNC,IADM,CACDC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADX,CAAP;AAED,CAHM;AAIP,OAAO,MAAMG,OAAO,GAAG,MAAM;AAC3B,SAAON,KAAK,CAAC,MAAD,CAAL,CACNC,IADM,CACDC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADX,CAAP;AAED,CAHM;AAIP,OAAO,MAAMI,SAAS,GAAG,MAAM;AAC7B,SAAOP,KAAK,CAAC,QAAD,CAAL,CACNC,IADM,CACDC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADX,CAAP;AAED,CAHM;AAIP,OAAO,MAAMK,QAAQ,GAAG,YAAY;AACnC,QAAM;AAAEC,IAAAA;AAAF,MAAW,MAAMZ,KAAK,CAACa,GAAN,CAAU,QAAV,CAAvB;AACA,SAAOD,IAAP;AACA,CAHM;AAKP,OAAO,MAAME,YAAY,GAAG,YAAY;AACtC,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,KAAb;AAAoBJ,IAAAA;AAApB,MAA6BX,QAAQ,CAAC,OAAD,EAAUU,QAAV,CAA3C;AACA,MAAII,SAAJ,EAAe,OAAO,YAAP;AACf,MAAIC,KAAJ,EAAW,OAAO,QAAP;AACX,SAAOJ,IAAP;AACD,CALM","sourcesContent":["import axios from \"axios\";\nimport { useQuery } from \"react-query\";\n\nexport const getBottles = () => {\n  return fetch(\"/bottle\")\n  .then(response => response.json());\n}\nexport const getBrushes = () => {\n  return fetch(\"/brush\")\n  .then(response => response.json());\n}\nexport const getCaps = () => {\n  return fetch(\"/cap\")\n  .then(response => response.json());\n}\nexport const getRods = () => {\n  return fetch(\"/rod\")\n  .then(response => response.json());\n}\nexport const getWipers = () => {\n  return fetch(\"/wiper\")\n  .then(response => response.json());\n}\nexport const getBuild = async () => {\n const { data } = await axios.get(\"/build\");\n return data;\n};\n\nexport const MascaraBuild = async () => {\n  const { isLoading, error, data } = useQuery(\"build\", getBuild);\n  if (isLoading) return \"Loading...\";\n  if (error) return \"Oops! \";\n  return data;\n};\n"]},"metadata":{},"sourceType":"module"}
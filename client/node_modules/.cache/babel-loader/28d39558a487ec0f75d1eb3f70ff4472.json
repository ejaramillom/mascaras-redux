{"ast":null,"code":"export function getBottles() {\n  return fetch(\"/bottle\").then(response => response.json());\n}\nexport function getBrushes() {\n  return fetch(\"/brush\").then(response => response.json());\n}\nexport function getCaps() {\n  return fetch(\"/cap\").then(response => response.json());\n}\nexport function getRods() {\n  return fetch(\"/rod\").then(response => response.json());\n}\nexport function getWipers() {\n  return fetch(\"/wiper\").then(response => response.json());\n}\nexport function getBuild() {\n  return fetch(\"/build\").then(response => response.json());\n}","map":{"version":3,"sources":["/home/leon/Documentos/proyectos/react/mascaras/client/src/middlewares/services.js"],"names":["getBottles","fetch","then","response","json","getBrushes","getCaps","getRods","getWipers","getBuild"],"mappings":"AAAA,OAAO,SAASA,UAAT,GAAsB;AAC3B,SAAOC,KAAK,CAAC,SAAD,CAAL,CACNC,IADM,CACDC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADX,CAAP;AAED;AACD,OAAO,SAASC,UAAT,GAAsB;AAC3B,SAAOJ,KAAK,CAAC,QAAD,CAAL,CACNC,IADM,CACDC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADX,CAAP;AAED;AACD,OAAO,SAASE,OAAT,GAAmB;AACxB,SAAOL,KAAK,CAAC,MAAD,CAAL,CACNC,IADM,CACDC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADX,CAAP;AAED;AACD,OAAO,SAASG,OAAT,GAAmB;AACxB,SAAON,KAAK,CAAC,MAAD,CAAL,CACNC,IADM,CACDC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADX,CAAP;AAED;AACD,OAAO,SAASI,SAAT,GAAqB;AAC1B,SAAOP,KAAK,CAAC,QAAD,CAAL,CACNC,IADM,CACDC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADX,CAAP;AAED;AACD,OAAO,SAASK,QAAT,GAAoB;AACzB,SAAOR,KAAK,CAAC,QAAD,CAAL,CACNC,IADM,CACDC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADX,CAAP;AAED","sourcesContent":["export function getBottles() {\n  return fetch(\"/bottle\")\n  .then(response => response.json());\n}\nexport function getBrushes() {\n  return fetch(\"/brush\")\n  .then(response => response.json());\n}\nexport function getCaps() {\n  return fetch(\"/cap\")\n  .then(response => response.json());\n}\nexport function getRods() {\n  return fetch(\"/rod\")\n  .then(response => response.json());\n}\nexport function getWipers() {\n  return fetch(\"/wiper\")\n  .then(response => response.json());\n}\nexport function getBuild() {\n  return fetch(\"/build\")\n  .then(response => response.json());\n}\n"]},"metadata":{},"sourceType":"module"}
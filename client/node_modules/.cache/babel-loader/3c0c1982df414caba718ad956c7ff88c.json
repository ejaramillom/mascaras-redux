{"ast":null,"code":"function ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React from 'react';\nimport classnames from 'classnames';\nimport { ShowContext } from '../context';\nimport Element from '../../element';\n\nvar NavbarMenu = function NavbarMenu(_ref) {\n  var className = _ref.className,\n      children = _ref.children,\n      props = _objectWithoutProperties(_ref, [\"className\", \"children\"]);\n\n  return /*#__PURE__*/React.createElement(ShowContext.Consumer, null, function (active) {\n    return /*#__PURE__*/React.createElement(Element, _extends({}, props, {\n      className: classnames('navbar-menu', className, {\n        'is-active': active\n      })\n    }), children);\n  });\n};\n\nNavbarMenu.propTypes = _objectSpread({}, Element.propTypes);\nNavbarMenu.defaultProps = _objectSpread({}, Element.defaultProps);\nexport default NavbarMenu;","map":{"version":3,"sources":["../../../../src/components/navbar/components/menu.js"],"names":["NavbarMenu","className","children","props","classnames","active","Element"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,UAAA,MAAA,YAAA;AAEA,SAAA,WAAA,QAAA,YAAA;AAEA,OAAA,OAAA,MAAA,eAAA;;AAEA,IAAMA,UAAU,GAAG,SAAbA,UAAa,CAAA,IAAA,EAAA;AAAA,MAAGC,SAAH,GAAA,IAAA,CAAA,SAAA;AAAA,MAAcC,QAAd,GAAA,IAAA,CAAA,QAAA;AAAA,MAA2BC,KAA3B,GAAA,wBAAA,CAAA,IAAA,EAAA,CAAA,WAAA,EAAA,UAAA,CAAA,CAAA;;AAAA,SAAA,aACjB,KAAA,CAAA,aAAA,CAAC,WAAD,CAAA,QAAA,EAAA,IAAA,EACG,UAAA,MAAA,EAAA;AAAA,WAAA,aACC,KAAA,CAAA,aAAA,CAAA,OAAA,EAAA,QAAA,CAAA,EAAA,EAAA,KAAA,EAAA;AAEE,MAAA,SAAS,EAAEC,UAAU,CAAA,aAAA,EAAA,SAAA,EAA2B;AAC9C,qBAAaC;AADiC,OAA3B;AAFvB,KAAA,CAAA,EADD,QACC,CADD;AAFc,GACjB,CADiB;AAAnB,CAAA;;AAeAL,UAAU,CAAVA,SAAAA,GAAAA,aAAAA,CAAAA,EAAAA,EACKM,OAAO,CADZN,SAAAA,CAAAA;AAIAA,UAAU,CAAVA,YAAAA,GAAAA,aAAAA,CAAAA,EAAAA,EACKM,OAAO,CADZN,YAAAA,CAAAA;AAIA,eAAA,UAAA","sourcesContent":["import React from 'react';\nimport classnames from 'classnames';\n\nimport { ShowContext } from '../context';\n\nimport Element from '../../element';\n\nconst NavbarMenu = ({ className, children, ...props }) => (\n  <ShowContext.Consumer>\n    {(active) => (\n      <Element\n        {...props}\n        className={classnames('navbar-menu', className, {\n          'is-active': active,\n        })}\n      >\n        {children}\n      </Element>\n    )}\n  </ShowContext.Consumer>\n);\n\nNavbarMenu.propTypes = {\n  ...Element.propTypes,\n};\n\nNavbarMenu.defaultProps = {\n  ...Element.defaultProps,\n};\n\nexport default NavbarMenu;\n"]},"metadata":{},"sourceType":"module"}
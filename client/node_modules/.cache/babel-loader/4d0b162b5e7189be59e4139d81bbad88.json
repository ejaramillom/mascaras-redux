{"ast":null,"code":"var _jsxFileName = \"/home/leon/Documentos/proyectos/mascara/client/src/components/Display.component.js\";\nimport React, { useState, useEffect } from 'react';\nimport Button from 'react-bulma-components/lib/components/button';\nimport Tile from 'react-bulma-components/lib/components/tile';\nimport Heading from 'react-bulma-components/lib/components/heading';\nimport Image from 'react-bulma-components/lib/components/image';\nimport Tag from 'react-bulma-components/lib/components/tag';\nimport ExportCSV from './ExportCSV.component';\nimport { Control, Input } from 'react-bulma-components/lib/components/form';\nimport axios from \"axios\";\nimport '../App.css'; //---------------- Bottle filter\n\nexport const BottleDisplay = props => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ExportCSV, {\n    csvData: props.bottlesToDisplay,\n    fileName: \"bottles\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }), bottlesToDisplay.map(element => /*#__PURE__*/React.createElement(Tile, {\n    kind: \"ancestor\",\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Tile, {\n    kind: \"parent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Tile, {\n    renderAs: \"article\",\n    kind: \"child\",\n    notification: true,\n    color: \"light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Heading, {\n    size: 7,\n    renderAs: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 15\n    }\n  }, element.name, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Tag, {\n    color: \"dark\",\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }, \" Drawing \"), /*#__PURE__*/React.createElement(Tag, {\n    color: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }, \" \", element.drawing), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Tag, {\n    color: \"dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, \" Thread \"), /*#__PURE__*/React.createElement(Tag, {\n    color: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, \" \", element.thread), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Tag, {\n    color: \"dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, \" Depth \"), /*#__PURE__*/React.createElement(Tag, {\n    color: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, \" \", element.depth), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    color: \"info\",\n    onClick: () => {\n      addBottleClick(element);\n    },\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 15\n    }\n  }, \"Add Bottle\")))))));\n}; //---------------- Bottle filter\n//---------------- Brush filter\n\nexport const BrushFilter = props => {\n  const brush = props.brush;\n  const brushes = props.brushes;\n  const claim = props.claim;\n  const rod = props.rod;\n  const bottle = props.bottle;\n  const setBuildClick = props.setBuildClick;\n  const buildClick = props.buildClick;\n\n  const addBrush = async data => {\n    await axios.post(\"/brush\", {\n      brush: data.brush,\n      original: data.original,\n      shaftLength: data.shaftLength,\n      shaftDiameter: data.shaftDiameter,\n      brushLength: data.brushLength,\n      brushDiameter: data.brushDiameter,\n      type: data.type\n    }).then(function (response) {\n      if (response.status === 200) {\n        alert(\"Brush added to the list!\");\n        console.log(\"Succesfully added\");\n      } else {\n        const err = new Error(response.error);\n        console.log(err);\n        throw err;\n      }\n    }).catch(function (error) {\n      alert(error);\n    });\n  };\n\n  const addBrushClick = element => {\n    addBrush(element);\n    setBuildClick(!buildClick);\n  };\n\n  if (brush && brush.brush) {\n    const filteredBrushes = brushes.filter(element => {\n      return element.brush.toLowerCase().indexOf(brush.brush.toLowerCase()) !== -1;\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ExportCSV, {\n      csvData: filteredBrushes,\n      fileName: \"brushes\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 7\n      }\n    }), filteredBrushes.map(element => /*#__PURE__*/React.createElement(Tile, {\n      kind: \"ancestor\",\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Tile, {\n      kind: \"parent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Tile, {\n      renderAs: \"article\",\n      kind: \"child\",\n      notification: true,\n      color: \"light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Heading, {\n      size: 7,\n      renderAs: \"h6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }, element.brush, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Image, {\n      rounded: \"true\",\n      key: element.brush,\n      size: \"2by1\",\n      className: \"center\",\n      src: require(`../images/${element.brush}.jpg`),\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 19\n      }\n    }, \" Drawing \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 19\n      }\n    }, \" \", element.drawing), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 19\n      }\n    }, \" Type \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 19\n      }\n    }, \" \", element.type), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 19\n      }\n    }, \" Length \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 19\n      }\n    }, \" \", element.brushLength), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 19\n      }\n    }, \" Shaft \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 19\n      }\n    }, \" \", element.shaftDiameter), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 19\n      }\n    }, \" Brush \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 19\n      }\n    }, \" \", element.brushDiameter), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      color: \"info\",\n      size: \"small\",\n      onClick: () => {\n        addBrushClick(element);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 19\n      }\n    }, \"Add Brush\")))))));\n  } else if (claim) {\n    const filteredBrushes = brushes.filter(element => {\n      if (claim === \"definition\" && element.claim.definition === true) {\n        return element;\n      } else if (claim === \"volumizing\" && element.claim.volumizing === true) {\n        return element;\n      } else if (claim === \"lengthening\" && element.claim.lengthening === true) {\n        return element;\n      } else if (claim === \"curling\" && element.claim.curling === true) {\n        return element;\n      } else if (claim === \"plumping\" && element.claim.plumping === true) {\n        return element;\n      } else {\n        return \"\";\n      }\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ExportCSV, {\n      csvData: filteredBrushes,\n      fileName: \"brushes\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 7\n      }\n    }), filteredBrushes.map(element => /*#__PURE__*/React.createElement(Tile, {\n      kind: \"ancestor\",\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Tile, {\n      kind: \"parent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Tile, {\n      renderAs: \"article\",\n      kind: \"child\",\n      notification: true,\n      color: \"light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Heading, {\n      size: 7,\n      renderAs: \"h6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }\n    }, element.brush, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Image, {\n      rounded: \"true\",\n      key: element.brush,\n      size: \"2by1\",\n      className: \"center\",\n      src: require(`../images/${element.brush}.jpg`),\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 19\n      }\n    }, \" Drawing \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 19\n      }\n    }, \" \", element.drawing), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 19\n      }\n    }, \" Type \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 19\n      }\n    }, \" \", element.type), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 19\n      }\n    }, \" Length \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 19\n      }\n    }, \" \", element.brushLength), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 19\n      }\n    }, \" Shaft \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 19\n      }\n    }, \" \", element.shaftDiameter), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 19\n      }\n    }, \" Brush \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 19\n      }\n    }, \" \", element.brushDiameter), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      color: \"info\",\n      size: \"small\",\n      onClick: () => {\n        addBrushClick(element);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 19\n      }\n    }, \"Add Brush\")))))));\n  } else if (rod && rod.name && bottle && bottle.name) {\n    const filteredBrushes = brushes.filter(element => {\n      let mascaraGap = Number(bottle.depth) - (Number(element.brushLength) + Number(rod.dimensions.length));\n\n      if (mascaraGap > 1 && mascaraGap < 6) {\n        return element;\n      } else {\n        return null;\n      }\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ExportCSV, {\n      csvData: filteredBrushes,\n      fileName: \"brushes\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 7\n      }\n    }), filteredBrushes.map(element => /*#__PURE__*/React.createElement(Tile, {\n      kind: \"ancestor\",\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Tile, {\n      kind: \"parent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Tile, {\n      renderAs: \"article\",\n      kind: \"child\",\n      notification: true,\n      color: \"light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Heading, {\n      size: 7,\n      renderAs: \"h6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 17\n      }\n    }, element.brush, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Image, {\n      rounded: \"true\",\n      key: element.brush,\n      size: \"2by1\",\n      className: \"center\",\n      src: require(`../images/${element.brush}.jpg`),\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 19\n      }\n    }, \" Drawing \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 19\n      }\n    }, \" \", element.drawing), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 19\n      }\n    }, \" Type \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 19\n      }\n    }, \" \", element.type), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 19\n      }\n    }, \" Length \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 19\n      }\n    }, \" \", element.brushLength), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 19\n      }\n    }, \" Shaft \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 19\n      }\n    }, \" \", element.shaftDiameter), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 19\n      }\n    }, \" Brush \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 19\n      }\n    }, \" \", element.brushDiameter), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      color: \"info\",\n      size: \"small\",\n      onClick: () => {\n        addBrushClick(element);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 19\n      }\n    }, \"Add Brush\")))))));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ExportCSV, {\n    csvData: brushes,\n    fileName: \"brushes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 5\n    }\n  }), brushes.map(element => /*#__PURE__*/React.createElement(Tile, {\n    kind: \"ancestor\",\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Tile, {\n    kind: \"parent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Tile, {\n    renderAs: \"article\",\n    kind: \"child\",\n    notification: true,\n    color: \"light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Heading, {\n    size: 7,\n    renderAs: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 15\n    }\n  }, element.brush, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Image, {\n    rounded: \"true\",\n    key: element.brush,\n    size: \"2by1\",\n    className: \"center\",\n    src: require(`../images/${element.brush}.jpg`),\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Tag, {\n    color: \"dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 17\n    }\n  }, \" Drawing \"), /*#__PURE__*/React.createElement(Tag, {\n    color: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 17\n    }\n  }, \" \", element.drawing), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Tag, {\n    color: \"dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 17\n    }\n  }, \" Type \"), /*#__PURE__*/React.createElement(Tag, {\n    color: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 17\n    }\n  }, \" \", element.type), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Tag, {\n    color: \"dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 17\n    }\n  }, \" Length \"), /*#__PURE__*/React.createElement(Tag, {\n    color: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 17\n    }\n  }, \" \", element.brushLength), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Tag, {\n    color: \"dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 17\n    }\n  }, \" Shaft \"), /*#__PURE__*/React.createElement(Tag, {\n    color: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 17\n    }\n  }, \" \", element.shaftDiameter), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Tag, {\n    color: \"dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 17\n    }\n  }, \" Brush \"), /*#__PURE__*/React.createElement(Tag, {\n    color: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 17\n    }\n  }, \" \", element.brushDiameter), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    color: \"info\",\n    size: \"small\",\n    onClick: () => {\n      addBrushClick(element);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 17\n    }\n  }, \"Add Brush\")))))));\n}; //---------------- Brush filter\n//---------------- Rod filter\n\nexport const RodFilter = props => {\n  const rod = props.rod;\n  const rods = props.rods;\n  const bottle = props.bottle;\n  const brush = props.brush;\n  const setBuildClick = props.setBuildClick;\n  const buildClick = props.buildClick;\n\n  const addRod = async data => {\n    await axios.post(\"/rod\", {\n      name: data.name,\n      drawing: data.drawing,\n      thread: data.thread,\n      dimensions: {\n        length: data.dimensions.length,\n        rodDiameter: data.dimensions.rodDiameter,\n        brushDiameter: data.dimensions.brushDiameter\n      }\n    }).then(function (response) {\n      if (response.status === 200) {\n        alert(\"Rod added to the list!\");\n        console.log(\"Succesfully added\");\n      } else {\n        const err = new Error(response.error);\n        console.log(err);\n        throw err;\n      }\n    }).catch(function (error) {\n      alert(error);\n    });\n  };\n\n  const addRodClick = element => {\n    addRod(element);\n    setBuildClick(!buildClick);\n  };\n\n  if (rod && rod.name) {\n    const filteredRods = rods.filter(element => {\n      return element.name.toLowerCase().indexOf(rod.name.toLowerCase()) !== -1;\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ExportCSV, {\n      csvData: filteredRods,\n      fileName: \"rods\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 7\n      }\n    }), filteredRods.map(element => /*#__PURE__*/React.createElement(Tile, {\n      kind: \"ancestor\",\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Tile, {\n      kind: \"parent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Tile, {\n      renderAs: \"article\",\n      kind: \"child\",\n      notification: true,\n      color: \"light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Heading, {\n      size: 7,\n      renderAs: \"h6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 17\n      }\n    }, element.name, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 19\n      }\n    }, \" Drawing \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 19\n      }\n    }, \" \", element.drawing), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 19\n      }\n    }, \" Thread \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 19\n      }\n    }, \" \", element.thread), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 19\n      }\n    }, \" Length \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 19\n      }\n    }, \" \", element.dimensions.length), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 19\n      }\n    }, \" Shaft \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 19\n      }\n    }, \" \", element.dimensions.brushDiameter), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 19\n      }\n    }, \" Rod \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 19\n      }\n    }, \" \", element.dimensions.rodDiameter), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      color: \"info\",\n      size: \"small\",\n      onClick: () => {\n        addRodClick(element);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 19\n      }\n    }, \"Add Rod\")))))));\n  } else if (bottle && bottle.thread && bottle.depth) {\n    const filteredRods = rods.filter(element => {\n      let depthDiff = Number(bottle.depth) - Number(element.dimensions.length);\n\n      if (element.thread && depthDiff > 0) {\n        return element.thread.toLowerCase().indexOf(bottle.thread.toLowerCase()) !== -1;\n      } else {\n        return \"\";\n      }\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ExportCSV, {\n      csvData: filteredRods,\n      fileName: \"rods\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 7\n      }\n    }), filteredRods.map(element => /*#__PURE__*/React.createElement(Tile, {\n      kind: \"ancestor\",\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Tile, {\n      kind: \"parent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Tile, {\n      renderAs: \"article\",\n      kind: \"child\",\n      notification: true,\n      color: \"light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Heading, {\n      size: 7,\n      renderAs: \"h6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 17\n      }\n    }, element.name, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 19\n      }\n    }, \" Drawing \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 19\n      }\n    }, \" \", element.drawing), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 19\n      }\n    }, \" Thread \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 19\n      }\n    }, \" \", element.thread), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 19\n      }\n    }, \" Length \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 19\n      }\n    }, \" \", element.dimensions.length), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 19\n      }\n    }, \" Shaft \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 19\n      }\n    }, \" \", element.dimensions.brushDiameter), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 19\n      }\n    }, \" Rod \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 19\n      }\n    }, \" \", element.dimensions.rodDiameter), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      color: \"info\",\n      size: \"small\",\n      onClick: () => {\n        addRodClick(element);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 19\n      }\n    }, \"Add Rod\")))))));\n  } else if (bottle && bottle.thread) {\n    const filteredRods = rods.filter(element => {\n      if (element.thread) {\n        return element.thread.toLowerCase().indexOf(bottle.thread.toLowerCase()) !== -1;\n      } else {\n        return \"\";\n      }\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ExportCSV, {\n      csvData: filteredRods,\n      fileName: \"rods\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 493,\n        columnNumber: 7\n      }\n    }), filteredRods.map(element => /*#__PURE__*/React.createElement(Tile, {\n      kind: \"ancestor\",\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 495,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Tile, {\n      kind: \"parent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Tile, {\n      renderAs: \"article\",\n      kind: \"child\",\n      notification: true,\n      color: \"light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Heading, {\n      size: 7,\n      renderAs: \"h6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 498,\n        columnNumber: 17\n      }\n    }, element.name, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 499,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 501,\n        columnNumber: 19\n      }\n    }, \" Drawing \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 502,\n        columnNumber: 19\n      }\n    }, \" \", element.drawing), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 503,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 504,\n        columnNumber: 19\n      }\n    }, \" Thread \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 505,\n        columnNumber: 19\n      }\n    }, \" \", element.thread), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 506,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 19\n      }\n    }, \" Length \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 508,\n        columnNumber: 19\n      }\n    }, \" \", element.dimensions.length), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 509,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 19\n      }\n    }, \" Shaft \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 511,\n        columnNumber: 19\n      }\n    }, \" \", element.dimensions.brushDiameter), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 512,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 513,\n        columnNumber: 19\n      }\n    }, \" Rod \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 514,\n        columnNumber: 19\n      }\n    }, \" \", element.dimensions.rodDiameter), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 515,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 516,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      color: \"info\",\n      size: \"small\",\n      onClick: () => {\n        addRodClick(element);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 517,\n        columnNumber: 19\n      }\n    }, \"Add Rod\")))))));\n  } else if (brush && brush.type) {\n    const filteredRods = rods.filter(element => {\n      let brushRodDiff = Number(element.dimensions.brushDiameter) - Number(brush.shaftDiameter);\n      let wipeDelta = Number(brush.brushDiameter) - Number(element.dimensions.rodDiameter);\n\n      if (brush.type === \"INYECTADO\" && wipeDelta > 0.5 && wipeDelta < 4.8) {\n        if (brushRodDiff > 0.05 && brushRodDiff < 0.15) {\n          return element;\n        } else {\n          return \"\";\n        }\n      }\n\n      if (brush.type === \"NYLON\" && wipeDelta > 0.8 && wipeDelta < 6.4) {\n        if (brushRodDiff > -0.05 && brushRodDiff < 0.1) {\n          return element;\n        } else {\n          return \"\";\n        }\n      }\n\n      if (brush.type === \"LIP GLOSS\" && wipeDelta > -2 && wipeDelta < 3) {\n        if (brushRodDiff > 0 && brushRodDiff < 0.2) {\n          return element;\n        } else {\n          return \"\";\n        }\n      }\n\n      if (brush.type === \"DELINEADOR\" && wipeDelta > -2 && wipeDelta < -1) {\n        if (brushRodDiff > -0.05 && brushRodDiff < 0.1) {\n          return element;\n        } else {\n          return \"\";\n        }\n      }\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 570,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ExportCSV, {\n      csvData: filteredRods,\n      fileName: \"rods\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 571,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 572,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 573,\n        columnNumber: 7\n      }\n    }), filteredRods.map(element => /*#__PURE__*/React.createElement(Tile, {\n      kind: \"ancestor\",\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 575,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Tile, {\n      kind: \"parent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 576,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Tile, {\n      renderAs: \"article\",\n      kind: \"child\",\n      notification: true,\n      color: \"light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 577,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Heading, {\n      size: 7,\n      renderAs: \"h6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 578,\n        columnNumber: 17\n      }\n    }, element.name, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 579,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 580,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 581,\n        columnNumber: 19\n      }\n    }, \" Drawing \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 582,\n        columnNumber: 19\n      }\n    }, \" \", element.drawing), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 583,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 584,\n        columnNumber: 19\n      }\n    }, \" Thread \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 585,\n        columnNumber: 19\n      }\n    }, \" \", element.thread), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 586,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 587,\n        columnNumber: 19\n      }\n    }, \" Length \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 588,\n        columnNumber: 19\n      }\n    }, \" \", element.dimensions.length), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 589,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 590,\n        columnNumber: 19\n      }\n    }, \" Shaft \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 591,\n        columnNumber: 19\n      }\n    }, \" \", element.dimensions.brushDiameter), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 592,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 593,\n        columnNumber: 19\n      }\n    }, \" Rod \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 594,\n        columnNumber: 19\n      }\n    }, \" \", element.dimensions.rodDiameter), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 595,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 596,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      color: \"info\",\n      size: \"small\",\n      onClick: () => {\n        addRodClick(element);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 597,\n        columnNumber: 19\n      }\n    }, \"Add Rod\")))))));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 618,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ExportCSV, {\n    csvData: rods,\n    fileName: \"rods\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 619,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 620,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 621,\n      columnNumber: 5\n    }\n  }), rods.map(element => /*#__PURE__*/React.createElement(Tile, {\n    kind: \"ancestor\",\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 623,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Tile, {\n    kind: \"parent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 624,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Tile, {\n    renderAs: \"article\",\n    kind: \"child\",\n    notification: true,\n    color: \"light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 625,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Heading, {\n    size: 7,\n    renderAs: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 626,\n      columnNumber: 15\n    }\n  }, element.name, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 627,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 628,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Tag, {\n    color: \"dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 629,\n      columnNumber: 17\n    }\n  }, \" Drawing \"), /*#__PURE__*/React.createElement(Tag, {\n    color: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 630,\n      columnNumber: 17\n    }\n  }, \" \", element.drawing), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 631,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Tag, {\n    color: \"dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 632,\n      columnNumber: 17\n    }\n  }, \" Thread \"), /*#__PURE__*/React.createElement(Tag, {\n    color: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 633,\n      columnNumber: 17\n    }\n  }, \" \", element.thread), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 634,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Tag, {\n    color: \"dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 635,\n      columnNumber: 17\n    }\n  }, \" Length \"), /*#__PURE__*/React.createElement(Tag, {\n    color: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 636,\n      columnNumber: 17\n    }\n  }, \" \", element.dimensions.length), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 637,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Tag, {\n    color: \"dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 638,\n      columnNumber: 17\n    }\n  }, \" Shaft \"), /*#__PURE__*/React.createElement(Tag, {\n    color: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 639,\n      columnNumber: 17\n    }\n  }, \" \", element.dimensions.brushDiameter), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 640,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Tag, {\n    color: \"dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 641,\n      columnNumber: 17\n    }\n  }, \" Rod \"), /*#__PURE__*/React.createElement(Tag, {\n    color: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 642,\n      columnNumber: 17\n    }\n  }, \" \", element.dimensions.rodDiameter), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 643,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 644,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    color: \"info\",\n    size: \"small\",\n    onClick: () => {\n      addRodClick(element);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 645,\n      columnNumber: 17\n    }\n  }, \"Add Rod\")))))));\n}; //---------------- Rod filter\n//---------------- Wiper filter\n\nexport const WiperFilter = props => {\n  const wiper = props.wiper;\n  const wipers = props.wipers;\n  const setBuildClick = props.setBuildClick;\n  const buildClick = props.buildClick;\n\n  const addWiper = async data => {\n    await axios.post(\"/wiper\", {\n      name: data.name,\n      drawing: data.drawing,\n      mold: data.mold\n    }).then(function (response) {\n      if (response.status === 200) {\n        alert(\"Wiper added to the list!\");\n        console.log(\"Wiper succesfully added\");\n      } else {\n        const err = new Error(response.error);\n        console.log(err);\n        throw err;\n      }\n    }).catch(function (error) {\n      alert(error);\n    });\n  };\n\n  const addWiperClick = element => {\n    addWiper(element);\n    setBuildClick(!buildClick);\n  };\n\n  if (wiper && wiper.name) {\n    const filteredWipers = wipers.filter(element => {\n      return element.name.toLowerCase().indexOf(wiper.name.toLowerCase()) !== -1;\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 708,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ExportCSV, {\n      csvData: filteredWipers,\n      fileName: \"wipers\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 709,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 710,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 711,\n        columnNumber: 7\n      }\n    }), filteredWipers.map(element => /*#__PURE__*/React.createElement(Tile, {\n      kind: \"ancestor\",\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 713,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Tile, {\n      kind: \"parent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 714,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Tile, {\n      renderAs: \"article\",\n      kind: \"child\",\n      notification: true,\n      color: \"light\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 715,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Heading, {\n      size: 7,\n      renderAs: \"h6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 716,\n        columnNumber: 15\n      }\n    }, element.name, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 717,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 718,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Tag, {\n      color: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 719,\n        columnNumber: 17\n      }\n    }, \" Drawing \"), /*#__PURE__*/React.createElement(Tag, {\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 720,\n        columnNumber: 17\n      }\n    }, \" \", element.drawing), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 721,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 722,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      color: \"info\",\n      size: \"small\",\n      onClick: () => {\n        addWiperClick(element);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 723,\n        columnNumber: 17\n      }\n    }, \"Add Wiper\")))))));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 743,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ExportCSV, {\n    csvData: wipers,\n    fileName: \"wipers\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 744,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 745,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 746,\n      columnNumber: 5\n    }\n  }), wipers.map(element => /*#__PURE__*/React.createElement(Tile, {\n    kind: \"ancestor\",\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 748,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Tile, {\n    kind: \"parent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 749,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Tile, {\n    renderAs: \"article\",\n    kind: \"child\",\n    notification: true,\n    color: \"light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 750,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Heading, {\n    size: 7,\n    renderAs: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 751,\n      columnNumber: 15\n    }\n  }, element.name, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 752,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 753,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Tag, {\n    color: \"dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 754,\n      columnNumber: 17\n    }\n  }, \" Drawing \"), /*#__PURE__*/React.createElement(Tag, {\n    color: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 755,\n      columnNumber: 17\n    }\n  }, \" \", element.drawing), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 756,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 757,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    color: \"info\",\n    size: \"small\",\n    onClick: () => {\n      addWiperClick(element);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 758,\n      columnNumber: 17\n    }\n  }, \"Add Wiper\")))))));\n}; //---------------- Wiper filter","map":{"version":3,"sources":["/home/leon/Documentos/proyectos/mascara/client/src/components/Display.component.js"],"names":["React","useState","useEffect","Button","Tile","Heading","Image","Tag","ExportCSV","Control","Input","axios","BottleDisplay","props","bottlesToDisplay","map","element","name","drawing","thread","depth","addBottleClick","BrushFilter","brush","brushes","claim","rod","bottle","setBuildClick","buildClick","addBrush","data","post","original","shaftLength","shaftDiameter","brushLength","brushDiameter","type","then","response","status","alert","console","log","err","Error","error","catch","addBrushClick","filteredBrushes","filter","toLowerCase","indexOf","require","definition","volumizing","lengthening","curling","plumping","mascaraGap","Number","dimensions","length","RodFilter","rods","addRod","rodDiameter","addRodClick","filteredRods","depthDiff","brushRodDiff","wipeDelta","WiperFilter","wiper","wipers","addWiper","mold","addWiperClick","filteredWipers"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport Button from 'react-bulma-components/lib/components/button';\nimport Tile from 'react-bulma-components/lib/components/tile';\nimport Heading from 'react-bulma-components/lib/components/heading';\nimport Image from 'react-bulma-components/lib/components/image';\nimport Tag from 'react-bulma-components/lib/components/tag';\nimport ExportCSV from './ExportCSV.component';\nimport {\n  Control,\n  Input,\n} from 'react-bulma-components/lib/components/form';\n\nimport axios from \"axios\";\nimport '../App.css';\n\n//---------------- Bottle filter\n\nexport const BottleDisplay = (props) => {\n  return (\n    <div>\n      <ExportCSV csvData={props.bottlesToDisplay} fileName=\"bottles\" />\n      <br />\n      <br />\n      {bottlesToDisplay.map((element) => (\n        <Tile kind=\"ancestor\" className=\"App\">\n          <Tile kind=\"parent\">\n            <Tile renderAs=\"article\" kind=\"child\" notification color=\"light\">\n              <Heading size={7} renderAs=\"h6\">{element.name}\n                <br/>\n                <br/>\n                <Tag color=\"dark\" className=\"App\"> Drawing </Tag>\n                <Tag color=\"info\"> {element.drawing}</Tag>\n                <br/>\n                <Tag color=\"dark\"> Thread </Tag>\n                <Tag color=\"info\"> {element.thread}</Tag>\n              <br/>\n                <Tag color=\"dark\"> Depth </Tag>\n                <Tag color=\"info\"> {element.depth}</Tag>\n              <br/>\n              <br/>\n              <Button\n                type=\"submit\"\n                color=\"info\"\n                onClick={() => {\n                  addBottleClick(element);\n                }}\n                size=\"small\"\n              >\n                Add Bottle\n              </Button>\n              </Heading>\n            </Tile>\n          </Tile>\n        </Tile>\n      ))}\n    </div>\n  );\n}\n\n//---------------- Bottle filter\n\n//---------------- Brush filter\n\nexport const BrushFilter = (props) => {\n  const brush = props.brush;\n  const brushes = props.brushes;\n  const claim = props.claim;\n  const rod = props.rod;\n  const bottle = props.bottle;\n  const setBuildClick = props.setBuildClick;\n  const buildClick = props.buildClick;\n\n  const addBrush = async (data) => {\n    await axios.post(\"/brush\", {\n        brush: data.brush,\n        original: data.original,\n        shaftLength: data.shaftLength,\n        shaftDiameter: data.shaftDiameter,\n        brushLength: data.brushLength,\n        brushDiameter: data.brushDiameter,\n        type: data.type\n      })\n      .then(function (response) {\n        if (response.status === 200) {\n          alert(\"Brush added to the list!\");\n          console.log(\"Succesfully added\");\n        } else {\n          const err = new Error(response.error);\n          console.log(err);\n          throw err;\n        }\n      })\n      .catch(function (error) {\n        alert(error);\n      });\n  };\n\n  const addBrushClick = (element) => {\n    addBrush(element);\n    setBuildClick(!buildClick);\n  };\n\n   if (brush && brush.brush){\n    const filteredBrushes = brushes.filter( element => {\n      return element.brush.toLowerCase().indexOf(brush.brush.toLowerCase()) !== -1;\n    });\n\n    return (\n      <div>\n      <ExportCSV csvData={filteredBrushes} fileName=\"brushes\" />\n      <br />\n      <br />\n        {filteredBrushes.map((element) => (\n          <Tile kind=\"ancestor\" className=\"App\">\n            <Tile kind=\"parent\">\n              <Tile renderAs=\"article\" kind=\"child\" notification color=\"light\">\n                <Heading size={7} renderAs=\"h6\" >{element.brush}\n                  <br/>\n                  <br/>\n                  <Image rounded=\"true\" key={element.brush} size=\"2by1\" className=\"center\" src={require(`../images/${element.brush}.jpg`)} alt=\"\" />\n                  <br/>\n                  <Tag color=\"dark\"> Drawing </Tag>\n                  <Tag color=\"info\"> {element.drawing}</Tag>\n                  <br/>\n                  <Tag color=\"dark\"> Type </Tag>\n                  <Tag color=\"info\"> {element.type}</Tag>\n                  <br/>\n                  <Tag color=\"dark\"> Length </Tag>\n                  <Tag color=\"info\"> {element.brushLength}</Tag>\n                  <br/>\n                  <Tag color=\"dark\"> Shaft </Tag>\n                  <Tag color=\"info\"> {element.shaftDiameter}</Tag>\n                  <br/>\n                  <Tag color=\"dark\"> Brush </Tag>\n                  <Tag color=\"info\"> {element.brushDiameter}</Tag>\n                  <br/>\n                  <br/>\n                  <Button\n                    type=\"submit\"\n                    color=\"info\"\n                    size=\"small\"\n                    onClick={() => {\n                      addBrushClick(element);\n                    }}\n                  >\n                    Add Brush\n                  </Button>\n                </Heading>\n              </Tile>\n            </Tile>\n          </Tile>\n        ))}\n      </div>\n    );\n\n  } else if (claim){\n    const filteredBrushes = brushes.filter( element => {\n      if (claim === \"definition\" && element.claim.definition === true) {\n        return element;\n      } else if (claim === \"volumizing\" && element.claim.volumizing === true)  {\n        return element;\n      } else if (claim === \"lengthening\" && element.claim.lengthening === true) {\n        return element;\n      } else if (claim === \"curling\" && element.claim.curling === true) {\n        return element;\n      } else if (claim === \"plumping\" && element.claim.plumping === true) {\n        return element;\n      } else {\n        return \"\";\n      }\n    });\n\n    return (\n      <div>\n      <ExportCSV csvData={filteredBrushes} fileName=\"brushes\" />\n      <br />\n      <br />\n        {filteredBrushes.map((element) => (\n          <Tile kind=\"ancestor\" className=\"App\">\n            <Tile kind=\"parent\">\n              <Tile renderAs=\"article\" kind=\"child\" notification color=\"light\">\n                <Heading size={7} renderAs=\"h6\" >{element.brush}\n                  <br/>\n                  <br/>\n                  <Image rounded=\"true\" key={element.brush} size=\"2by1\" className=\"center\" src={require(`../images/${element.brush}.jpg`)} alt=\"\" />\n                  <br/>\n                  <Tag color=\"dark\"> Drawing </Tag>\n                  <Tag color=\"info\"> {element.drawing}</Tag>\n                  <br/>\n                  <Tag color=\"dark\"> Type </Tag>\n                  <Tag color=\"info\"> {element.type}</Tag>\n                  <br/>\n                  <Tag color=\"dark\"> Length </Tag>\n                  <Tag color=\"info\"> {element.brushLength}</Tag>\n                  <br/>\n                  <Tag color=\"dark\"> Shaft </Tag>\n                  <Tag color=\"info\"> {element.shaftDiameter}</Tag>\n                  <br/>\n                  <Tag color=\"dark\"> Brush </Tag>\n                  <Tag color=\"info\"> {element.brushDiameter}</Tag>\n                  <br/>\n                  <br/>\n                  <Button\n                    type=\"submit\"\n                    color=\"info\"\n                    size=\"small\"\n                    onClick={() => {\n                      addBrushClick(element);\n                    }}\n                  >\n                    Add Brush\n                  </Button>\n                </Heading>\n              </Tile>\n            </Tile>\n          </Tile>\n        ))}\n      </div>\n    );\n\n  } else if (rod && rod.name && bottle && bottle.name){\n    const filteredBrushes = brushes.filter( element => {\n      let mascaraGap =  (Number(bottle.depth) - (Number(element.brushLength) + Number(rod.dimensions.length)));\n      if (mascaraGap > 1 && mascaraGap < 6) {\n        return element;\n      } else {\n        return null ;\n      }\n    });\n\n    return (\n      <div>\n      <ExportCSV csvData={filteredBrushes} fileName=\"brushes\" />\n      <br />\n      <br />\n        {filteredBrushes.map((element) => (\n          <Tile kind=\"ancestor\" className=\"App\">\n            <Tile kind=\"parent\">\n              <Tile renderAs=\"article\" kind=\"child\" notification color=\"light\">\n                <Heading size={7} renderAs=\"h6\" >{element.brush}\n                  <br/>\n                  <br/>\n                  <Image rounded=\"true\" key={element.brush} size=\"2by1\" className=\"center\" src={require(`../images/${element.brush}.jpg`)} alt=\"\" />\n                  <br/>\n                  <Tag color=\"dark\"> Drawing </Tag>\n                  <Tag color=\"info\"> {element.drawing}</Tag>\n                  <br/>\n                  <Tag color=\"dark\"> Type </Tag>\n                  <Tag color=\"info\"> {element.type}</Tag>\n                  <br/>\n                  <Tag color=\"dark\"> Length </Tag>\n                  <Tag color=\"info\"> {element.brushLength}</Tag>\n                  <br/>\n                  <Tag color=\"dark\"> Shaft </Tag>\n                  <Tag color=\"info\"> {element.shaftDiameter}</Tag>\n                  <br/>\n                  <Tag color=\"dark\"> Brush </Tag>\n                  <Tag color=\"info\"> {element.brushDiameter}</Tag>\n                  <br/>\n                  <br/>\n                  <Button\n                    type=\"submit\"\n                    color=\"info\"\n                    size=\"small\"\n                    onClick={() => {\n                      addBrushClick(element);\n                    }}\n                  >\n                    Add Brush\n                  </Button>\n                </Heading>\n              </Tile>\n            </Tile>\n          </Tile>\n        ))}\n      </div>\n    );\n\n  }\n\n  return (\n    <div>\n    <ExportCSV csvData={brushes} fileName=\"brushes\" />\n    <br />\n    <br />\n      {brushes.map((element) => (\n        <Tile kind=\"ancestor\" className=\"App\">\n          <Tile kind=\"parent\">\n            <Tile renderAs=\"article\" kind=\"child\" notification color=\"light\">\n              <Heading size={7} renderAs=\"h6\" >{element.brush}\n                <br/>\n                <br/>\n                <Image rounded=\"true\" key={element.brush} size=\"2by1\" className=\"center\" src={require(`../images/${element.brush}.jpg`)} alt=\"\" />\n                <br/>\n                <Tag color=\"dark\"> Drawing </Tag>\n                <Tag color=\"info\"> {element.drawing}</Tag>\n                <br/>\n                <Tag color=\"dark\"> Type </Tag>\n                <Tag color=\"info\"> {element.type}</Tag>\n                <br/>\n                <Tag color=\"dark\"> Length </Tag>\n                <Tag color=\"info\"> {element.brushLength}</Tag>\n                <br/>\n                <Tag color=\"dark\"> Shaft </Tag>\n                <Tag color=\"info\"> {element.shaftDiameter}</Tag>\n                <br/>\n                <Tag color=\"dark\"> Brush </Tag>\n                <Tag color=\"info\"> {element.brushDiameter}</Tag>\n                <br/>\n                <br/>\n                <Button\n                  type=\"submit\"\n                  color=\"info\"\n                  size=\"small\"\n                  onClick={() => {\n                    addBrushClick(element);\n                  }}\n                >\n                  Add Brush\n                </Button>\n              </Heading>\n            </Tile>\n          </Tile>\n        </Tile>\n      ))}\n    </div>\n  );\n};\n\n//---------------- Brush filter\n\n//---------------- Rod filter\n\nexport const RodFilter = (props) => {\n  const rod = props.rod;\n  const rods = props.rods;\n  const bottle = props.bottle;\n  const brush = props.brush;\n  const setBuildClick = props.setBuildClick;\n  const buildClick = props.buildClick;\n\n  const addRod = async (data) => {\n    await axios.post(\"/rod\", {\n        name: data.name,\n        drawing: data.drawing,\n        thread: data.thread,\n        dimensions: {\n          length: data.dimensions.length,\n          rodDiameter: data.dimensions.rodDiameter,\n          brushDiameter: data.dimensions.brushDiameter,\n        }\n      })\n      .then(function (response) {\n        if (response.status === 200) {\n          alert(\"Rod added to the list!\");\n          console.log(\"Succesfully added\");\n        } else {\n          const err = new Error(response.error);\n          console.log(err);\n          throw err;\n        }\n      })\n      .catch(function (error) {\n        alert(error);\n      });\n  };\n\n  const addRodClick = (element) => {\n    addRod(element);\n    setBuildClick(!buildClick);\n  };\n\n  if (rod && rod.name){\n    const filteredRods = rods.filter( element => {\n      return element.name.toLowerCase().indexOf(rod.name.toLowerCase()) !== -1;\n    });\n\n    return (\n      <div>\n      <ExportCSV csvData={filteredRods} fileName=\"rods\" />\n      <br />\n      <br />\n        {filteredRods.map((element) => (\n          <Tile kind=\"ancestor\" className=\"App\">\n            <Tile kind=\"parent\">\n              <Tile renderAs=\"article\" kind=\"child\" notification color=\"light\">\n                <Heading size={7} renderAs=\"h6\" >{element.name}\n                  <br/>\n                  <br/>\n                  <Tag color=\"dark\"> Drawing </Tag>\n                  <Tag color=\"info\"> {element.drawing}</Tag>\n                  <br/>\n                  <Tag color=\"dark\"> Thread </Tag>\n                  <Tag color=\"info\"> {element.thread}</Tag>\n                  <br/>\n                  <Tag color=\"dark\"> Length </Tag>\n                  <Tag color=\"info\"> {element.dimensions.length}</Tag>\n                  <br/>\n                  <Tag color=\"dark\"> Shaft </Tag>\n                  <Tag color=\"info\"> {element.dimensions.brushDiameter}</Tag>\n                  <br/>\n                  <Tag color=\"dark\"> Rod </Tag>\n                  <Tag color=\"info\"> {element.dimensions.rodDiameter}</Tag>\n                  <br/>\n                  <br/>\n                  <Button\n                    type=\"submit\"\n                    color=\"info\"\n                    size=\"small\"\n                    onClick={() => {\n                      addRodClick(element);\n                    }}\n                  >\n                    Add Rod\n                  </Button>\n                </Heading>\n              </Tile>\n            </Tile>\n          </Tile>\n        ))}\n      </div>\n    );\n\n  } else if (bottle && bottle.thread && bottle.depth){\n    const filteredRods = rods.filter( element => {\n      let depthDiff = (Number(bottle.depth) - Number(element.dimensions.length));\n      if (element.thread && (depthDiff > 0)) {\n        return element.thread.toLowerCase().indexOf(bottle.thread.toLowerCase()) !== -1;\n      } else {\n        return \"\";\n      }\n    });\n\n    return (\n      <div>\n      <ExportCSV csvData={filteredRods} fileName=\"rods\" />\n      <br />\n      <br />\n        {filteredRods.map((element) => (\n          <Tile kind=\"ancestor\" className=\"App\">\n            <Tile kind=\"parent\">\n              <Tile renderAs=\"article\" kind=\"child\" notification color=\"light\">\n                <Heading size={7} renderAs=\"h6\" >{element.name}\n                  <br/>\n                  <br/>\n                  <Tag color=\"dark\"> Drawing </Tag>\n                  <Tag color=\"info\"> {element.drawing}</Tag>\n                  <br/>\n                  <Tag color=\"dark\"> Thread </Tag>\n                  <Tag color=\"info\"> {element.thread}</Tag>\n                  <br/>\n                  <Tag color=\"dark\"> Length </Tag>\n                  <Tag color=\"info\"> {element.dimensions.length}</Tag>\n                  <br/>\n                  <Tag color=\"dark\"> Shaft </Tag>\n                  <Tag color=\"info\"> {element.dimensions.brushDiameter}</Tag>\n                  <br/>\n                  <Tag color=\"dark\"> Rod </Tag>\n                  <Tag color=\"info\"> {element.dimensions.rodDiameter}</Tag>\n                  <br/>\n                  <br/>\n                  <Button\n                    type=\"submit\"\n                    color=\"info\"\n                    size=\"small\"\n                    onClick={() => {\n                      addRodClick(element);\n                    }}\n                  >\n                    Add Rod\n                  </Button>\n                </Heading>\n              </Tile>\n            </Tile>\n          </Tile>\n        ))}\n      </div>\n  );\n\n  } else if (bottle && bottle.thread){\n    const filteredRods = rods.filter( element => {\n      if (element.thread) {\n        return element.thread.toLowerCase().indexOf(bottle.thread.toLowerCase()) !== -1;\n      } else {\n        return \"\";\n      }\n    });\n\n    return (\n      <div>\n      <ExportCSV csvData={filteredRods} fileName=\"rods\" />\n      <br />\n      <br />\n        {filteredRods.map((element) => (\n          <Tile kind=\"ancestor\" className=\"App\">\n            <Tile kind=\"parent\">\n              <Tile renderAs=\"article\" kind=\"child\" notification color=\"light\">\n                <Heading size={7} renderAs=\"h6\" >{element.name}\n                  <br/>\n                  <br/>\n                  <Tag color=\"dark\"> Drawing </Tag>\n                  <Tag color=\"info\"> {element.drawing}</Tag>\n                  <br/>\n                  <Tag color=\"dark\"> Thread </Tag>\n                  <Tag color=\"info\"> {element.thread}</Tag>\n                  <br/>\n                  <Tag color=\"dark\"> Length </Tag>\n                  <Tag color=\"info\"> {element.dimensions.length}</Tag>\n                  <br/>\n                  <Tag color=\"dark\"> Shaft </Tag>\n                  <Tag color=\"info\"> {element.dimensions.brushDiameter}</Tag>\n                  <br/>\n                  <Tag color=\"dark\"> Rod </Tag>\n                  <Tag color=\"info\"> {element.dimensions.rodDiameter}</Tag>\n                  <br/>\n                  <br/>\n                  <Button\n                    type=\"submit\"\n                    color=\"info\"\n                    size=\"small\"\n                    onClick={() => {\n                      addRodClick(element);\n                    }}\n                  >\n                    Add Rod\n                  </Button>\n                </Heading>\n              </Tile>\n            </Tile>\n          </Tile>\n        ))}\n      </div>\n  );\n\n  } else if (brush && brush.type){\n    const filteredRods = rods.filter( element => {\n      let brushRodDiff =  Number(element.dimensions.brushDiameter) - Number(brush.shaftDiameter);\n      let wipeDelta =  Number(brush.brushDiameter) - Number(element.dimensions.rodDiameter) ;\n      if (brush.type === \"INYECTADO\" && wipeDelta > 0.5 && wipeDelta < 4.8) {\n        if (brushRodDiff > 0.05 && brushRodDiff < 0.15){\n          return element;\n        } else {\n          return \"\";\n        }\n      }\n      if (brush.type === \"NYLON\" && wipeDelta > 0.8 && wipeDelta < 6.4) {\n        if (brushRodDiff > -0.05 && brushRodDiff < 0.1){\n          return element;\n        } else {\n          return \"\";\n        }\n      }\n      if (brush.type === \"LIP GLOSS\" && wipeDelta > -2 && wipeDelta < 3) {\n        if (brushRodDiff > 0 && brushRodDiff < 0.2){\n          return element;\n        } else {\n          return \"\";\n        }\n      }\n      if (brush.type === \"DELINEADOR\" && wipeDelta > -2 && wipeDelta < -1) {\n        if (brushRodDiff > -0.05 && brushRodDiff < 0.1){\n          return element;\n        } else {\n          return \"\";\n        }\n      }\n    });\n\n    return (\n      <div>\n      <ExportCSV csvData={filteredRods} fileName=\"rods\" />\n      <br />\n      <br />\n        {filteredRods.map((element) => (\n          <Tile kind=\"ancestor\" className=\"App\">\n            <Tile kind=\"parent\">\n              <Tile renderAs=\"article\" kind=\"child\" notification color=\"light\">\n                <Heading size={7} renderAs=\"h6\" >{element.name}\n                  <br/>\n                  <br/>\n                  <Tag color=\"dark\"> Drawing </Tag>\n                  <Tag color=\"info\"> {element.drawing}</Tag>\n                  <br/>\n                  <Tag color=\"dark\"> Thread </Tag>\n                  <Tag color=\"info\"> {element.thread}</Tag>\n                  <br/>\n                  <Tag color=\"dark\"> Length </Tag>\n                  <Tag color=\"info\"> {element.dimensions.length}</Tag>\n                  <br/>\n                  <Tag color=\"dark\"> Shaft </Tag>\n                  <Tag color=\"info\"> {element.dimensions.brushDiameter}</Tag>\n                  <br/>\n                  <Tag color=\"dark\"> Rod </Tag>\n                  <Tag color=\"info\"> {element.dimensions.rodDiameter}</Tag>\n                  <br/>\n                  <br/>\n                  <Button\n                    type=\"submit\"\n                    color=\"info\"\n                    size=\"small\"\n                    onClick={() => {\n                      addRodClick(element);\n                    }}\n                  >\n                    Add Rod\n                  </Button>\n                </Heading>\n              </Tile>\n            </Tile>\n          </Tile>\n        ))}\n      </div>\n  );\n\n  }\n\n  return (\n    <div>\n    <ExportCSV csvData={rods} fileName=\"rods\" />\n    <br />\n    <br />\n      {rods.map((element) => (\n        <Tile kind=\"ancestor\" className=\"App\">\n          <Tile kind=\"parent\">\n            <Tile renderAs=\"article\" kind=\"child\" notification color=\"light\">\n              <Heading size={7} renderAs=\"h6\" >{element.name}\n                <br/>\n                <br/>\n                <Tag color=\"dark\"> Drawing </Tag>\n                <Tag color=\"info\"> {element.drawing}</Tag>\n                <br/>\n                <Tag color=\"dark\"> Thread </Tag>\n                <Tag color=\"info\"> {element.thread}</Tag>\n                <br/>\n                <Tag color=\"dark\"> Length </Tag>\n                <Tag color=\"info\"> {element.dimensions.length}</Tag>\n                <br/>\n                <Tag color=\"dark\"> Shaft </Tag>\n                <Tag color=\"info\"> {element.dimensions.brushDiameter}</Tag>\n                <br/>\n                <Tag color=\"dark\"> Rod </Tag>\n                <Tag color=\"info\"> {element.dimensions.rodDiameter}</Tag>\n                <br/>\n                <br/>\n                <Button\n                  type=\"submit\"\n                  color=\"info\"\n                  size=\"small\"\n                  onClick={() => {\n                    addRodClick(element);\n                  }}\n                >\n                  Add Rod\n                </Button>\n              </Heading>\n            </Tile>\n          </Tile>\n        </Tile>\n      ))}\n    </div>\n\n  );\n\n};\n\n//---------------- Rod filter\n\n//---------------- Wiper filter\n\nexport const WiperFilter = (props) => {\n  const wiper = props.wiper;\n  const wipers = props.wipers;\n  const setBuildClick = props.setBuildClick;\n  const buildClick = props.buildClick;\n\n  const addWiper = async (data) => {\n    await axios.post(\"/wiper\", {\n        name: data.name,\n        drawing: data.drawing,\n        mold: data.mold,\n      })\n      .then(function (response) {\n        if (response.status === 200) {\n          alert(\"Wiper added to the list!\");\n          console.log(\"Wiper succesfully added\");\n        } else {\n          const err = new Error(response.error);\n          console.log(err);\n          throw err;\n        }\n      })\n      .catch(function (error) {\n        alert(error);\n      });\n  };\n\n  const addWiperClick = (element) => {\n    addWiper(element);\n    setBuildClick(!buildClick);\n  };\n\n   if (wiper && wiper.name){\n    const filteredWipers = wipers.filter( element => {\n      return element.name.toLowerCase().indexOf(wiper.name.toLowerCase()) !== -1;\n    });\n\n    return (\n      <div>\n      <ExportCSV csvData={filteredWipers} fileName=\"wipers\" />\n      <br />\n      <br />\n        {filteredWipers.map((element) => (\n          <Tile kind=\"ancestor\" className=\"App\">\n            <Tile kind=\"parent\">\n              <Tile renderAs=\"article\" kind=\"child\" notification color=\"light\">\n              <Heading size={7} renderAs=\"h6\" >{element.name}\n                <br/>\n                <br/>\n                <Tag color=\"dark\"> Drawing </Tag>\n                <Tag color=\"info\"> {element.drawing}</Tag>\n                <br/>\n                <br/>\n                <Button\n                  type=\"submit\"\n                  color=\"info\"\n                  size=\"small\"\n                  onClick={() => {\n                    addWiperClick(element);\n                  }}\n                >\n                  Add Wiper\n                </Button>\n              </Heading>\n              </Tile>\n            </Tile>\n          </Tile>\n        ))}\n      </div>\n    );\n  }\n\n  return (\n    <div>\n    <ExportCSV csvData={wipers} fileName=\"wipers\" />\n    <br />\n    <br />\n      {wipers.map((element) => (\n        <Tile kind=\"ancestor\" className=\"App\">\n          <Tile kind=\"parent\">\n            <Tile renderAs=\"article\" kind=\"child\" notification color=\"light\">\n              <Heading size={7} renderAs=\"h6\" >{element.name}\n                <br/>\n                <br/>\n                <Tag color=\"dark\"> Drawing </Tag>\n                <Tag color=\"info\"> {element.drawing}</Tag>\n                <br/>\n                <br/>\n                <Button\n                  type=\"submit\"\n                  color=\"info\"\n                  size=\"small\"\n                  onClick={() => {\n                    addWiperClick(element);\n                  }}\n                >\n                  Add Wiper\n                </Button>\n              </Heading>\n            </Tile>\n          </Tile>\n        </Tile>\n      ))}\n    </div>\n  );\n};\n\n//---------------- Wiper filter\n"]},"metadata":{},"sourceType":"module"}
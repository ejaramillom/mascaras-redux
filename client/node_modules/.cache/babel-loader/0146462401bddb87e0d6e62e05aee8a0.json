{"ast":null,"code":"function ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport PropTypes from 'prop-types';\nimport _classnames from 'classnames';\nvar SPACING_PROPS = ['mt', 'mr', 'mb', 'ml', 'mx', 'my', 'pt', 'pr', 'pb', 'pl', 'px', 'py'];\nvar SIZES = [0, 1, 2, 3, 4, 5, 6];\nexport default _objectSpread(_objectSpread({}, SPACING_PROPS.reduce(function (props, name) {\n  props.propTypes[name] = PropTypes.oneOf(SIZES);\n  props.defaultProps[name] = undefined;\n  return props;\n}, {\n  propTypes: {},\n  defaultProps: {}\n})), {}, {\n  classnames: function classnames(props) {\n    return _classnames(SPACING_PROPS.reduce(function (classes, spacing) {\n      var spacingValue = props[spacing];\n      classes[\"\".concat(spacing, \"-\").concat(spacingValue)] = spacingValue;\n      return classes;\n    }, {}));\n  },\n  clean: function clean(props) {\n    return Object.keys(props).reduce(function (cleaned, propName) {\n      if (!SPACING_PROPS.includes(propName)) {\n        cleaned[propName] = props[propName];\n      }\n\n      return cleaned;\n    }, {});\n  }\n});","map":{"version":3,"sources":["../../src/modifiers/spacing.js"],"names":["SPACING_PROPS","SIZES","props","PropTypes","propTypes","defaultProps","classnames","spacingValue","classes","clean","cleaned"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAA,SAAA,MAAA,YAAA;AACA,OAAA,WAAA,MAAA,YAAA;AAEA,IAAMA,aAAa,GAAG,CAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAtB,IAAsB,CAAtB;AAcA,IAAMC,KAAK,GAAG,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAd,CAAc,CAAd;AAEA,eAAA,aAAA,CAAA,aAAA,CAAA,EAAA,EACK,aAAa,CAAb,MAAA,CACD,UAAA,KAAA,EAAA,IAAA,EAAiB;AACfC,EAAAA,KAAK,CAALA,SAAAA,CAAAA,IAAAA,IAAwBC,SAAS,CAATA,KAAAA,CAAxBD,KAAwBC,CAAxBD;AACAA,EAAAA,KAAK,CAALA,YAAAA,CAAAA,IAAAA,IAAAA,SAAAA;AACA,SAAA,KAAA;AAJD,CAAA,EAMD;AAAEE,EAAAA,SAAS,EAAX,EAAA;AAAiBC,EAAAA,YAAY,EAAE;AAA/B,CANC,CADL,CAAA,EAAA,EAAA,EAAA;AASEC,EAAAA,UAAU,EAAE,SAAA,UAAA,CAAA,KAAA,EAAA;AAAA,WACVA,WAAU,CACR,aAAa,CAAb,MAAA,CAAqB,UAAA,OAAA,EAAA,OAAA,EAAsB;AACzC,UAAMC,YAAY,GAAGL,KAAK,CAA1B,OAA0B,CAA1B;AACAM,MAAAA,OAAO,CAAA,GAAA,MAAA,CAAA,OAAA,EAAA,GAAA,EAAA,MAAA,CAAPA,YAAO,CAAA,CAAPA,GAAAA,YAAAA;AACA,aAAA,OAAA;AAHF,KAAA,EAFQ,EAER,CADQ,CADA;AATd,GAAA;AAiBEC,EAAAA,KAAK,EAAE,SAAA,KAAA,CAAA,KAAA,EAAA;AAAA,WACL,MAAM,CAAN,IAAA,CAAA,KAAA,EAAA,MAAA,CAA0B,UAAA,OAAA,EAAA,QAAA,EAAuB;AAC/C,UAAI,CAACT,aAAa,CAAbA,QAAAA,CAAL,QAAKA,CAAL,EAAuC;AACrCU,QAAAA,OAAO,CAAPA,QAAO,CAAPA,GAAoBR,KAAK,CAAzBQ,QAAyB,CAAzBA;AACD;;AACD,aAAA,OAAA;AAJF,KAAA,EADK,EACL,CADK;AAAA;AAjBT,CAAA,CAAA","sourcesContent":["import PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nconst SPACING_PROPS = [\n  'mt',\n  'mr',\n  'mb',\n  'ml',\n  'mx',\n  'my',\n  'pt',\n  'pr',\n  'pb',\n  'pl',\n  'px',\n  'py',\n];\nconst SIZES = [0, 1, 2, 3, 4, 5, 6];\n\nexport default {\n  ...SPACING_PROPS.reduce(\n    (props, name) => {\n      props.propTypes[name] = PropTypes.oneOf(SIZES);\n      props.defaultProps[name] = undefined;\n      return props;\n    },\n    { propTypes: {}, defaultProps: {} },\n  ),\n  classnames: (props) =>\n    classnames(\n      SPACING_PROPS.reduce((classes, spacing) => {\n        const spacingValue = props[spacing];\n        classes[`${spacing}-${spacingValue}`] = spacingValue;\n        return classes;\n      }, {}),\n    ),\n  clean: (props) =>\n    Object.keys(props).reduce((cleaned, propName) => {\n      if (!SPACING_PROPS.includes(propName)) {\n        cleaned[propName] = props[propName];\n      }\n      return cleaned;\n    }, {}),\n};\n"]},"metadata":{},"sourceType":"module"}
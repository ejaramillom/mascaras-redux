{"ast":null,"code":"var _jsxFileName = \"/home/leon/Documentos/proyectos/react/mascaras/client/src/middlewares/services.js\";\nimport axios from \"axios\";\nimport { useQuery } from \"react-query\";\nimport Section from \"react-bulma-components/lib/components/section\";\nexport const getBottles = () => {\n  return fetch(\"/bottle\").then(response => response.json());\n};\nexport const getBrushes = () => {\n  return fetch(\"/brush\").then(response => response.json());\n};\nexport const getCaps = () => {\n  return fetch(\"/cap\").then(response => response.json());\n};\nexport const getRods = () => {\n  return fetch(\"/rod\").then(response => response.json());\n};\nexport const getWipers = () => {\n  return fetch(\"/wiper\").then(response => response.json());\n};\nexport const getBuild = async () => {\n  const {\n    data\n  } = await axios.get(\"/build\");\n  return data;\n};\nexport const MascaraBuild = async () => {\n  const {\n    isLoading,\n    error,\n    data\n  } = useQuery(\"build\", getBuild);\n  if (isLoading) return \"Loading...\";\n  if (error) return \"Oops! \";\n  return /*#__PURE__*/React.createElement(Section, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, data.map(element => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, element.bottle ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    key: element.bottle.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, element.bottle.name), /*#__PURE__*/React.createElement(\"li\", {\n    key: element.bottle.thread,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, element.bottle.thread, \" \")) : \"\", element.brush ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    key: element.brush.brush,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, element.brush.brush), /*#__PURE__*/React.createElement(\"li\", {\n    key: element.brush.type,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, element.brush.type)) : \"\", element.rod ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    key: element.rod.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, element.rod.name), /*#__PURE__*/React.createElement(\"li\", {\n    key: element.rod.thread,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, element.rod.thread)) : \"\")));\n};","map":{"version":3,"sources":["/home/leon/Documentos/proyectos/react/mascaras/client/src/middlewares/services.js"],"names":["axios","useQuery","Section","getBottles","fetch","then","response","json","getBrushes","getCaps","getRods","getWipers","getBuild","data","get","MascaraBuild","isLoading","error","map","element","bottle","name","thread","brush","type","rod"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { useQuery } from \"react-query\";\nimport Section from \"react-bulma-components/lib/components/section\";\n\nexport const getBottles = () => {\n  return fetch(\"/bottle\")\n  .then(response => response.json());\n}\nexport const getBrushes = () => {\n  return fetch(\"/brush\")\n  .then(response => response.json());\n}\nexport const getCaps = () => {\n  return fetch(\"/cap\")\n  .then(response => response.json());\n}\nexport const getRods = () => {\n  return fetch(\"/rod\")\n  .then(response => response.json());\n}\nexport const getWipers = () => {\n  return fetch(\"/wiper\")\n  .then(response => response.json());\n}\nexport const getBuild = async () => {\n const { data } = await axios.get(\"/build\");\n return data;\n};\n\nexport const MascaraBuild = async () => {\n  const { isLoading, error, data } = useQuery(\"build\", getBuild);\n  if (isLoading) return \"Loading...\";\n  if (error) return \"Oops! \";\n  return (<Section>\n    { data.map( element =>\n      <div>\n        {element.bottle ?\n          <div>\n            <li key = { element.bottle.name }>{ element.bottle.name }</li>\n            <li key = { element.bottle.thread }>{ element.bottle.thread } </li>\n          </div>\n          : \"\" }\n        {element.brush ?\n          <div>\n            <li key = { element.brush.brush }>{ element.brush.brush }</li>\n            <li key = { element.brush.type }>{ element.brush.type }</li>\n          </div>\n          : \"\" }\n        {element.rod ?\n          <div>\n            <li key = { element.rod.name }>{ element.rod.name }</li>\n            <li key = { element.rod.thread }>{ element.rod.thread }</li>\n          </div>\n          : \"\" }\n      </div>\n    )}\n  </Section>\n  )\n};\n"]},"metadata":{},"sourceType":"module"}
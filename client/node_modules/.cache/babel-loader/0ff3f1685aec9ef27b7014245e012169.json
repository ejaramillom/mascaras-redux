{"ast":null,"code":"function ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport Button from '../../../button';\nimport modifiers from '../../../../modifiers';\nimport Element from '../../../element';\n\nvar ModalCardHead = function ModalCardHead(_ref) {\n  var children = _ref.children,\n      className = _ref.className,\n      showClose = _ref.showClose,\n      onClose = _ref.onClose,\n      props = _objectWithoutProperties(_ref, [\"children\", \"className\", \"showClose\", \"onClose\"]);\n\n  return /*#__PURE__*/React.createElement(Element, _extends({}, props, {\n    className: classnames('modal-card-head', className)\n  }), children, showClose && /*#__PURE__*/React.createElement(Button, {\n    remove: true,\n    onClick: onClose\n  }));\n};\n\nModalCardHead.propTypes = _objectSpread(_objectSpread({}, modifiers.propTypes), {}, {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  style: PropTypes.shape({}),\n  showClose: PropTypes.bool,\n  onClose: PropTypes.func\n});\nModalCardHead.defaultProps = _objectSpread(_objectSpread({}, modifiers.defaultProps), {}, {\n  children: null,\n  className: undefined,\n  style: undefined,\n  showClose: true,\n  onClose: undefined,\n  renderAs: 'header'\n});\nexport default ModalCardHead;","map":{"version":3,"sources":["../../../../../src/components/modal/components/card/head.js"],"names":["ModalCardHead","children","className","showClose","onClose","props","classnames","modifiers","PropTypes","style","func","renderAs"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,SAAA,MAAA,YAAA;AACA,OAAA,UAAA,MAAA,YAAA;AAEA,OAAA,MAAA,MAAA,iBAAA;AACA,OAAA,SAAA,MAAA,uBAAA;AACA,OAAA,OAAA,MAAA,kBAAA;;AAEA,IAAMA,aAAa,GAAG,SAAhBA,aAAgB,CAAA,IAAA,EAAA;AAAA,MACpBC,QADoB,GAAA,IAAA,CAAA,QAAA;AAAA,MAEpBC,SAFoB,GAAA,IAAA,CAAA,SAAA;AAAA,MAGpBC,SAHoB,GAAA,IAAA,CAAA,SAAA;AAAA,MAIpBC,OAJoB,GAAA,IAAA,CAAA,OAAA;AAAA,MAKjBC,KALiB,GAAA,wBAAA,CAAA,IAAA,EAAA,CAAA,UAAA,EAAA,WAAA,EAAA,WAAA,EAAA,SAAA,CAAA,CAAA;;AAAA,SAAA,aAOpB,KAAA,CAAA,aAAA,CAAA,OAAA,EAAA,QAAA,CAAA,EAAA,EAAA,KAAA,EAAA;AAAoB,IAAA,SAAS,EAAEC,UAAU,CAAA,iBAAA,EAAA,SAAA;AAAzC,GAAA,CAAA,EAAA,QAAA,EAEGH,SAAS,IAAA,aAAI,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAQ,IAAA,MAAM,EAAd,IAAA;AAAe,IAAA,OAAO,EAAEC;AAAxB,GAAA,CAFhB,CAPoB;AAAtB,CAAA;;AAaAJ,aAAa,CAAbA,SAAAA,GAAAA,aAAAA,CAAAA,aAAAA,CAAAA,EAAAA,EACKO,SAAS,CADdP,SAAAA,CAAAA,EAAAA,EAAAA,EAAAA;AAEEC,EAAAA,QAAQ,EAAEO,SAAS,CAFrBR,IAAAA;AAGEE,EAAAA,SAAS,EAAEM,SAAS,CAHtBR,MAAAA;AAIES,EAAAA,KAAK,EAAED,SAAS,CAATA,KAAAA,CAJTR,EAISQ,CAJTR;AAKEG,EAAAA,SAAS,EAAEK,SAAS,CALtBR,IAAAA;AAMEI,EAAAA,OAAO,EAAEI,SAAS,CAACE;AANrBV,CAAAA,CAAAA;AASAA,aAAa,CAAbA,YAAAA,GAAAA,aAAAA,CAAAA,aAAAA,CAAAA,EAAAA,EACKO,SAAS,CADdP,YAAAA,CAAAA,EAAAA,EAAAA,EAAAA;AAEEC,EAAAA,QAAQ,EAFVD,IAAAA;AAGEE,EAAAA,SAAS,EAHXF,SAAAA;AAIES,EAAAA,KAAK,EAJPT,SAAAA;AAKEG,EAAAA,SAAS,EALXH,IAAAA;AAMEI,EAAAA,OAAO,EANTJ,SAAAA;AAOEW,EAAAA,QAAQ,EAAE;AAPZX,CAAAA,CAAAA;AAUA,eAAA,aAAA","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nimport Button from '../../../button';\nimport modifiers from '../../../../modifiers';\nimport Element from '../../../element';\n\nconst ModalCardHead = ({\n  children,\n  className,\n  showClose,\n  onClose,\n  ...props\n}) => (\n  <Element {...props} className={classnames('modal-card-head', className)}>\n    {children}\n    {showClose && <Button remove onClick={onClose} />}\n  </Element>\n);\n\nModalCardHead.propTypes = {\n  ...modifiers.propTypes,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  style: PropTypes.shape({}),\n  showClose: PropTypes.bool,\n  onClose: PropTypes.func,\n};\n\nModalCardHead.defaultProps = {\n  ...modifiers.defaultProps,\n  children: null,\n  className: undefined,\n  style: undefined,\n  showClose: true,\n  onClose: undefined,\n  renderAs: 'header',\n};\n\nexport default ModalCardHead;\n"]},"metadata":{},"sourceType":"module"}
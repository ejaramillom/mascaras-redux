{"ast":null,"code":"var _jsxFileName = \"/home/leon/Documentos/proyectos/react/mascaras/client/src/components/Build.component.js\";\nimport React, { useState, useEffect } from 'react';\nimport '../App.css';\nimport Button from 'react-bulma-components/lib/components/button';\nimport Section from 'react-bulma-components/lib/components/section';\nimport Container from 'react-bulma-components/lib/components/container';\nimport Heading from 'react-bulma-components/lib/components/heading';\nimport Tile from 'react-bulma-components/lib/components/tile';\nimport MascaraBuild from './MascaraBuild.component';\nimport { BottleModal, BrushModal, RodModal, CapModal, WiperModal } from './OpenModal.component';\nimport { ThreadCompatibility, BrushRodCompatibility, BrushWiperCompatibility, GapCompatibility } from './Compatibility.component';\nimport axios from \"axios\";\n\nconst Build = () => {\n  //------hooks\n  const [thread, setThread] = useState(false);\n  const [rodBrush, setRodBrush] = useState(false);\n  const [brushWiper, setBrushWiper] = useState(false);\n  const [gap, setGap] = useState(false);\n  const [build, setBuild] = useState([]);\n  const [bottle, setBottle] = useState([]);\n  const [rod, setRod] = useState([]);\n  const [brush, setBrush] = useState([]);\n  const [modalClick, setModalClick] = useState(false); //------hooks end\n  //------useEffect\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const {\n        data\n      } = await axios.get(\"/build\").catch(function (error) {\n        console.log(error);\n      });\n      setBuild(data);\n\n      if (data[0] && data[0].bottle) {\n        setBottle(data[0].bottle);\n      } else {\n        setBottle([]);\n      }\n\n      if (data[0] && data[0].rod) {\n        setRod(data[0].rod);\n      } else {\n        setRod([]);\n      }\n\n      if (data[0] && data[0].brush) {\n        setBrush(data[0].brush);\n      } else {\n        setBrush([]);\n      }\n    };\n\n    fetchData();\n\n    if (!build[0]) {\n      setThread(false);\n      setGap(false);\n      setBrushWiper(false);\n      setRodBrush(false);\n    } //------thread check\n\n\n    if (build[0] && bottle && rod) {\n      if (bottle.thread === rod.thread) {\n        setThread(true);\n      } else {\n        setThread(false);\n      }\n    } //------thread check\n    //------rod and brush check\n\n\n    if (build[0] && brush && rod) {\n      let brushRodDiff = Number(rod.dimensions.brushDiameter) - Number(brush.shaftDiameter);\n\n      if (brush.type === \"INYECTADO\") {\n        if (brushRodDiff > 0.05 && brushRodDiff < 0.15) {\n          setRodBrush(true);\n        } else {\n          setRodBrush(false);\n        }\n      }\n\n      if (brush.type === \"NYLON\") {\n        if (brushRodDiff > -0.05 && brushRodDiff < 0.1) {\n          setRodBrush(true);\n        } else {\n          setRodBrush(false);\n        }\n      }\n\n      if (brush.type === \"LIP GLOSS\") {\n        if (brushRodDiff > 0 && brushRodDiff < 0.2) {\n          setRodBrush(true);\n        } else {\n          setRodBrush(false);\n        }\n      }\n\n      if (brush.type === \"DELINEADOR\") {\n        if (brushRodDiff > -0.05 && brushRodDiff < 0.1) {\n          setRodBrush(true);\n        } else {\n          setRodBrush(false);\n        }\n      }\n    } //------rod and brush check\n    //------wiper and brush check\n\n\n    if (build[0] && brush && rod) {\n      let brushWiperDiff = Number(brush.brushDiameter) - Number(rod.dimensions.rodDiameter);\n\n      if (brush.type === \"INYECTADO\") {\n        if (brushWiperDiff > 0.5 && brushWiperDiff < 4.8) {\n          setBrushWiper(true);\n        } else {\n          setBrushWiper(false);\n        }\n      }\n\n      if (brush.type === \"NYLON\") {\n        if (brushWiperDiff > 0.8 && brushWiperDiff < 6.4) {\n          setBrushWiper(true);\n        } else {\n          setBrushWiper(false);\n        }\n      }\n\n      if (brush.type === \"LIP GLOSS\") {\n        if (brushWiperDiff > -3 && brushWiperDiff < 2) {\n          setBrushWiper(true);\n        } else {\n          setBrushWiper(false);\n        }\n      }\n\n      if (brush.type === \"DELINEADOR\") {\n        if (brushWiperDiff > 1 && brushWiperDiff < 2) {\n          setBrushWiper(true);\n        } else {\n          setBrushWiper(false);\n        }\n      }\n    } //------wiper and brush check\n    //------gap check\n    //------gap check\n\n  }, [modalClick]); //------useEffect end\n  //------middlewares that must be moved and imported\n\n  const deleteBuild = async () => {\n    await axios.post(\"/delete\").then(function (response) {\n      if (response.status === 200) {\n        console.log(\"Succesfully deleted\");\n        setThread(false);\n        setGap(false);\n        setBrushWiper(false);\n        setRodBrush(false);\n        alert(\"Build deleted!\");\n      } else {\n        const err = new Error(response.error);\n        console.log(err);\n        throw err;\n      }\n    }).catch(function (error) {\n      alert(error);\n    });\n  };\n\n  const verifyThread = () => {\n    if (build[0] && bottle && rod) {\n      if (bottle.thread === rod.thread) {\n        setThread(true);\n      } else {\n        alert(\"Threads are different\");\n        setThread(false);\n      }\n    } else {\n      alert(\"There is missing data on the mascara\");\n    }\n  };\n\n  const verifyRodBrush = () => {\n    if (build[0] && brush && rod) {\n      let brushRodDiff = Number(rod.dimensions.brushDiameter) - Number(brush.shaftDiameter);\n\n      if (brush.type === \"INYECTADO\") {\n        if (brushRodDiff > 0.05 && brushRodDiff < 0.15) {\n          setRodBrush(true);\n        } else {\n          alert(\"Difference is lower than 0.05mm or bigger than 0.15mm\");\n        }\n      }\n\n      if (brush.type === \"NYLON\") {\n        if (brushRodDiff > -0.05 && brushRodDiff < 0.1) {\n          setRodBrush(true);\n        } else {\n          alert(\"Difference is lower than -0.05mm or bigger than 0.1mm\");\n        }\n      }\n\n      if (brush.type === \"LIP GLOSS\") {\n        if (brushRodDiff > 0 && brushRodDiff < 0.2) {\n          setRodBrush(true);\n        } else {\n          alert(\"Difference is lower than 0mm or bigger than 0.2mm\");\n        }\n      }\n\n      if (brush.type === \"DELINEADOR\") {\n        if (brushRodDiff > -0.05 && brushRodDiff < 0.1) {\n          setRodBrush(true);\n        } else {\n          alert(\"Difference is lower than -0.05mm or bigger than 0.1mm\");\n        }\n      }\n    } else {\n      alert(\"There is missing data on the mascara\");\n    }\n  };\n\n  const verifyBrushWiper = () => {\n    if (build[0] && brush && rod) {\n      let brushWiperDiff = Number(brush.brushDiameter) - Number(rod.dimensions.rodDiameter);\n\n      if (brush.type === \"INYECTADO\") {\n        if (brushWiperDiff > 0.5 && brushWiperDiff < 4.8) {\n          setBrushWiper(true);\n        } else {\n          alert(\"Difference is lower than 0.5mm or bigger than 4.8mm\");\n        }\n      }\n\n      if (brush.type === \"NYLON\") {\n        if (brushWiperDiff > 0.8 && brushWiperDiff < 6.4) {\n          setBrushWiper(true);\n        } else {\n          alert(\"Difference is lower than 0.8mm or bigger than 6.4mm\");\n        }\n      }\n\n      if (brush.type === \"LIP GLOSS\") {\n        if (brushWiperDiff > -3 && brushWiperDiff < 2) {\n          setBrushWiper(true);\n        } else {\n          alert(\"Difference is lower than -3mm or bigger than 2mm\");\n        }\n      }\n\n      if (brush.type === \"DELINEADOR\") {\n        if (brushWiperDiff > 1 && brushWiperDiff < 2) {\n          setBrushWiper(true);\n        } else {\n          alert(\"Difference is lower than 1mm or bigger than 2mm\");\n        }\n      }\n    } else {\n      alert(\"There is missing build on the mascara\");\n    }\n  };\n\n  const verifyGap = () => {\n    if (build[0] && bottle && rod) {\n      if (bottle.thread === rod.thread) {\n        setGap(true);\n      } else {\n        setGap(false);\n      }\n    } else {\n      alert(\"There is missing data on the mascara\");\n    }\n  };\n\n  const reset = () => {\n    setThread(false);\n    setGap(false);\n    setBrushWiper(false);\n    setRodBrush(false);\n  }; //------middlewares that must be moved and imported end\n  //------rendering of the component\n\n\n  return {\n    /* verifying assembly tiles*/\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App App-build\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Tile, {\n    kind: \"ancestor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Tile, {\n    kind: \"parent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Tile, {\n    renderAs: \"article\",\n    kind: \"child\",\n    notification: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ThreadCompatibility, {\n    thread: thread,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Tile, {\n    renderAs: \"article\",\n    kind: \"child\",\n    notification: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(BrushRodCompatibility, {\n    rodBrush: rodBrush,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Tile, {\n    renderAs: \"article\",\n    kind: \"child\",\n    notification: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(BrushWiperCompatibility, {\n    brushWiper: brushWiper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Tile, {\n    renderAs: \"article\",\n    kind: \"child\",\n    notification: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(GapCompatibility, {\n    gap: gap,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(MascaraBuild, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Button.Group, {\n    position: \"centered\",\n    size: \"medium\",\n    onClick: () => setModalClick(!modalClick),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(BottleModal, {\n    rod: rod,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(BrushModal, {\n    rod: rod,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(RodModal, {\n    bottle: bottle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Section, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button.Group, {\n    position: \"centered\",\n    size: \"medium\",\n    onClick: () => setModalClick(!modalClick),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"danger\",\n    onClick: () => {\n      deleteBuild();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 21\n    }\n  }, \"Erase build\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"info\",\n    onClick: () => {\n      reset();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 21\n    }\n  }, \"Reset\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"info\",\n    onClick: () => {\n      setRodBrush(true);\n      setThread(true);\n      setBrushWiper(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 21\n    }\n  }, \"Check state\")))));\n}; //------here ends rendering of the component\n\n\nexport default Build;","map":{"version":3,"sources":["/home/leon/Documentos/proyectos/react/mascaras/client/src/components/Build.component.js"],"names":["React","useState","useEffect","Button","Section","Container","Heading","Tile","MascaraBuild","BottleModal","BrushModal","RodModal","CapModal","WiperModal","ThreadCompatibility","BrushRodCompatibility","BrushWiperCompatibility","GapCompatibility","axios","Build","thread","setThread","rodBrush","setRodBrush","brushWiper","setBrushWiper","gap","setGap","build","setBuild","bottle","setBottle","rod","setRod","brush","setBrush","modalClick","setModalClick","fetchData","data","get","catch","error","console","log","brushRodDiff","Number","dimensions","brushDiameter","shaftDiameter","type","brushWiperDiff","rodDiameter","deleteBuild","post","then","response","status","alert","err","Error","verifyThread","verifyRodBrush","verifyBrushWiper","verifyGap","reset"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport '../App.css';\nimport Button from 'react-bulma-components/lib/components/button';\nimport Section from 'react-bulma-components/lib/components/section';\nimport Container from 'react-bulma-components/lib/components/container';\nimport Heading from 'react-bulma-components/lib/components/heading';\nimport Tile from 'react-bulma-components/lib/components/tile';\nimport MascaraBuild from './MascaraBuild.component';\nimport {\n  BottleModal,\n  BrushModal,\n  RodModal,\n  CapModal,\n  WiperModal\n} from './OpenModal.component';\nimport {\n  ThreadCompatibility,\n  BrushRodCompatibility,\n  BrushWiperCompatibility,\n  GapCompatibility,\n} from './Compatibility.component';\nimport axios from \"axios\";\n\nconst Build = () => {\n\n  //------hooks\n  const [thread, setThread] = useState(false);\n  const [rodBrush, setRodBrush] = useState(false);\n  const [brushWiper, setBrushWiper] = useState(false);\n  const [gap, setGap] = useState(false);\n  const [build, setBuild] = useState([]);\n  const [bottle, setBottle] = useState([]);\n  const [rod, setRod] = useState([]);\n  const [brush, setBrush] = useState([]);\n  const [modalClick, setModalClick] = useState(false);\n  //------hooks end\n\n  //------useEffect\n  useEffect(() => {\n    const fetchData = async () => {\n      const {data} = await axios.get(\"/build\")\n      .catch(function (error) {\n        console.log(error)\n      });\n      setBuild(data);\n      if (data[0] && data[0].bottle) {\n        setBottle(data[0].bottle);\n      } else {\n        setBottle([])\n      }\n      if (data[0] && data[0].rod) {\n        setRod(data[0].rod);\n      } else {\n        setRod([])\n      }\n      if (data[0] && data[0].brush) {\n        setBrush(data[0].brush);\n      } else {\n        setBrush([])\n      }\n    }\n    fetchData();\n\n    if (!build[0]) {\n      setThread(false);\n      setGap(false);\n      setBrushWiper(false);\n      setRodBrush(false);\n    }\n\n    //------thread check\n    if (build[0] && bottle && rod) {\n      if (bottle.thread === rod.thread) {\n        setThread(true);\n      } else {\n        setThread(false);\n      }\n    }\n    //------thread check\n\n    //------rod and brush check\n    if (build[0] && brush && rod) {\n      let brushRodDiff =  Number(rod.dimensions.brushDiameter) - Number(brush.shaftDiameter);\n      if (brush.type === \"INYECTADO\") {\n        if (brushRodDiff > 0.05 && brushRodDiff < 0.15){\n          setRodBrush(true);\n        } else {\n          setRodBrush(false);\n        }\n      }\n      if (brush.type === \"NYLON\") {\n        if (brushRodDiff > -0.05 && brushRodDiff < 0.1){\n          setRodBrush(true);\n        } else {\n          setRodBrush(false);\n        }\n      }\n      if (brush.type === \"LIP GLOSS\") {\n        if (brushRodDiff > 0 && brushRodDiff < 0.2){\n          setRodBrush(true);\n        } else {\n          setRodBrush(false);\n        }\n      }\n      if (brush.type === \"DELINEADOR\") {\n        if (brushRodDiff > -0.05 && brushRodDiff < 0.1){\n          setRodBrush(true);\n        } else {\n          setRodBrush(false);\n        }\n      }\n    }\n    //------rod and brush check\n\n    //------wiper and brush check\n    if (build[0] && brush && rod) {\n      let brushWiperDiff =  Number(brush.brushDiameter) - Number(rod.dimensions.rodDiameter) ;\n      if (brush.type === \"INYECTADO\") {\n        if (brushWiperDiff > 0.5 && brushWiperDiff < 4.8){\n          setBrushWiper(true);\n        } else {\n          setBrushWiper(false);\n        }\n      }\n      if (brush.type === \"NYLON\") {\n        if (brushWiperDiff > 0.8 && brushWiperDiff < 6.4){\n          setBrushWiper(true);\n        } else {\n          setBrushWiper(false);\n        }\n      }\n      if (brush.type === \"LIP GLOSS\") {\n        if (brushWiperDiff > -3 && brushWiperDiff < 2){\n          setBrushWiper(true);\n        } else {\n          setBrushWiper(false);\n        }\n      }\n      if (brush.type === \"DELINEADOR\") {\n        if (brushWiperDiff > 1 && brushWiperDiff < 2){\n          setBrushWiper(true);\n        } else {\n          setBrushWiper(false);\n        }\n      }\n    }\n    //------wiper and brush check\n    //------gap check\n\n\n\n    //------gap check\n\n  }, [modalClick]);\n  //------useEffect end\n\n  //------middlewares that must be moved and imported\n  const deleteBuild = async () => {\n    await axios.post(\"/delete\")\n    .then(function (response) {\n      if (response.status === 200) {\n        console.log(\"Succesfully deleted\");\n        setThread(false);\n        setGap(false);\n        setBrushWiper(false);\n        setRodBrush(false);\n        alert(\"Build deleted!\");\n      } else {\n        const err = new Error(response.error);\n        console.log(err);\n        throw err;\n      }\n    })\n    .catch(function (error) {\n      alert(error);\n    });\n  };\n\n  const verifyThread = () => {\n    if (build[0] && bottle && rod) {\n      if (bottle.thread === rod.thread) {\n        setThread(true);\n      } else {\n        alert(\"Threads are different\")\n        setThread(false);\n      }\n    } else {\n      alert(\"There is missing data on the mascara\")\n    }\n  };\n\n  const verifyRodBrush = () => {\n    if (build[0] && brush && rod) {\n      let brushRodDiff =  Number(rod.dimensions.brushDiameter) - Number(brush.shaftDiameter);\n      if (brush.type === \"INYECTADO\") {\n        if (brushRodDiff > 0.05 && brushRodDiff < 0.15){\n          setRodBrush(true);\n        } else {\n          alert(\"Difference is lower than 0.05mm or bigger than 0.15mm\")\n        }\n      }\n      if (brush.type === \"NYLON\") {\n        if (brushRodDiff > -0.05 && brushRodDiff < 0.1){\n          setRodBrush(true);\n        } else {\n          alert(\"Difference is lower than -0.05mm or bigger than 0.1mm\")\n        }\n      }\n      if (brush.type === \"LIP GLOSS\") {\n        if (brushRodDiff > 0 && brushRodDiff < 0.2){\n          setRodBrush(true);\n        } else {\n          alert(\"Difference is lower than 0mm or bigger than 0.2mm\")\n        }\n      }\n      if (brush.type === \"DELINEADOR\") {\n        if (brushRodDiff > -0.05 && brushRodDiff < 0.1){\n          setRodBrush(true);\n        } else {\n          alert(\"Difference is lower than -0.05mm or bigger than 0.1mm\")\n        }\n      }\n    } else {\n      alert(\"There is missing data on the mascara\")\n    }\n  };\n\n  const verifyBrushWiper = () => {\n    if (build[0] && brush && rod) {\n      let brushWiperDiff =  Number(brush.brushDiameter) - Number(rod.dimensions.rodDiameter) ;\n      if (brush.type === \"INYECTADO\") {\n        if (brushWiperDiff > 0.5 && brushWiperDiff < 4.8){\n          setBrushWiper(true);\n        } else {\n          alert(\"Difference is lower than 0.5mm or bigger than 4.8mm\")\n        }\n      }\n      if (brush.type === \"NYLON\") {\n        if (brushWiperDiff > 0.8 && brushWiperDiff < 6.4){\n          setBrushWiper(true);\n        } else {\n          alert(\"Difference is lower than 0.8mm or bigger than 6.4mm\")\n        }\n      }\n      if (brush.type === \"LIP GLOSS\") {\n        if (brushWiperDiff > -3 && brushWiperDiff < 2){\n          setBrushWiper(true);\n        } else {\n          alert(\"Difference is lower than -3mm or bigger than 2mm\")\n        }\n      }\n      if (brush.type === \"DELINEADOR\") {\n        if (brushWiperDiff > 1 && brushWiperDiff < 2){\n          setBrushWiper(true);\n        } else {\n          alert(\"Difference is lower than 1mm or bigger than 2mm\")\n        }\n      }\n    } else {\n      alert(\"There is missing build on the mascara\")\n    }\n  };\n\n  const verifyGap = () => {\n    if (build[0] && bottle && rod) {\n      if (bottle.thread === rod.thread) {\n        setGap(true);\n      } else {\n        setGap(false);\n      }\n    } else {\n      alert(\"There is missing data on the mascara\")\n    }\n  };\n  const reset = () => {\n    setThread(false);\n    setGap(false);\n    setBrushWiper(false);\n    setRodBrush(false);\n  };\n  //------middlewares that must be moved and imported end\n\n  //------rendering of the component\n  return (\n    {/* verifying assembly tiles*/},\n    <div className=\"App App-build\">\n      <Tile kind=\"ancestor\">\n        <Tile kind=\"parent\">\n          <Tile renderAs=\"article\" kind=\"child\" notification >\n            <ThreadCompatibility thread={thread}>\n            </ThreadCompatibility>\n          </Tile>\n          <Tile renderAs=\"article\" kind=\"child\" notification >\n            <BrushRodCompatibility rodBrush={rodBrush}>\n            </BrushRodCompatibility>\n          </Tile>\n          <Tile renderAs=\"article\" kind=\"child\" notification >\n            <BrushWiperCompatibility brushWiper={brushWiper}>\n            </BrushWiperCompatibility>\n          </Tile>\n          <Tile renderAs=\"article\" kind=\"child\" notification >\n            <GapCompatibility gap={gap}>\n            </GapCompatibility>\n          </Tile>\n        </Tile>\n      </Tile>\n\n  {/* verifying assembly tiles*/}\n\n      <MascaraBuild>\n      </MascaraBuild>\n\n          <Button.Group\n            position=\"centered\"\n            size=\"medium\"\n            onClick={() => setModalClick(!modalClick)}\n          >\n            <BottleModal rod={rod}>\n            </BottleModal>\n            <BrushModal rod={rod}>\n            </BrushModal>\n            <RodModal bottle={bottle}>\n            </RodModal>\n          </Button.Group>\n          {/* check buttons - will be invisibilised*/}\n              <Section>\n                <Container>\n                  <Button.Group\n                    position=\"centered\"\n                    size=\"medium\"\n                    onClick={() => setModalClick(!modalClick)}\n                  >\n                    <Button\n                      color=\"danger\"\n                      onClick={() => {\n                        deleteBuild();\n                      }}\n                    >\n                      Erase build\n                    </Button>\n                    <Button\n                      color=\"info\"\n                      onClick={() => {\n                        reset();\n                      }}\n                    >\n                      Reset\n                    </Button>\n                    <Button\n                      color=\"info\"\n                      onClick={() => {\n                        setRodBrush(true);\n                        setThread(true);\n                        setBrushWiper(true);\n                      }}\n                    >\n                      Check state\n                    </Button>\n                  </Button.Group>\n\n        {/* Check buttons - will be invisibilised*/}\n        </Container>\n      </Section>\n\n    </div>\n  );\n}\n\n//------here ends rendering of the component\n\nexport default Build;\n"]},"metadata":{},"sourceType":"module"}